{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _EventEmitter2 = _interopRequireDefault(require(\"../emitter/EventEmitter\"));\nvar _EventSubscriptionVendor = _interopRequireDefault(require(\"../emitter/EventSubscriptionVendor\"));\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\nvar __DEV__ = process.env.NODE_ENV !== 'production';\nfunction checkNativeEventModule(eventType) {\n  if (eventType) {\n    if (eventType.lastIndexOf('statusBar', 0) === 0) {\n      throw new Error('`' + eventType + '` event should be registered via the StatusBarIOS module');\n    }\n    if (eventType.lastIndexOf('keyboard', 0) === 0) {\n      throw new Error('`' + eventType + '` event should be registered via the Keyboard module');\n    }\n    if (eventType === 'appStateDidChange' || eventType === 'memoryWarning') {\n      throw new Error('`' + eventType + '` event should be registered via the AppState module');\n    }\n  }\n}\nvar RCTDeviceEventEmitter = function (_EventEmitter) {\n  _inheritsLoose(RCTDeviceEventEmitter, _EventEmitter);\n  function RCTDeviceEventEmitter() {\n    var _this;\n    var sharedSubscriber = new _EventSubscriptionVendor.default();\n    _this = _EventEmitter.call(this, sharedSubscriber) || this;\n    _this.sharedSubscriber = sharedSubscriber;\n    return _this;\n  }\n  var _proto = RCTDeviceEventEmitter.prototype;\n  _proto.addListener = function addListener(eventType, listener, context) {\n    if (__DEV__) {\n      checkNativeEventModule(eventType);\n    }\n    return _EventEmitter.prototype.addListener.call(this, eventType, listener, context);\n  };\n  _proto.removeAllListeners = function removeAllListeners(eventType) {\n    if (__DEV__) {\n      checkNativeEventModule(eventType);\n    }\n    _EventEmitter.prototype.removeAllListeners.call(this, eventType);\n  };\n  _proto.removeSubscription = function removeSubscription(subscription) {\n    if (subscription.emitter !== this) {\n      subscription.emitter.removeSubscription(subscription);\n    } else {\n      _EventEmitter.prototype.removeSubscription.call(this, subscription);\n    }\n  };\n  return RCTDeviceEventEmitter;\n}(_EventEmitter2.default);\nvar _default = new RCTDeviceEventEmitter();\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_EventEmitter2","_EventSubscriptionVendor","_inheritsLoose","subClass","superClass","prototype","create","constructor","__proto__","__DEV__","process","env","NODE_ENV","checkNativeEventModule","eventType","lastIndexOf","Error","RCTDeviceEventEmitter","_EventEmitter","_this","sharedSubscriber","EventSubscriptionVendor","call","_proto","addListener","listener","context","removeAllListeners","removeSubscription","subscription","emitter","EventEmitter","_default"],"sources":["C:/Users/DELL/Downloads/ltmobile/ltmobile/muvi-master/node_modules/react-native-web/dist/vendor/react-native/NativeEventEmitter/RCTDeviceEventEmitter.js"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n */\n'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nimport EventEmitter from '../emitter/EventEmitter';\nimport EventSubscriptionVendor from '../emitter/EventSubscriptionVendor';\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nfunction checkNativeEventModule(eventType) {\n  if (eventType) {\n    if (eventType.lastIndexOf('statusBar', 0) === 0) {\n      throw new Error('`' + eventType + '` event should be registered via the StatusBarIOS module');\n    }\n\n    if (eventType.lastIndexOf('keyboard', 0) === 0) {\n      throw new Error('`' + eventType + '` event should be registered via the Keyboard module');\n    }\n\n    if (eventType === 'appStateDidChange' || eventType === 'memoryWarning') {\n      throw new Error('`' + eventType + '` event should be registered via the AppState module');\n    }\n  }\n}\n/**\n * Deprecated - subclass NativeEventEmitter to create granular event modules instead of\n * adding all event listeners directly to RCTDeviceEventEmitter.\n */\n\n\nvar RCTDeviceEventEmitter =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inheritsLoose(RCTDeviceEventEmitter, _EventEmitter);\n\n  function RCTDeviceEventEmitter() {\n    var _this;\n\n    var sharedSubscriber = new EventSubscriptionVendor();\n    _this = _EventEmitter.call(this, sharedSubscriber) || this;\n    _this.sharedSubscriber = sharedSubscriber;\n    return _this;\n  }\n\n  var _proto = RCTDeviceEventEmitter.prototype;\n\n  _proto.addListener = function addListener(eventType, listener, context) {\n    if (__DEV__) {\n      checkNativeEventModule(eventType);\n    }\n\n    return _EventEmitter.prototype.addListener.call(this, eventType, listener, context);\n  };\n\n  _proto.removeAllListeners = function removeAllListeners(eventType) {\n    if (__DEV__) {\n      checkNativeEventModule(eventType);\n    }\n\n    _EventEmitter.prototype.removeAllListeners.call(this, eventType);\n  };\n\n  _proto.removeSubscription = function removeSubscription(subscription) {\n    if (subscription.emitter !== this) {\n      subscription.emitter.removeSubscription(subscription);\n    } else {\n      _EventEmitter.prototype.removeSubscription.call(this, subscription);\n    }\n  };\n\n  return RCTDeviceEventEmitter;\n}(EventEmitter);\n\nexport default new RCTDeviceEventEmitter();"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}