{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _elements = require(\"@react-navigation/elements\");\nvar _native = require(\"@react-navigation/native\");\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _ModalPresentationContext = _interopRequireDefault(require(\"../../utils/ModalPresentationContext\"));\nvar _useKeyboardManager2 = _interopRequireDefault(require(\"../../utils/useKeyboardManager\"));\nvar _Card = _interopRequireDefault(require(\"./Card\"));\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) { if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } } return n.default = e, t && t.set(e, n), n; }\nvar EPSILON = 0.1;\nfunction CardContainer(_ref) {\n  var interpolationIndex = _ref.interpolationIndex,\n    index = _ref.index,\n    active = _ref.active,\n    closing = _ref.closing,\n    gesture = _ref.gesture,\n    focused = _ref.focused,\n    modal = _ref.modal,\n    getPreviousScene = _ref.getPreviousScene,\n    getFocusedRoute = _ref.getFocusedRoute,\n    headerDarkContent = _ref.headerDarkContent,\n    hasAbsoluteFloatHeader = _ref.hasAbsoluteFloatHeader,\n    headerHeight = _ref.headerHeight,\n    onHeaderHeightChange = _ref.onHeaderHeightChange,\n    isParentHeaderShown = _ref.isParentHeaderShown,\n    isNextScreenTransparent = _ref.isNextScreenTransparent,\n    detachCurrentScreen = _ref.detachCurrentScreen,\n    layout = _ref.layout,\n    onCloseRoute = _ref.onCloseRoute,\n    onOpenRoute = _ref.onOpenRoute,\n    onGestureCancel = _ref.onGestureCancel,\n    onGestureEnd = _ref.onGestureEnd,\n    onGestureStart = _ref.onGestureStart,\n    onTransitionEnd = _ref.onTransitionEnd,\n    onTransitionStart = _ref.onTransitionStart,\n    renderHeader = _ref.renderHeader,\n    renderScene = _ref.renderScene,\n    safeAreaInsetBottom = _ref.safeAreaInsetBottom,\n    safeAreaInsetLeft = _ref.safeAreaInsetLeft,\n    safeAreaInsetRight = _ref.safeAreaInsetRight,\n    safeAreaInsetTop = _ref.safeAreaInsetTop,\n    scene = _ref.scene;\n  var parentHeaderHeight = React.useContext(_elements.HeaderHeightContext);\n  var _useKeyboardManager = (0, _useKeyboardManager2.default)(React.useCallback(function () {\n      var _scene$descriptor = scene.descriptor,\n        options = _scene$descriptor.options,\n        navigation = _scene$descriptor.navigation;\n      return navigation.isFocused() && options.keyboardHandlingEnabled !== false;\n    }, [scene.descriptor])),\n    onPageChangeStart = _useKeyboardManager.onPageChangeStart,\n    onPageChangeCancel = _useKeyboardManager.onPageChangeCancel,\n    onPageChangeConfirm = _useKeyboardManager.onPageChangeConfirm;\n  var handleOpen = function handleOpen() {\n    var route = scene.descriptor.route;\n    onTransitionEnd({\n      route: route\n    }, false);\n    onOpenRoute({\n      route: route\n    });\n  };\n  var handleClose = function handleClose() {\n    var route = scene.descriptor.route;\n    onTransitionEnd({\n      route: route\n    }, true);\n    onCloseRoute({\n      route: route\n    });\n  };\n  var handleGestureBegin = function handleGestureBegin() {\n    var route = scene.descriptor.route;\n    onPageChangeStart();\n    onGestureStart({\n      route: route\n    });\n  };\n  var handleGestureCanceled = function handleGestureCanceled() {\n    var route = scene.descriptor.route;\n    onPageChangeCancel();\n    onGestureCancel({\n      route: route\n    });\n  };\n  var handleGestureEnd = function handleGestureEnd() {\n    var route = scene.descriptor.route;\n    onGestureEnd({\n      route: route\n    });\n  };\n  var handleTransition = function handleTransition(_ref2) {\n    var closing = _ref2.closing,\n      gesture = _ref2.gesture;\n    var route = scene.descriptor.route;\n    if (!gesture) {\n      onPageChangeConfirm === null || onPageChangeConfirm === void 0 ? void 0 : onPageChangeConfirm(true);\n    } else if (active && closing) {\n      onPageChangeConfirm === null || onPageChangeConfirm === void 0 ? void 0 : onPageChangeConfirm(false);\n    } else {\n      onPageChangeCancel === null || onPageChangeCancel === void 0 ? void 0 : onPageChangeCancel();\n    }\n    onTransitionStart === null || onTransitionStart === void 0 ? void 0 : onTransitionStart({\n      route: route\n    }, closing);\n  };\n  var insets = {\n    top: safeAreaInsetTop,\n    right: safeAreaInsetRight,\n    bottom: safeAreaInsetBottom,\n    left: safeAreaInsetLeft\n  };\n  var _useTheme = (0, _native.useTheme)(),\n    colors = _useTheme.colors;\n  var _React$useState = React.useState('box-none'),\n    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n    pointerEvents = _React$useState2[0],\n    setPointerEvents = _React$useState2[1];\n  React.useEffect(function () {\n    var _scene$progress$next, _scene$progress$next$;\n    var listener = (_scene$progress$next = scene.progress.next) === null || _scene$progress$next === void 0 ? void 0 : (_scene$progress$next$ = _scene$progress$next.addListener) === null || _scene$progress$next$ === void 0 ? void 0 : _scene$progress$next$.call(_scene$progress$next, function (_ref3) {\n      var value = _ref3.value;\n      setPointerEvents(value <= EPSILON ? 'box-none' : 'none');\n    });\n    return function () {\n      if (listener) {\n        var _scene$progress$next2, _scene$progress$next3;\n        (_scene$progress$next2 = scene.progress.next) === null || _scene$progress$next2 === void 0 ? void 0 : (_scene$progress$next3 = _scene$progress$next2.removeListener) === null || _scene$progress$next3 === void 0 ? void 0 : _scene$progress$next3.call(_scene$progress$next2, listener);\n      }\n    };\n  }, [pointerEvents, scene.progress.next]);\n  var _scene$descriptor$opt = scene.descriptor.options,\n    presentation = _scene$descriptor$opt.presentation,\n    animationEnabled = _scene$descriptor$opt.animationEnabled,\n    cardOverlay = _scene$descriptor$opt.cardOverlay,\n    cardOverlayEnabled = _scene$descriptor$opt.cardOverlayEnabled,\n    cardShadowEnabled = _scene$descriptor$opt.cardShadowEnabled,\n    cardStyle = _scene$descriptor$opt.cardStyle,\n    cardStyleInterpolator = _scene$descriptor$opt.cardStyleInterpolator,\n    gestureDirection = _scene$descriptor$opt.gestureDirection,\n    gestureEnabled = _scene$descriptor$opt.gestureEnabled,\n    gestureResponseDistance = _scene$descriptor$opt.gestureResponseDistance,\n    gestureVelocityImpact = _scene$descriptor$opt.gestureVelocityImpact,\n    headerMode = _scene$descriptor$opt.headerMode,\n    headerShown = _scene$descriptor$opt.headerShown,\n    transitionSpec = _scene$descriptor$opt.transitionSpec;\n  var previousScene = getPreviousScene({\n    route: scene.descriptor.route\n  });\n  var backTitle;\n  if (previousScene) {\n    var _previousScene$descri = previousScene.descriptor,\n      options = _previousScene$descri.options,\n      route = _previousScene$descri.route;\n    backTitle = (0, _elements.getHeaderTitle)(options, route.name);\n  }\n  var headerBack = React.useMemo(function () {\n    return backTitle !== undefined ? {\n      title: backTitle\n    } : undefined;\n  }, [backTitle]);\n  return React.createElement(_Card.default, {\n    interpolationIndex: interpolationIndex,\n    gestureDirection: gestureDirection,\n    layout: layout,\n    insets: insets,\n    gesture: gesture,\n    current: scene.progress.current,\n    next: scene.progress.next,\n    closing: closing,\n    onOpen: handleOpen,\n    onClose: handleClose,\n    overlay: cardOverlay,\n    overlayEnabled: cardOverlayEnabled,\n    shadowEnabled: cardShadowEnabled,\n    onTransition: handleTransition,\n    onGestureBegin: handleGestureBegin,\n    onGestureCanceled: handleGestureCanceled,\n    onGestureEnd: handleGestureEnd,\n    gestureEnabled: index === 0 ? false : gestureEnabled,\n    gestureResponseDistance: gestureResponseDistance,\n    gestureVelocityImpact: gestureVelocityImpact,\n    transitionSpec: transitionSpec,\n    styleInterpolator: cardStyleInterpolator,\n    accessibilityElementsHidden: !focused,\n    importantForAccessibility: focused ? 'auto' : 'no-hide-descendants',\n    pointerEvents: active ? 'box-none' : pointerEvents,\n    pageOverflowEnabled: headerMode !== 'float' && presentation !== 'modal',\n    headerDarkContent: headerDarkContent,\n    containerStyle: hasAbsoluteFloatHeader && headerMode !== 'screen' ? {\n      marginTop: headerHeight\n    } : null,\n    contentStyle: [{\n      backgroundColor: presentation === 'transparentModal' ? 'transparent' : colors.background\n    }, cardStyle],\n    style: [{\n      overflow: active ? undefined : 'hidden',\n      display: animationEnabled === false && isNextScreenTransparent === false && detachCurrentScreen !== false && !focused ? 'none' : 'flex'\n    }, _reactNative.StyleSheet.absoluteFill]\n  }, React.createElement(_reactNative.View, {\n    style: styles.container\n  }, React.createElement(_ModalPresentationContext.default.Provider, {\n    value: modal\n  }, React.createElement(_reactNative.View, {\n    style: styles.scene\n  }, React.createElement(_elements.HeaderBackContext.Provider, {\n    value: headerBack\n  }, React.createElement(_elements.HeaderShownContext.Provider, {\n    value: isParentHeaderShown || headerShown !== false\n  }, React.createElement(_elements.HeaderHeightContext.Provider, {\n    value: headerShown ? headerHeight : parentHeaderHeight !== null && parentHeaderHeight !== void 0 ? parentHeaderHeight : 0\n  }, renderScene({\n    route: scene.descriptor.route\n  }))))), headerMode !== 'float' ? renderHeader({\n    mode: 'screen',\n    layout: layout,\n    scenes: [previousScene, scene],\n    getPreviousScene: getPreviousScene,\n    getFocusedRoute: getFocusedRoute,\n    onContentHeightChange: onHeaderHeightChange\n  }) : null)));\n}\nvar _default = React.memo(CardContainer);\nexports.default = _default;\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column-reverse'\n  },\n  scene: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["_elements","require","_native","React","_interopRequireWildcard","_reactNative","_ModalPresentationContext","_interopRequireDefault","_useKeyboardManager2","_Card","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","EPSILON","CardContainer","_ref","interpolationIndex","index","active","closing","gesture","focused","modal","getPreviousScene","getFocusedRoute","headerDarkContent","hasAbsoluteFloatHeader","headerHeight","onHeaderHeightChange","isParentHeaderShown","isNextScreenTransparent","detachCurrentScreen","layout","onCloseRoute","onOpenRoute","onGestureCancel","onGestureEnd","onGestureStart","onTransitionEnd","onTransitionStart","renderHeader","renderScene","safeAreaInsetBottom","safeAreaInsetLeft","safeAreaInsetRight","safeAreaInsetTop","scene","parentHeaderHeight","useContext","HeaderHeightContext","_useKeyboardManager","useKeyboardManager","useCallback","_scene$descriptor","descriptor","options","navigation","isFocused","keyboardHandlingEnabled","onPageChangeStart","onPageChangeCancel","onPageChangeConfirm","handleOpen","route","handleClose","handleGestureBegin","handleGestureCanceled","handleGestureEnd","handleTransition","_ref2","insets","top","right","bottom","left","_useTheme","useTheme","colors","_React$useState","useState","_React$useState2","_slicedToArray2","pointerEvents","setPointerEvents","useEffect","_scene$progress$next","_scene$progress$next$","listener","progress","next","addListener","_ref3","value","_scene$progress$next2","_scene$progress$next3","removeListener","_scene$descriptor$opt","presentation","animationEnabled","cardOverlay","cardOverlayEnabled","cardShadowEnabled","cardStyle","cardStyleInterpolator","gestureDirection","gestureEnabled","gestureResponseDistance","gestureVelocityImpact","headerMode","headerShown","transitionSpec","previousScene","backTitle","_previousScene$descri","getHeaderTitle","name","headerBack","useMemo","undefined","title","createElement","Card","current","onOpen","onClose","overlay","overlayEnabled","shadowEnabled","onTransition","onGestureBegin","onGestureCanceled","styleInterpolator","accessibilityElementsHidden","importantForAccessibility","pageOverflowEnabled","containerStyle","marginTop","contentStyle","backgroundColor","background","style","overflow","display","StyleSheet","absoluteFill","View","styles","container","ModalPresentationContext","Provider","HeaderBackContext","HeaderShownContext","mode","scenes","onContentHeightChange","_default","memo","exports","create","flex","flexDirection"],"sources":["C:\\Users\\DELL\\Downloads\\ltmobile\\ltmobile\\muvi-master\\node_modules\\@react-navigation\\stack\\lib\\module\\views\\Stack\\CardContainer.tsx"],"sourcesContent":["import {\n  getHeaderTitle,\n  HeaderBackContext,\n  HeaderHeightContext,\n  HeaderShownContext,\n} from '@react-navigation/elements';\nimport { Route, useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\n\nimport type { Layout, Scene } from '../../types';\nimport ModalPresentationContext from '../../utils/ModalPresentationContext';\nimport useKeyboardManager from '../../utils/useKeyboardManager';\nimport type { Props as HeaderContainerProps } from '../Header/HeaderContainer';\nimport Card from './Card';\n\ntype Props = {\n  interpolationIndex: number;\n  index: number;\n  active: boolean;\n  focused: boolean;\n  closing: boolean;\n  modal: boolean;\n  layout: Layout;\n  gesture: Animated.Value;\n  scene: Scene;\n  headerDarkContent: boolean | undefined;\n  safeAreaInsetTop: number;\n  safeAreaInsetRight: number;\n  safeAreaInsetBottom: number;\n  safeAreaInsetLeft: number;\n  getPreviousScene: (props: { route: Route<string> }) => Scene | undefined;\n  getFocusedRoute: () => Route<string>;\n  renderHeader: (props: HeaderContainerProps) => React.ReactNode;\n  renderScene: (props: { route: Route<string> }) => React.ReactNode;\n  onOpenRoute: (props: { route: Route<string> }) => void;\n  onCloseRoute: (props: { route: Route<string> }) => void;\n  onTransitionStart: (\n    props: { route: Route<string> },\n    closing: boolean\n  ) => void;\n  onTransitionEnd: (props: { route: Route<string> }, closing: boolean) => void;\n  onGestureStart: (props: { route: Route<string> }) => void;\n  onGestureEnd: (props: { route: Route<string> }) => void;\n  onGestureCancel: (props: { route: Route<string> }) => void;\n  hasAbsoluteFloatHeader: boolean;\n  headerHeight: number;\n  onHeaderHeightChange: (props: {\n    route: Route<string>;\n    height: number;\n  }) => void;\n  isParentHeaderShown: boolean;\n  isNextScreenTransparent: boolean;\n  detachCurrentScreen: boolean;\n};\n\nconst EPSILON = 0.1;\n\nfunction CardContainer({\n  interpolationIndex,\n  index,\n  active,\n  closing,\n  gesture,\n  focused,\n  modal,\n  getPreviousScene,\n  getFocusedRoute,\n  headerDarkContent,\n  hasAbsoluteFloatHeader,\n  headerHeight,\n  onHeaderHeightChange,\n  isParentHeaderShown,\n  isNextScreenTransparent,\n  detachCurrentScreen,\n  layout,\n  onCloseRoute,\n  onOpenRoute,\n  onGestureCancel,\n  onGestureEnd,\n  onGestureStart,\n  onTransitionEnd,\n  onTransitionStart,\n  renderHeader,\n  renderScene,\n  safeAreaInsetBottom,\n  safeAreaInsetLeft,\n  safeAreaInsetRight,\n  safeAreaInsetTop,\n  scene,\n}: Props) {\n  const parentHeaderHeight = React.useContext(HeaderHeightContext);\n\n  const { onPageChangeStart, onPageChangeCancel, onPageChangeConfirm } =\n    useKeyboardManager(\n      React.useCallback(() => {\n        const { options, navigation } = scene.descriptor;\n\n        return (\n          navigation.isFocused() && options.keyboardHandlingEnabled !== false\n        );\n      }, [scene.descriptor])\n    );\n\n  const handleOpen = () => {\n    const { route } = scene.descriptor;\n\n    onTransitionEnd({ route }, false);\n    onOpenRoute({ route });\n  };\n\n  const handleClose = () => {\n    const { route } = scene.descriptor;\n\n    onTransitionEnd({ route }, true);\n    onCloseRoute({ route });\n  };\n\n  const handleGestureBegin = () => {\n    const { route } = scene.descriptor;\n\n    onPageChangeStart();\n    onGestureStart({ route });\n  };\n\n  const handleGestureCanceled = () => {\n    const { route } = scene.descriptor;\n\n    onPageChangeCancel();\n    onGestureCancel({ route });\n  };\n\n  const handleGestureEnd = () => {\n    const { route } = scene.descriptor;\n\n    onGestureEnd({ route });\n  };\n\n  const handleTransition = ({\n    closing,\n    gesture,\n  }: {\n    closing: boolean;\n    gesture: boolean;\n  }) => {\n    const { route } = scene.descriptor;\n\n    if (!gesture) {\n      onPageChangeConfirm?.(true);\n    } else if (active && closing) {\n      onPageChangeConfirm?.(false);\n    } else {\n      onPageChangeCancel?.();\n    }\n\n    onTransitionStart?.({ route }, closing);\n  };\n\n  const insets = {\n    top: safeAreaInsetTop,\n    right: safeAreaInsetRight,\n    bottom: safeAreaInsetBottom,\n    left: safeAreaInsetLeft,\n  };\n\n  const { colors } = useTheme();\n\n  const [pointerEvents, setPointerEvents] =\n    React.useState<'box-none' | 'none'>('box-none');\n\n  React.useEffect(() => {\n    const listener = scene.progress.next?.addListener?.(\n      ({ value }: { value: number }) => {\n        setPointerEvents(value <= EPSILON ? 'box-none' : 'none');\n      }\n    );\n\n    return () => {\n      if (listener) {\n        scene.progress.next?.removeListener?.(listener);\n      }\n    };\n  }, [pointerEvents, scene.progress.next]);\n\n  const {\n    presentation,\n    animationEnabled,\n    cardOverlay,\n    cardOverlayEnabled,\n    cardShadowEnabled,\n    cardStyle,\n    cardStyleInterpolator,\n    gestureDirection,\n    gestureEnabled,\n    gestureResponseDistance,\n    gestureVelocityImpact,\n    headerMode,\n    headerShown,\n    transitionSpec,\n  } = scene.descriptor.options;\n\n  const previousScene = getPreviousScene({ route: scene.descriptor.route });\n\n  let backTitle: string | undefined;\n\n  if (previousScene) {\n    const { options, route } = previousScene.descriptor;\n\n    backTitle = getHeaderTitle(options, route.name);\n  }\n\n  const headerBack = React.useMemo(\n    () => (backTitle !== undefined ? { title: backTitle } : undefined),\n    [backTitle]\n  );\n\n  return (\n    <Card\n      interpolationIndex={interpolationIndex}\n      gestureDirection={gestureDirection}\n      layout={layout}\n      insets={insets}\n      gesture={gesture}\n      current={scene.progress.current}\n      next={scene.progress.next}\n      closing={closing}\n      onOpen={handleOpen}\n      onClose={handleClose}\n      overlay={cardOverlay}\n      overlayEnabled={cardOverlayEnabled}\n      shadowEnabled={cardShadowEnabled}\n      onTransition={handleTransition}\n      onGestureBegin={handleGestureBegin}\n      onGestureCanceled={handleGestureCanceled}\n      onGestureEnd={handleGestureEnd}\n      gestureEnabled={index === 0 ? false : gestureEnabled}\n      gestureResponseDistance={gestureResponseDistance}\n      gestureVelocityImpact={gestureVelocityImpact}\n      transitionSpec={transitionSpec}\n      styleInterpolator={cardStyleInterpolator}\n      accessibilityElementsHidden={!focused}\n      importantForAccessibility={focused ? 'auto' : 'no-hide-descendants'}\n      pointerEvents={active ? 'box-none' : pointerEvents}\n      pageOverflowEnabled={headerMode !== 'float' && presentation !== 'modal'}\n      headerDarkContent={headerDarkContent}\n      containerStyle={\n        hasAbsoluteFloatHeader && headerMode !== 'screen'\n          ? { marginTop: headerHeight }\n          : null\n      }\n      contentStyle={[\n        {\n          backgroundColor:\n            presentation === 'transparentModal'\n              ? 'transparent'\n              : colors.background,\n        },\n        cardStyle,\n      ]}\n      style={[\n        {\n          // This is necessary to avoid unfocused larger pages increasing scroll area\n          // The issue can be seen on the web when a smaller screen is pushed over a larger one\n          overflow: active ? undefined : 'hidden',\n          display:\n            // Hide unfocused screens when animation isn't enabled\n            // This is also necessary for a11y on web\n            animationEnabled === false &&\n            isNextScreenTransparent === false &&\n            detachCurrentScreen !== false &&\n            !focused\n              ? 'none'\n              : 'flex',\n        },\n        StyleSheet.absoluteFill,\n      ]}\n    >\n      <View style={styles.container}>\n        <ModalPresentationContext.Provider value={modal}>\n          <View style={styles.scene}>\n            <HeaderBackContext.Provider value={headerBack}>\n              <HeaderShownContext.Provider\n                value={isParentHeaderShown || headerShown !== false}\n              >\n                <HeaderHeightContext.Provider\n                  value={headerShown ? headerHeight : parentHeaderHeight ?? 0}\n                >\n                  {renderScene({ route: scene.descriptor.route })}\n                </HeaderHeightContext.Provider>\n              </HeaderShownContext.Provider>\n            </HeaderBackContext.Provider>\n          </View>\n          {headerMode !== 'float'\n            ? renderHeader({\n                mode: 'screen',\n                layout,\n                scenes: [previousScene, scene],\n                getPreviousScene,\n                getFocusedRoute,\n                onContentHeightChange: onHeaderHeightChange,\n              })\n            : null}\n        </ModalPresentationContext.Provider>\n      </View>\n    </Card>\n  );\n}\n\nexport default React.memo(CardContainer);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column-reverse',\n  },\n  scene: {\n    flex: 1,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}