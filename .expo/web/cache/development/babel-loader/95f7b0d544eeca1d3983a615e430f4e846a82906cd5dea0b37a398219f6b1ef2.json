{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getRuntime = exports.getMessageDate = exports.numberWithCommasDecimal = exports.getFlagEmoji = exports.phoneRegex = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _moment = _interopRequireDefault(require(\"moment\"));\nvar phoneRegex = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\nexports.phoneRegex = phoneRegex;\nvar getFlagEmoji = function getFlagEmoji(countryCode) {\n  if (!countryCode) return '?';\n  var codePoints = countryCode.toUpperCase().split('').map(function (char, index) {\n    return 127397 + char.charCodeAt(0);\n  });\n  return String.fromCodePoint.apply(String, (0, _toConsumableArray2.default)(codePoints));\n};\nexports.getFlagEmoji = getFlagEmoji;\nvar numberWithCommasDecimal = function numberWithCommasDecimal(num) {\n  return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};\nexports.numberWithCommasDecimal = numberWithCommasDecimal;\nvar getMessageDate = function getMessageDate(date) {\n  var duration = _moment.default.duration((0, _moment.default)().diff((0, _moment.default)(date, 'YYYY-MM-DD')));\n  if (duration.asDays() >= 2) {\n    return (0, _moment.default)(date).format('MM/DD');\n  }\n  if (duration.asDays() >= 1) {\n    return 'yesterday';\n  }\n  return (0, _moment.default)(date).format('HH:mm');\n};\nexports.getMessageDate = getMessageDate;\nvar getRuntime = function getRuntime(runTime) {\n  if (runTime >= 24 * 60 || runTime < 0) {\n    throw new RangeError('Valid input should be greater than or equal to 0 and less than 1440.');\n  }\n  var h = runTime / 60 | 0,\n    m = runTime % 60 | 0;\n  return h + \"h \" + m + \"m\";\n};\nexports.getRuntime = getRuntime;","map":{"version":3,"names":["_moment","_interopRequireDefault","require","phoneRegex","exports","getFlagEmoji","countryCode","codePoints","toUpperCase","split","map","char","index","charCodeAt","String","fromCodePoint","apply","_toConsumableArray2","default","numberWithCommasDecimal","num","toString","replace","getMessageDate","date","duration","moment","diff","asDays","format","getRuntime","runTime","RangeError","h","m"],"sources":["C:/Users/DELL/Downloads/ltmobile/ltmobile/muvi-master/src/utils/method.ts"],"sourcesContent":["import moment from 'moment';\n\nexport const phoneRegex =\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\nexport const getFlagEmoji = (countryCode?: string) => {\n  if (!countryCode) return '?';\n  const codePoints = countryCode\n    .toUpperCase()\n    .split('')\n    .map((char, index) => 127397 + char.charCodeAt(0));\n  return String.fromCodePoint(...codePoints);\n};\n\nexport const numberWithCommasDecimal = (num: number) => {\n  return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};\n\nexport const getMessageDate = (date: string): string => {\n  const duration = moment.duration(moment().diff(moment(date, 'YYYY-MM-DD')));\n  if (duration.asDays() >= 2) {\n    return moment(date).format('MM/DD');\n  }\n  if (duration.asDays() >= 1) {\n    return 'yesterday';\n  }\n  return moment(date).format('HH:mm');\n};\n\nexport const getRuntime = (runTime: number): string => {\n  if (runTime >= 24 * 60 || runTime < 0) {\n    throw new RangeError(\n      'Valid input should be greater than or equal to 0 and less than 1440.'\n    );\n  }\n  var h = (runTime / 60) | 0,\n    m = runTime % 60 | 0;\n  return `${h}h ${m}m`;\n};\n"],"mappings":";;;;;;AAAA,IAAAA,OAAA,GAAAC,sBAAA,CAAAC,OAAA;AAEO,IAAMC,UAAU,GACrB,yGAAyG;AAACC,OAAA,CAAAD,UAAA,GAAAA,UAAA;AACrG,IAAME,YAAY,GAAG,SAAfA,YAAYA,CAAIC,WAAoB,EAAK;EACpD,IAAI,CAACA,WAAW,EAAE,OAAO,GAAG;EAC5B,IAAMC,UAAU,GAAGD,WAAW,CAC3BE,WAAW,CAAC,CAAC,CACbC,KAAK,CAAC,EAAE,CAAC,CACTC,GAAG,CAAC,UAACC,IAAI,EAAEC,KAAK;IAAA,OAAK,MAAM,GAAGD,IAAI,CAACE,UAAU,CAAC,CAAC,CAAC;EAAA,EAAC;EACpD,OAAOC,MAAM,CAACC,aAAa,CAAAC,KAAA,CAApBF,MAAM,MAAAG,mBAAA,CAAAC,OAAA,EAAkBX,UAAU,EAAC;AAC5C,CAAC;AAACH,OAAA,CAAAC,YAAA,GAAAA,YAAA;AAEK,IAAMc,uBAAuB,GAAG,SAA1BA,uBAAuBA,CAAIC,GAAW,EAAK;EACtD,OAAOA,GAAG,CAACC,QAAQ,CAAC,CAAC,CAACC,OAAO,CAAC,uBAAuB,EAAE,GAAG,CAAC;AAC7D,CAAC;AAAClB,OAAA,CAAAe,uBAAA,GAAAA,uBAAA;AAEK,IAAMI,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,IAAY,EAAa;EACtD,IAAMC,QAAQ,GAAGC,eAAM,CAACD,QAAQ,CAAC,IAAAC,eAAM,EAAC,CAAC,CAACC,IAAI,CAAC,IAAAD,eAAM,EAACF,IAAI,EAAE,YAAY,CAAC,CAAC,CAAC;EAC3E,IAAIC,QAAQ,CAACG,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE;IAC1B,OAAO,IAAAF,eAAM,EAACF,IAAI,CAAC,CAACK,MAAM,CAAC,OAAO,CAAC;EACrC;EACA,IAAIJ,QAAQ,CAACG,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE;IAC1B,OAAO,WAAW;EACpB;EACA,OAAO,IAAAF,eAAM,EAACF,IAAI,CAAC,CAACK,MAAM,CAAC,OAAO,CAAC;AACrC,CAAC;AAACzB,OAAA,CAAAmB,cAAA,GAAAA,cAAA;AAEK,IAAMO,UAAU,GAAG,SAAbA,UAAUA,CAAIC,OAAe,EAAa;EACrD,IAAIA,OAAO,IAAI,EAAE,GAAG,EAAE,IAAIA,OAAO,GAAG,CAAC,EAAE;IACrC,MAAM,IAAIC,UAAU,CAClB,sEACF,CAAC;EACH;EACA,IAAIC,CAAC,GAAIF,OAAO,GAAG,EAAE,GAAI,CAAC;IACxBG,CAAC,GAAGH,OAAO,GAAG,EAAE,GAAG,CAAC;EACtB,OAAUE,CAAC,UAAKC,CAAC;AACnB,CAAC;AAAC9B,OAAA,CAAA0B,UAAA,GAAAA,UAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}