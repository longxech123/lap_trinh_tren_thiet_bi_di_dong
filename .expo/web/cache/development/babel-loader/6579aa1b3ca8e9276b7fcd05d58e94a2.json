{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _defineProperty3 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _GenericTouchable = _interopRequireWildcard(require(\"./GenericTouchable\"));\nvar _reactNative = require(\"react-native\");\nvar _excluded = [\"style\"];\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty3.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nvar TouchableHighlight = function (_Component) {\n  (0, _inherits2.default)(TouchableHighlight, _Component);\n  var _super = _createSuper(TouchableHighlight);\n  function TouchableHighlight(props) {\n    var _this;\n    (0, _classCallCheck2.default)(this, TouchableHighlight);\n    _this = _super.call(this, props);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"showUnderlay\", function () {\n      var _this$props$onShowUnd, _this$props;\n      if (!_this.hasPressHandler()) {\n        return;\n      }\n      _this.setState({\n        extraChildStyle: {\n          opacity: _this.props.activeOpacity\n        },\n        extraUnderlayStyle: {\n          backgroundColor: _this.props.underlayColor\n        }\n      });\n      (_this$props$onShowUnd = (_this$props = _this.props).onShowUnderlay) === null || _this$props$onShowUnd === void 0 ? void 0 : _this$props$onShowUnd.call(_this$props);\n    });\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"hasPressHandler\", function () {\n      return _this.props.onPress || _this.props.onPressIn || _this.props.onPressOut || _this.props.onLongPress;\n    });\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"hideUnderlay\", function () {\n      var _this$props$onHideUnd, _this$props2;\n      _this.setState({\n        extraChildStyle: null,\n        extraUnderlayStyle: null\n      });\n      (_this$props$onHideUnd = (_this$props2 = _this.props).onHideUnderlay) === null || _this$props$onHideUnd === void 0 ? void 0 : _this$props$onHideUnd.call(_this$props2);\n    });\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"onStateChange\", function (_from, to) {\n      if (to === _GenericTouchable.TOUCHABLE_STATE.BEGAN) {\n        _this.showUnderlay();\n      } else if (to === _GenericTouchable.TOUCHABLE_STATE.UNDETERMINED || to === _GenericTouchable.TOUCHABLE_STATE.MOVED_OUTSIDE) {\n        _this.hideUnderlay();\n      }\n    });\n    _this.state = {\n      extraChildStyle: null,\n      extraUnderlayStyle: null\n    };\n    return _this;\n  }\n  (0, _createClass2.default)(TouchableHighlight, [{\n    key: \"renderChildren\",\n    value: function renderChildren() {\n      if (!this.props.children) {\n        return React.createElement(_reactNative.View, null);\n      }\n      var child = React.Children.only(this.props.children);\n      return React.cloneElement(child, {\n        style: _reactNative.StyleSheet.compose(child.props.style, this.state.extraChildStyle)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n        _this$props3$style = _this$props3.style,\n        style = _this$props3$style === void 0 ? {} : _this$props3$style,\n        rest = (0, _objectWithoutProperties2.default)(_this$props3, _excluded);\n      var extraUnderlayStyle = this.state.extraUnderlayStyle;\n      return React.createElement(_GenericTouchable.default, _extends({}, rest, {\n        style: [style, extraUnderlayStyle],\n        onStateChange: this.onStateChange\n      }), this.renderChildren());\n    }\n  }]);\n  return TouchableHighlight;\n}(React.Component);\nexports.default = TouchableHighlight;\n_defineProperty(TouchableHighlight, \"defaultProps\", _objectSpread(_objectSpread({}, _GenericTouchable.default.defaultProps), {}, {\n  activeOpacity: 0.85,\n  delayPressOut: 100,\n  underlayColor: 'black'\n}));","map":{"version":3,"mappings":";;;;;;;;;;;;;AAAA;AAEA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAoBqBA,kBAAN;EAAA;EAAA;EAWbC,4BAAYC,KAAD,EAAyD;IAAA;IAAA;IAClE,0BAAMA,KAAN;IADkEC,6EASrD,YAAM;MAAA;MACnB,IAAI,CAAC,MAAKC,eAAL,EAAL,EAA6B;QAC3B;MACD;MACD,MAAKC,QAAL,CAAc;QACZC,eAAe,EAAE;UACfC,OAAO,EAAE,MAAKL,KAAL,CAAWM;QADL,CADL;QAIZC,kBAAkB,EAAE;UAClBC,eAAe,EAAE,MAAKR,KAAL,CAAWS;QADV;MAJR,CAAd;MAQA,8CAAKT,KAAL,EAAWU,cAAX;IACD,CAtBmE;IAAAT,gFAwBlD;MAAA,OAChB,MAAKD,KAAL,CAAWW,OAAX,IACA,MAAKX,KAAL,CAAWY,SADX,IAEA,MAAKZ,KAAL,CAAWa,UAFX,IAGA,MAAKb,KAAL,CAAWc,WA5BuD;IAAA;IAAAb,6EA8BrD,YAAM;MAAA;MACnB,MAAKE,QAAL,CAAc;QACZC,eAAe,EAAE,IADL;QAEZG,kBAAkB,EAAE;MAFR,CAAd;MAIA,+CAAKP,KAAL,EAAWe,cAAX;IACD,CApCmE;IAAAd,8EAmDpD,UAACe,KAAD,EAAgBC,EAAhB,EAA+B;MAC7C,IAAIA,EAAE,KAAKC,iCAAe,CAACC,KAA3B,EAAkC;QAChC,MAAKC,YAAL;MACD,CAFD,MAEO,IACLH,EAAE,KAAKC,iCAAe,CAACG,YAAvB,IACAJ,EAAE,KAAKC,iCAAe,CAACI,aAFlB,EAGL;QACA,MAAKC,YAAL;MACD;IACF,CA5DmE;IAElE,MAAKC,KAAL,GAAa;MACXpB,eAAe,EAAE,IADN;MAEXG,kBAAkB,EAAE;IAFT,CAAb;IAAA;EAID;EAdD;IAAA;IAAA,OA8CAkB,0BAAiB;MACf,IAAI,CAAC,KAAKzB,KAAL,CAAW0B,QAAhB,EAA0B;QACxB,OAAOC,oBAACC,iBAAD,OAAP;MACD;MAED,IAAMC,KAAK,GAAGF,KAAK,CAACG,QAAN,CAAeC,IAAf,CACZ,KAAK/B,KAAL,CAAW0B,QADC,CAAd;MAGA,OAAOC,KAAK,CAACK,YAAN,CAAmBH,KAAnB,EAA0B;QAC/BI,KAAK,EAAEC,uBAAU,CAACC,OAAX,CAAmBN,KAAK,CAAC7B,KAAN,CAAYiC,KAA/B,EAAsC,KAAKT,KAAL,CAAWpB,eAAjD;MADwB,CAA1B,CAAP;IAGD;EAAA;IAAA;IAAA,OAaDgC,kBAAS;MACP,mBAAgC,KAAKpC,KAArC;QAAA,kCAAQiC,KAAK;QAALA,KAAK,mCAAG,EAAV;QAAiBI;MACvB,IAAQ9B,qBAAuB,KAAKiB,KAApC,CAAQjB;MACR,OACEoB,oBAACW,yBAAD,eACMD,IADN;QAEEJ,KAAK,EAAE,CAACA,KAAD,EAAQ1B,kBAAR,CAFT;QAGEgC,aAAa,EAAE,KAAKA;MAHtB,IAIG,KAAKd,cAAL,EAJH,CADF;IAQD;EAAA;EAAA;AAAA,EApF6Ce,eAAjC;AAAA;gBAAM1C,kB,kDAKdwC,yBAAgB,CAACG,YADA;EAEpBnC,aAAa,EAAE,IAFK;EAGpBoC,aAAa,EAAE,GAHK;EAIpBjC,aAAa,EAAE;AAAA,G","names":["TouchableHighlight","constructor","props","_defineProperty","hasPressHandler","setState","extraChildStyle","opacity","activeOpacity","extraUnderlayStyle","backgroundColor","underlayColor","onShowUnderlay","onPress","onPressIn","onPressOut","onLongPress","onHideUnderlay","_from","to","TOUCHABLE_STATE","BEGAN","showUnderlay","UNDETERMINED","MOVED_OUTSIDE","hideUnderlay","state","renderChildren","children","React","View","child","Children","only","cloneElement","style","StyleSheet","compose","render","rest","GenericTouchable","onStateChange","Component","defaultProps","delayPressOut"],"sources":["TouchableHighlight.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Component } from 'react';\nimport GenericTouchable, {\n  GenericTouchableProps,\n  TOUCHABLE_STATE,\n} from './GenericTouchable';\nimport {\n  StyleSheet,\n  View,\n  TouchableHighlightProps,\n  ColorValue,\n  ViewProps,\n} from 'react-native';\n\ninterface State {\n  extraChildStyle: null | {\n    opacity?: number;\n  };\n  extraUnderlayStyle: null | {\n    backgroundColor?: ColorValue;\n  };\n}\n\n/**\n * TouchableHighlight follows RN's implementation\n */\nexport default class TouchableHighlight extends Component<\n  TouchableHighlightProps & GenericTouchableProps,\n  State\n> {\n  static defaultProps = {\n    ...GenericTouchable.defaultProps,\n    activeOpacity: 0.85,\n    delayPressOut: 100,\n    underlayColor: 'black',\n  };\n\n  constructor(props: TouchableHighlightProps & GenericTouchableProps) {\n    super(props);\n    this.state = {\n      extraChildStyle: null,\n      extraUnderlayStyle: null,\n    };\n  }\n\n  // Copied from RN\n  showUnderlay = () => {\n    if (!this.hasPressHandler()) {\n      return;\n    }\n    this.setState({\n      extraChildStyle: {\n        opacity: this.props.activeOpacity,\n      },\n      extraUnderlayStyle: {\n        backgroundColor: this.props.underlayColor,\n      },\n    });\n    this.props.onShowUnderlay?.();\n  };\n\n  hasPressHandler = () =>\n    this.props.onPress ||\n    this.props.onPressIn ||\n    this.props.onPressOut ||\n    this.props.onLongPress;\n\n  hideUnderlay = () => {\n    this.setState({\n      extraChildStyle: null,\n      extraUnderlayStyle: null,\n    });\n    this.props.onHideUnderlay?.();\n  };\n\n  renderChildren() {\n    if (!this.props.children) {\n      return <View />;\n    }\n\n    const child = React.Children.only(\n      this.props.children\n    ) as React.ReactElement<ViewProps>; // TODO: not sure if OK but fixes error\n    return React.cloneElement(child, {\n      style: StyleSheet.compose(child.props.style, this.state.extraChildStyle),\n    });\n  }\n\n  onStateChange = (_from: number, to: number) => {\n    if (to === TOUCHABLE_STATE.BEGAN) {\n      this.showUnderlay();\n    } else if (\n      to === TOUCHABLE_STATE.UNDETERMINED ||\n      to === TOUCHABLE_STATE.MOVED_OUTSIDE\n    ) {\n      this.hideUnderlay();\n    }\n  };\n\n  render() {\n    const { style = {}, ...rest } = this.props;\n    const { extraUnderlayStyle } = this.state;\n    return (\n      <GenericTouchable\n        {...rest}\n        style={[style, extraUnderlayStyle]}\n        onStateChange={this.onStateChange}>\n        {this.renderChildren()}\n      </GenericTouchable>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"script"}