{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _reactI18next = require(\"react-i18next\");\nvar _locales = require(\"../../assets/locales\");\nvar _i18next = _interopRequireDefault(require(\"i18next\"));\nvar _storage = require(\"../storage\");\nvar languageDetector = {\n  type: 'languageDetector',\n  async: true,\n  detect: function detect(callback) {\n    var languageCode;\n    return _regenerator.default.async(function detect$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regenerator.default.awrap((0, _storage.loadString)('LANG_CODE'));\n          case 2:\n            languageCode = _context.sent;\n            callback(languageCode || 'vi');\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  cacheUserLanguage: function cacheUserLanguage(lng) {\n    (0, _storage.saveString)('LANG_CODE', lng);\n  },\n  init: function init() {}\n};\n_i18next.default.use(languageDetector).use(_reactI18next.initReactI18next).init({\n  fallbackLng: 'vi',\n  compatibilityJSON: 'v3',\n  resources: _locales.resources,\n  ns: ['common'],\n  defaultNS: 'common',\n  debug: false,\n  interpolation: {\n    escapeValue: false\n  }\n}).then(function () {\n  return '';\n});\nvar _default = _i18next.default;\nexports.default = _default;","map":{"version":3,"names":["languageDetector","type","async","detect","callback","loadString","languageCode","cacheUserLanguage","lng","saveString","init","i18n","use","initReactI18next","fallbackLng","compatibilityJSON","resources","ns","defaultNS","debug","interpolation","escapeValue","then"],"sources":["D:/DH điện lực/kì 1 2022-2023/ltmobile/muvi-master/src/utils/i18next/i18n.ts"],"sourcesContent":["import {initReactI18next} from 'react-i18next';\nimport {resources} from '@assets/locales';\nimport i18n, {LanguageDetectorAsyncModule} from 'i18next';\nimport {loadString, saveString} from '@utils/storage';\nimport {storageKey} from '@common';\n\nconst languageDetector: LanguageDetectorAsyncModule = {\n  type: 'languageDetector',\n  async: true, // flags below detection to be async\n\n  detect: async callback => {\n    const languageCode = await loadString('LANG_CODE');\n    callback(languageCode || 'vi');\n  },\n  cacheUserLanguage: lng => {\n    saveString('LANG_CODE', lng);\n  },\n  init: () => {},\n};\n\n/**\n * Config i18n for app\n */\ni18n\n  .use(languageDetector)\n  .use(initReactI18next)\n  .init({\n    fallbackLng: 'vi',\n    compatibilityJSON: 'v3',\n    resources,\n\n    // have a common namespace used around the full app\n    ns: ['common'],\n    defaultNS: 'common',\n    debug: false,\n\n    // cache: {\n    //   enabled: true\n    // },\n\n    interpolation: {\n      escapeValue: false, // not needed for react as it does escape per default to prevent xss!\n    },\n  })\n  .then(() => '');\n\nexport default i18n;\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AAGA,IAAMA,gBAA6C,GAAG;EACpDC,IAAI,EAAE,kBAAkB;EACxBC,KAAK,EAAE,IAAI;EAEXC,MAAM,EAAE,gBAAMC,QAAQ;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,kCACO,IAAAC,mBAAU,EAAC,WAAW,CAAC;UAAA;YAA5CC,YAAY;YAClBF,QAAQ,CAACE,YAAY,IAAI,IAAI,CAAC;UAAC;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAChC;EACDC,iBAAiB,EAAE,2BAAAC,GAAG,EAAI;IACxB,IAAAC,mBAAU,EAAC,WAAW,EAAED,GAAG,CAAC;EAC9B,CAAC;EACDE,IAAI,EAAE,gBAAM,CAAC;AACf,CAAC;AAKDC,gBAAI,CACDC,GAAG,CAACZ,gBAAgB,CAAC,CACrBY,GAAG,CAACC,8BAAgB,CAAC,CACrBH,IAAI,CAAC;EACJI,WAAW,EAAE,IAAI;EACjBC,iBAAiB,EAAE,IAAI;EACvBC,SAAS,EAATA,kBAAS;EAGTC,EAAE,EAAE,CAAC,QAAQ,CAAC;EACdC,SAAS,EAAE,QAAQ;EACnBC,KAAK,EAAE,KAAK;EAMZC,aAAa,EAAE;IACbC,WAAW,EAAE;EACf;AACF,CAAC,CAAC,CACDC,IAAI,CAAC;EAAA,OAAM,EAAE;AAAA,EAAC;AAAC,eAEHX,gBAAI;AAAA"},"metadata":{},"sourceType":"script"}