{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.Gestures = void 0;\nvar _constants = require(\"./web/constants\");\nvar _FlingGestureHandler = _interopRequireDefault(require(\"./web/FlingGestureHandler\"));\nvar _LongPressGestureHandler = _interopRequireDefault(require(\"./web/LongPressGestureHandler\"));\nvar _NativeViewGestureHandler = _interopRequireDefault(require(\"./web/NativeViewGestureHandler\"));\nvar NodeManager = _interopRequireWildcard(require(\"./web/NodeManager\"));\nvar _PanGestureHandler = _interopRequireDefault(require(\"./web/PanGestureHandler\"));\nvar _PinchGestureHandler = _interopRequireDefault(require(\"./web/PinchGestureHandler\"));\nvar _RotationGestureHandler = _interopRequireDefault(require(\"./web/RotationGestureHandler\"));\nvar _TapGestureHandler = _interopRequireDefault(require(\"./web/TapGestureHandler\"));\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) { if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } } return n.default = e, t && t.set(e, n), n; }\nvar Gestures = {\n  PanGestureHandler: _PanGestureHandler.default,\n  RotationGestureHandler: _RotationGestureHandler.default,\n  PinchGestureHandler: _PinchGestureHandler.default,\n  TapGestureHandler: _TapGestureHandler.default,\n  NativeViewGestureHandler: _NativeViewGestureHandler.default,\n  LongPressGestureHandler: _LongPressGestureHandler.default,\n  FlingGestureHandler: _FlingGestureHandler.default\n};\nexports.Gestures = Gestures;\nvar _default = {\n  Direction: _constants.Direction,\n  handleSetJSResponder: function handleSetJSResponder(tag, blockNativeResponder) {\n    console.warn('handleSetJSResponder: ', tag, blockNativeResponder);\n  },\n  handleClearJSResponder: function handleClearJSResponder() {\n    console.warn('handleClearJSResponder: ');\n  },\n  createGestureHandler: function createGestureHandler(handlerName, handlerTag, config) {\n    if (!(handlerName in Gestures)) throw new Error(\"react-native-gesture-handler: \".concat(handlerName, \" is not supported on web.\"));\n    var GestureClass = Gestures[handlerName];\n    NodeManager.createGestureHandler(handlerTag, new GestureClass());\n    this.updateGestureHandler(handlerTag, config);\n  },\n  attachGestureHandler: function attachGestureHandler(handlerTag, newView, propsRef) {\n    NodeManager.getHandler(handlerTag).setView(newView, propsRef);\n  },\n  updateGestureHandler: function updateGestureHandler(handlerTag, newConfig) {\n    NodeManager.getHandler(handlerTag).updateGestureConfig(newConfig);\n  },\n  getGestureHandlerNode: function getGestureHandlerNode(handlerTag) {\n    return NodeManager.getHandler(handlerTag);\n  },\n  dropGestureHandler: function dropGestureHandler(handlerTag) {\n    NodeManager.dropGestureHandler(handlerTag);\n  }\n};\nexports.default = _default;","map":{"version":3,"names":["_constants","require","_FlingGestureHandler","_interopRequireDefault","_LongPressGestureHandler","_NativeViewGestureHandler","NodeManager","_interopRequireWildcard","_PanGestureHandler","_PinchGestureHandler","_RotationGestureHandler","_TapGestureHandler","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","Gestures","PanGestureHandler","RotationGestureHandler","PinchGestureHandler","TapGestureHandler","NativeViewGestureHandler","LongPressGestureHandler","FlingGestureHandler","exports","_default","Direction","handleSetJSResponder","tag","blockNativeResponder","console","warn","handleClearJSResponder","createGestureHandler","handlerName","handlerTag","config","Error","concat","GestureClass","updateGestureHandler","attachGestureHandler","newView","propsRef","getHandler","setView","newConfig","updateGestureConfig","getGestureHandlerNode","dropGestureHandler"],"sources":["C:\\Users\\DELL\\Downloads\\ltmobile\\ltmobile\\muvi-master\\node_modules\\react-native-gesture-handler\\lib\\module\\RNGestureHandlerModule.web.ts"],"sourcesContent":["import { Direction } from './web/constants';\nimport FlingGestureHandler from './web/FlingGestureHandler';\nimport LongPressGestureHandler from './web/LongPressGestureHandler';\nimport NativeViewGestureHandler from './web/NativeViewGestureHandler';\nimport * as NodeManager from './web/NodeManager';\nimport PanGestureHandler from './web/PanGestureHandler';\nimport PinchGestureHandler from './web/PinchGestureHandler';\nimport RotationGestureHandler from './web/RotationGestureHandler';\nimport TapGestureHandler from './web/TapGestureHandler';\n\nexport const Gestures = {\n  PanGestureHandler,\n  RotationGestureHandler,\n  PinchGestureHandler,\n  TapGestureHandler,\n  NativeViewGestureHandler,\n  LongPressGestureHandler,\n  FlingGestureHandler,\n  // ForceTouchGestureHandler,\n};\n\nexport default {\n  Direction,\n  handleSetJSResponder(tag: number, blockNativeResponder: boolean) {\n    console.warn('handleSetJSResponder: ', tag, blockNativeResponder);\n  },\n  handleClearJSResponder() {\n    console.warn('handleClearJSResponder: ');\n  },\n  createGestureHandler<T>(\n    handlerName: keyof typeof Gestures,\n    handlerTag: number,\n    config: T\n  ) {\n    //TODO(TS) extends config\n    if (!(handlerName in Gestures))\n      throw new Error(\n        `react-native-gesture-handler: ${handlerName} is not supported on web.`\n      );\n    const GestureClass = Gestures[handlerName];\n    NodeManager.createGestureHandler(handlerTag, new GestureClass());\n    this.updateGestureHandler(handlerTag, config);\n  },\n  attachGestureHandler(\n    handlerTag: number,\n    newView: number,\n    propsRef: React.RefObject<unknown>\n  ) {\n    NodeManager.getHandler(handlerTag).setView(newView, propsRef);\n  },\n  updateGestureHandler(handlerTag: number, newConfig: any) {\n    NodeManager.getHandler(handlerTag).updateGestureConfig(newConfig);\n  },\n  getGestureHandlerNode(handlerTag: number) {\n    return NodeManager.getHandler(handlerTag);\n  },\n  dropGestureHandler(handlerTag: number) {\n    NodeManager.dropGestureHandler(handlerTag);\n  },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}