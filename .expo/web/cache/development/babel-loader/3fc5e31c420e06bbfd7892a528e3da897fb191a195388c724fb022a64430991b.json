{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _react = require(\"react\");\nvar _createElement = _interopRequireDefault(require(\"../createElement\"));\nvar _css = _interopRequireDefault(require(\"../StyleSheet/css\"));\nvar _pick = _interopRequireDefault(require(\"../../modules/pick\"));\nvar _useElementLayout = _interopRequireDefault(require(\"../../hooks/useElementLayout\"));\nvar _useLayoutEffect = _interopRequireDefault(require(\"../../hooks/useLayoutEffect\"));\nvar _useMergeRefs = _interopRequireDefault(require(\"../../modules/useMergeRefs\"));\nvar _usePlatformMethods = _interopRequireDefault(require(\"../../hooks/usePlatformMethods\"));\nvar _useResponderEvents = _interopRequireDefault(require(\"../../hooks/useResponderEvents\"));\nvar _StyleSheet = _interopRequireDefault(require(\"../StyleSheet\"));\nvar _TextInputState = _interopRequireDefault(require(\"../../modules/TextInputState\"));\nvar isSelectionStale = function isSelectionStale(node, selection) {\n  var selectionEnd = node.selectionEnd,\n    selectionStart = node.selectionStart;\n  var start = selection.start,\n    end = selection.end;\n  return start !== selectionStart || end !== selectionEnd;\n};\nvar setSelection = function setSelection(node, selection) {\n  if (isSelectionStale(node, selection)) {\n    var start = selection.start,\n      end = selection.end;\n    try {\n      node.setSelectionRange(start, end || start);\n    } catch (e) {}\n  }\n};\nvar forwardPropsList = {\n  accessibilityLabel: true,\n  accessibilityLiveRegion: true,\n  accessibilityRole: true,\n  accessibilityState: true,\n  accessibilityValue: true,\n  accessible: true,\n  autoCapitalize: true,\n  autoComplete: true,\n  autoCorrect: true,\n  autoFocus: true,\n  children: true,\n  classList: true,\n  defaultValue: true,\n  dir: true,\n  disabled: true,\n  importantForAccessibility: true,\n  maxLength: true,\n  nativeID: true,\n  onBlur: true,\n  onChange: true,\n  onClick: true,\n  onClickCapture: true,\n  onContextMenu: true,\n  onFocus: true,\n  onScroll: true,\n  onTouchCancel: true,\n  onTouchCancelCapture: true,\n  onTouchEnd: true,\n  onTouchEndCapture: true,\n  onTouchMove: true,\n  onTouchMoveCapture: true,\n  onTouchStart: true,\n  onTouchStartCapture: true,\n  placeholder: true,\n  pointerEvents: true,\n  readOnly: true,\n  ref: true,\n  rows: true,\n  spellCheck: true,\n  style: true,\n  value: true,\n  testID: true,\n  type: true,\n  dataSet: true,\n  onMouseDown: true,\n  onMouseEnter: true,\n  onMouseLeave: true,\n  onMouseMove: true,\n  onMouseOver: true,\n  onMouseOut: true,\n  onMouseUp: true\n};\nvar pickProps = function pickProps(props) {\n  return (0, _pick.default)(props, forwardPropsList);\n};\nfunction isEventComposing(nativeEvent) {\n  return nativeEvent.isComposing || nativeEvent.keyCode === 229;\n}\nvar TextInput = (0, _react.forwardRef)(function (props, forwardedRef) {\n  var _props$autoCapitalize = props.autoCapitalize,\n    autoCapitalize = _props$autoCapitalize === void 0 ? 'sentences' : _props$autoCapitalize,\n    autoComplete = props.autoComplete,\n    autoCompleteType = props.autoCompleteType,\n    _props$autoCorrect = props.autoCorrect,\n    autoCorrect = _props$autoCorrect === void 0 ? true : _props$autoCorrect,\n    blurOnSubmit = props.blurOnSubmit,\n    clearTextOnFocus = props.clearTextOnFocus,\n    dir = props.dir,\n    _props$editable = props.editable,\n    editable = _props$editable === void 0 ? true : _props$editable,\n    _props$keyboardType = props.keyboardType,\n    keyboardType = _props$keyboardType === void 0 ? 'default' : _props$keyboardType,\n    _props$multiline = props.multiline,\n    multiline = _props$multiline === void 0 ? false : _props$multiline,\n    _props$numberOfLines = props.numberOfLines,\n    numberOfLines = _props$numberOfLines === void 0 ? 1 : _props$numberOfLines,\n    onBlur = props.onBlur,\n    onChange = props.onChange,\n    onChangeText = props.onChangeText,\n    onContentSizeChange = props.onContentSizeChange,\n    onFocus = props.onFocus,\n    onKeyPress = props.onKeyPress,\n    onLayout = props.onLayout,\n    onMoveShouldSetResponder = props.onMoveShouldSetResponder,\n    onMoveShouldSetResponderCapture = props.onMoveShouldSetResponderCapture,\n    onResponderEnd = props.onResponderEnd,\n    onResponderGrant = props.onResponderGrant,\n    onResponderMove = props.onResponderMove,\n    onResponderReject = props.onResponderReject,\n    onResponderRelease = props.onResponderRelease,\n    onResponderStart = props.onResponderStart,\n    onResponderTerminate = props.onResponderTerminate,\n    onResponderTerminationRequest = props.onResponderTerminationRequest,\n    onScrollShouldSetResponder = props.onScrollShouldSetResponder,\n    onScrollShouldSetResponderCapture = props.onScrollShouldSetResponderCapture,\n    onSelectionChange = props.onSelectionChange,\n    onSelectionChangeShouldSetResponder = props.onSelectionChangeShouldSetResponder,\n    onSelectionChangeShouldSetResponderCapture = props.onSelectionChangeShouldSetResponderCapture,\n    onStartShouldSetResponder = props.onStartShouldSetResponder,\n    onStartShouldSetResponderCapture = props.onStartShouldSetResponderCapture,\n    onSubmitEditing = props.onSubmitEditing,\n    placeholderTextColor = props.placeholderTextColor,\n    returnKeyType = props.returnKeyType,\n    _props$secureTextEntr = props.secureTextEntry,\n    secureTextEntry = _props$secureTextEntr === void 0 ? false : _props$secureTextEntr,\n    selection = props.selection,\n    selectTextOnFocus = props.selectTextOnFocus,\n    spellCheck = props.spellCheck;\n  var type;\n  var inputMode;\n  switch (keyboardType) {\n    case 'email-address':\n      type = 'email';\n      break;\n    case 'number-pad':\n    case 'numeric':\n      inputMode = 'numeric';\n      break;\n    case 'decimal-pad':\n      inputMode = 'decimal';\n      break;\n    case 'phone-pad':\n      type = 'tel';\n      break;\n    case 'search':\n    case 'web-search':\n      type = 'search';\n      break;\n    case 'url':\n      type = 'url';\n      break;\n    default:\n      type = 'text';\n  }\n  if (secureTextEntry) {\n    type = 'password';\n  }\n  var dimensions = (0, _react.useRef)({\n    height: null,\n    width: null\n  });\n  var hostRef = (0, _react.useRef)(null);\n  var handleContentSizeChange = (0, _react.useCallback)(function () {\n    var node = hostRef.current;\n    if (multiline && onContentSizeChange && node != null) {\n      var newHeight = node.scrollHeight;\n      var newWidth = node.scrollWidth;\n      if (newHeight !== dimensions.current.height || newWidth !== dimensions.current.width) {\n        dimensions.current.height = newHeight;\n        dimensions.current.width = newWidth;\n        onContentSizeChange({\n          nativeEvent: {\n            contentSize: {\n              height: dimensions.current.height,\n              width: dimensions.current.width\n            }\n          }\n        });\n      }\n    }\n  }, [hostRef, multiline, onContentSizeChange]);\n  var imperativeRef = (0, _react.useMemo)(function () {\n    return function (hostNode) {\n      if (hostNode != null) {\n        hostNode.clear = function () {\n          if (hostNode != null) {\n            hostNode.value = '';\n          }\n        };\n        hostNode.isFocused = function () {\n          return hostNode != null && _TextInputState.default.currentlyFocusedField() === hostNode;\n        };\n        handleContentSizeChange();\n      }\n    };\n  }, [handleContentSizeChange]);\n  function handleBlur(e) {\n    _TextInputState.default._currentlyFocusedNode = null;\n    if (onBlur) {\n      e.nativeEvent.text = e.target.value;\n      onBlur(e);\n    }\n  }\n  function handleChange(e) {\n    var text = e.target.value;\n    e.nativeEvent.text = text;\n    handleContentSizeChange();\n    if (onChange) {\n      onChange(e);\n    }\n    if (onChangeText) {\n      onChangeText(text);\n    }\n  }\n  function handleFocus(e) {\n    var node = hostRef.current;\n    if (node != null) {\n      _TextInputState.default._currentlyFocusedNode = node;\n      if (onFocus) {\n        e.nativeEvent.text = e.target.value;\n        onFocus(e);\n      }\n      if (clearTextOnFocus) {\n        node.value = '';\n      }\n      if (selectTextOnFocus) {\n        node.select();\n      }\n    }\n  }\n  function handleKeyDown(e) {\n    e.stopPropagation();\n    var blurOnSubmitDefault = !multiline;\n    var shouldBlurOnSubmit = blurOnSubmit == null ? blurOnSubmitDefault : blurOnSubmit;\n    var nativeEvent = e.nativeEvent;\n    var isComposing = isEventComposing(nativeEvent);\n    if (onKeyPress) {\n      onKeyPress(e);\n    }\n    if (e.key === 'Enter' && !e.shiftKey && !isComposing && !e.isDefaultPrevented()) {\n      if ((blurOnSubmit || !multiline) && onSubmitEditing) {\n        e.preventDefault();\n        nativeEvent.text = e.target.value;\n        onSubmitEditing(e);\n      }\n      if (shouldBlurOnSubmit && hostRef.current != null) {\n        hostRef.current.blur();\n      }\n    }\n  }\n  function handleSelectionChange(e) {\n    if (onSelectionChange) {\n      try {\n        var node = e.target;\n        var selectionStart = node.selectionStart,\n          selectionEnd = node.selectionEnd;\n        e.nativeEvent.selection = {\n          start: selectionStart,\n          end: selectionEnd\n        };\n        e.nativeEvent.text = e.target.value;\n        onSelectionChange(e);\n      } catch (e) {}\n    }\n  }\n  (0, _useLayoutEffect.default)(function () {\n    var node = hostRef.current;\n    if (node != null && selection != null) {\n      setSelection(node, selection);\n    }\n    if (document.activeElement === node) {\n      _TextInputState.default._currentlyFocusedNode = node;\n    }\n  }, [hostRef, selection]);\n  var component = multiline ? 'textarea' : 'input';\n  var classList = [classes.textinput];\n  var style = _StyleSheet.default.compose(props.style, placeholderTextColor && {\n    placeholderTextColor: placeholderTextColor\n  });\n  (0, _useElementLayout.default)(hostRef, onLayout);\n  (0, _useResponderEvents.default)(hostRef, {\n    onMoveShouldSetResponder: onMoveShouldSetResponder,\n    onMoveShouldSetResponderCapture: onMoveShouldSetResponderCapture,\n    onResponderEnd: onResponderEnd,\n    onResponderGrant: onResponderGrant,\n    onResponderMove: onResponderMove,\n    onResponderReject: onResponderReject,\n    onResponderRelease: onResponderRelease,\n    onResponderStart: onResponderStart,\n    onResponderTerminate: onResponderTerminate,\n    onResponderTerminationRequest: onResponderTerminationRequest,\n    onScrollShouldSetResponder: onScrollShouldSetResponder,\n    onScrollShouldSetResponderCapture: onScrollShouldSetResponderCapture,\n    onSelectionChangeShouldSetResponder: onSelectionChangeShouldSetResponder,\n    onSelectionChangeShouldSetResponderCapture: onSelectionChangeShouldSetResponderCapture,\n    onStartShouldSetResponder: onStartShouldSetResponder,\n    onStartShouldSetResponderCapture: onStartShouldSetResponderCapture\n  });\n  var supportedProps = pickProps(props);\n  supportedProps.autoCapitalize = autoCapitalize;\n  supportedProps.autoComplete = autoComplete || autoCompleteType || 'on';\n  supportedProps.autoCorrect = autoCorrect ? 'on' : 'off';\n  supportedProps.classList = classList;\n  supportedProps.dir = dir !== undefined ? dir : 'auto';\n  supportedProps.enterkeyhint = returnKeyType;\n  supportedProps.onBlur = handleBlur;\n  supportedProps.onChange = handleChange;\n  supportedProps.onFocus = handleFocus;\n  supportedProps.onKeyDown = handleKeyDown;\n  supportedProps.onSelect = handleSelectionChange;\n  supportedProps.readOnly = !editable;\n  supportedProps.rows = multiline ? numberOfLines : undefined;\n  supportedProps.spellCheck = spellCheck != null ? spellCheck : autoCorrect;\n  supportedProps.style = style;\n  supportedProps.type = multiline ? undefined : type;\n  supportedProps.inputMode = inputMode;\n  var platformMethodsRef = (0, _usePlatformMethods.default)(supportedProps);\n  var setRef = (0, _useMergeRefs.default)(hostRef, platformMethodsRef, imperativeRef, forwardedRef);\n  supportedProps.ref = setRef;\n  return (0, _createElement.default)(component, supportedProps);\n});\nTextInput.displayName = 'TextInput';\nTextInput.State = _TextInputState.default;\nvar classes = _css.default.create({\n  textinput: {\n    MozAppearance: 'textfield',\n    WebkitAppearance: 'none',\n    backgroundColor: 'transparent',\n    border: '0 solid black',\n    borderRadius: 0,\n    boxSizing: 'border-box',\n    font: '14px System',\n    margin: 0,\n    padding: 0,\n    resize: 'none'\n  }\n});\nvar _default = TextInput;\nexports.default = _default;","map":{"version":3,"names":["_react","require","_createElement","_interopRequireDefault","_css","_pick","_useElementLayout","_useLayoutEffect","_useMergeRefs","_usePlatformMethods","_useResponderEvents","_StyleSheet","_TextInputState","isSelectionStale","node","selection","selectionEnd","selectionStart","start","end","setSelection","setSelectionRange","e","forwardPropsList","accessibilityLabel","accessibilityLiveRegion","accessibilityRole","accessibilityState","accessibilityValue","accessible","autoCapitalize","autoComplete","autoCorrect","autoFocus","children","classList","defaultValue","dir","disabled","importantForAccessibility","maxLength","nativeID","onBlur","onChange","onClick","onClickCapture","onContextMenu","onFocus","onScroll","onTouchCancel","onTouchCancelCapture","onTouchEnd","onTouchEndCapture","onTouchMove","onTouchMoveCapture","onTouchStart","onTouchStartCapture","placeholder","pointerEvents","readOnly","ref","rows","spellCheck","style","value","testID","type","dataSet","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOver","onMouseOut","onMouseUp","pickProps","props","pick","isEventComposing","nativeEvent","isComposing","keyCode","TextInput","forwardRef","forwardedRef","_props$autoCapitalize","autoCompleteType","_props$autoCorrect","blurOnSubmit","clearTextOnFocus","_props$editable","editable","_props$keyboardType","keyboardType","_props$multiline","multiline","_props$numberOfLines","numberOfLines","onChangeText","onContentSizeChange","onKeyPress","onLayout","onMoveShouldSetResponder","onMoveShouldSetResponderCapture","onResponderEnd","onResponderGrant","onResponderMove","onResponderReject","onResponderRelease","onResponderStart","onResponderTerminate","onResponderTerminationRequest","onScrollShouldSetResponder","onScrollShouldSetResponderCapture","onSelectionChange","onSelectionChangeShouldSetResponder","onSelectionChangeShouldSetResponderCapture","onStartShouldSetResponder","onStartShouldSetResponderCapture","onSubmitEditing","placeholderTextColor","returnKeyType","_props$secureTextEntr","secureTextEntry","selectTextOnFocus","inputMode","dimensions","useRef","height","width","hostRef","handleContentSizeChange","useCallback","current","newHeight","scrollHeight","newWidth","scrollWidth","contentSize","imperativeRef","useMemo","hostNode","clear","isFocused","TextInputState","currentlyFocusedField","handleBlur","_currentlyFocusedNode","text","target","handleChange","handleFocus","select","handleKeyDown","stopPropagation","blurOnSubmitDefault","shouldBlurOnSubmit","key","shiftKey","isDefaultPrevented","preventDefault","blur","handleSelectionChange","useLayoutEffect","document","activeElement","component","classes","textinput","StyleSheet","compose","useElementLayout","useResponderEvents","supportedProps","undefined","enterkeyhint","onKeyDown","onSelect","platformMethodsRef","usePlatformMethods","setRef","useMergeRefs","createElement","displayName","State","css","create","MozAppearance","WebkitAppearance","backgroundColor","border","borderRadius","boxSizing","font","margin","padding","resize","_default","exports","default"],"sources":["C:/Users/DELL/Downloads/ltmobile/ltmobile/muvi-master/node_modules/react-native-web/dist/exports/TextInput/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { forwardRef, useCallback, useMemo, useRef } from 'react';\nimport createElement from '../createElement';\nimport css from '../StyleSheet/css';\nimport pick from '../../modules/pick';\nimport useElementLayout from '../../hooks/useElementLayout';\nimport useLayoutEffect from '../../hooks/useLayoutEffect';\nimport useMergeRefs from '../../modules/useMergeRefs';\nimport usePlatformMethods from '../../hooks/usePlatformMethods';\nimport useResponderEvents from '../../hooks/useResponderEvents';\nimport StyleSheet from '../StyleSheet';\nimport TextInputState from '../../modules/TextInputState';\n/**\n * Determines whether a 'selection' prop differs from a node's existing\n * selection state.\n */\n\nvar isSelectionStale = function isSelectionStale(node, selection) {\n  var selectionEnd = node.selectionEnd,\n      selectionStart = node.selectionStart;\n  var start = selection.start,\n      end = selection.end;\n  return start !== selectionStart || end !== selectionEnd;\n};\n/**\n * Certain input types do no support 'selectSelectionRange' and will throw an\n * error.\n */\n\n\nvar setSelection = function setSelection(node, selection) {\n  if (isSelectionStale(node, selection)) {\n    var start = selection.start,\n        end = selection.end;\n\n    try {\n      node.setSelectionRange(start, end || start);\n    } catch (e) {}\n  }\n};\n\nvar forwardPropsList = {\n  accessibilityLabel: true,\n  accessibilityLiveRegion: true,\n  accessibilityRole: true,\n  accessibilityState: true,\n  accessibilityValue: true,\n  accessible: true,\n  autoCapitalize: true,\n  autoComplete: true,\n  autoCorrect: true,\n  autoFocus: true,\n  children: true,\n  classList: true,\n  defaultValue: true,\n  dir: true,\n  disabled: true,\n  importantForAccessibility: true,\n  maxLength: true,\n  nativeID: true,\n  onBlur: true,\n  onChange: true,\n  onClick: true,\n  onClickCapture: true,\n  onContextMenu: true,\n  onFocus: true,\n  onScroll: true,\n  onTouchCancel: true,\n  onTouchCancelCapture: true,\n  onTouchEnd: true,\n  onTouchEndCapture: true,\n  onTouchMove: true,\n  onTouchMoveCapture: true,\n  onTouchStart: true,\n  onTouchStartCapture: true,\n  placeholder: true,\n  pointerEvents: true,\n  readOnly: true,\n  ref: true,\n  rows: true,\n  spellCheck: true,\n  style: true,\n  value: true,\n  testID: true,\n  type: true,\n  // unstable\n  dataSet: true,\n  onMouseDown: true,\n  onMouseEnter: true,\n  onMouseLeave: true,\n  onMouseMove: true,\n  onMouseOver: true,\n  onMouseOut: true,\n  onMouseUp: true\n};\n\nvar pickProps = function pickProps(props) {\n  return pick(props, forwardPropsList);\n}; // If an Input Method Editor is processing key input, the 'keyCode' is 229.\n// https://www.w3.org/TR/uievents/#determine-keydown-keyup-keyCode\n\n\nfunction isEventComposing(nativeEvent) {\n  return nativeEvent.isComposing || nativeEvent.keyCode === 229;\n}\n\nvar TextInput = forwardRef(function (props, forwardedRef) {\n  var _props$autoCapitalize = props.autoCapitalize,\n      autoCapitalize = _props$autoCapitalize === void 0 ? 'sentences' : _props$autoCapitalize,\n      autoComplete = props.autoComplete,\n      autoCompleteType = props.autoCompleteType,\n      _props$autoCorrect = props.autoCorrect,\n      autoCorrect = _props$autoCorrect === void 0 ? true : _props$autoCorrect,\n      blurOnSubmit = props.blurOnSubmit,\n      clearTextOnFocus = props.clearTextOnFocus,\n      dir = props.dir,\n      _props$editable = props.editable,\n      editable = _props$editable === void 0 ? true : _props$editable,\n      _props$keyboardType = props.keyboardType,\n      keyboardType = _props$keyboardType === void 0 ? 'default' : _props$keyboardType,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline,\n      _props$numberOfLines = props.numberOfLines,\n      numberOfLines = _props$numberOfLines === void 0 ? 1 : _props$numberOfLines,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onChangeText = props.onChangeText,\n      onContentSizeChange = props.onContentSizeChange,\n      onFocus = props.onFocus,\n      onKeyPress = props.onKeyPress,\n      onLayout = props.onLayout,\n      onMoveShouldSetResponder = props.onMoveShouldSetResponder,\n      onMoveShouldSetResponderCapture = props.onMoveShouldSetResponderCapture,\n      onResponderEnd = props.onResponderEnd,\n      onResponderGrant = props.onResponderGrant,\n      onResponderMove = props.onResponderMove,\n      onResponderReject = props.onResponderReject,\n      onResponderRelease = props.onResponderRelease,\n      onResponderStart = props.onResponderStart,\n      onResponderTerminate = props.onResponderTerminate,\n      onResponderTerminationRequest = props.onResponderTerminationRequest,\n      onScrollShouldSetResponder = props.onScrollShouldSetResponder,\n      onScrollShouldSetResponderCapture = props.onScrollShouldSetResponderCapture,\n      onSelectionChange = props.onSelectionChange,\n      onSelectionChangeShouldSetResponder = props.onSelectionChangeShouldSetResponder,\n      onSelectionChangeShouldSetResponderCapture = props.onSelectionChangeShouldSetResponderCapture,\n      onStartShouldSetResponder = props.onStartShouldSetResponder,\n      onStartShouldSetResponderCapture = props.onStartShouldSetResponderCapture,\n      onSubmitEditing = props.onSubmitEditing,\n      placeholderTextColor = props.placeholderTextColor,\n      returnKeyType = props.returnKeyType,\n      _props$secureTextEntr = props.secureTextEntry,\n      secureTextEntry = _props$secureTextEntr === void 0 ? false : _props$secureTextEntr,\n      selection = props.selection,\n      selectTextOnFocus = props.selectTextOnFocus,\n      spellCheck = props.spellCheck;\n  var type;\n  var inputMode;\n\n  switch (keyboardType) {\n    case 'email-address':\n      type = 'email';\n      break;\n\n    case 'number-pad':\n    case 'numeric':\n      inputMode = 'numeric';\n      break;\n\n    case 'decimal-pad':\n      inputMode = 'decimal';\n      break;\n\n    case 'phone-pad':\n      type = 'tel';\n      break;\n\n    case 'search':\n    case 'web-search':\n      type = 'search';\n      break;\n\n    case 'url':\n      type = 'url';\n      break;\n\n    default:\n      type = 'text';\n  }\n\n  if (secureTextEntry) {\n    type = 'password';\n  }\n\n  var dimensions = useRef({\n    height: null,\n    width: null\n  });\n  var hostRef = useRef(null);\n  var handleContentSizeChange = useCallback(function () {\n    var node = hostRef.current;\n\n    if (multiline && onContentSizeChange && node != null) {\n      var newHeight = node.scrollHeight;\n      var newWidth = node.scrollWidth;\n\n      if (newHeight !== dimensions.current.height || newWidth !== dimensions.current.width) {\n        dimensions.current.height = newHeight;\n        dimensions.current.width = newWidth;\n        onContentSizeChange({\n          nativeEvent: {\n            contentSize: {\n              height: dimensions.current.height,\n              width: dimensions.current.width\n            }\n          }\n        });\n      }\n    }\n  }, [hostRef, multiline, onContentSizeChange]);\n  var imperativeRef = useMemo(function () {\n    return function (hostNode) {\n      // TextInput needs to add more methods to the hostNode in addition to those\n      // added by `usePlatformMethods`. This is temporarily until an API like\n      // `TextInput.clear(hostRef)` is added to React Native.\n      if (hostNode != null) {\n        hostNode.clear = function () {\n          if (hostNode != null) {\n            hostNode.value = '';\n          }\n        };\n\n        hostNode.isFocused = function () {\n          return hostNode != null && TextInputState.currentlyFocusedField() === hostNode;\n        };\n\n        handleContentSizeChange();\n      }\n    };\n  }, [handleContentSizeChange]);\n\n  function handleBlur(e) {\n    TextInputState._currentlyFocusedNode = null;\n\n    if (onBlur) {\n      e.nativeEvent.text = e.target.value;\n      onBlur(e);\n    }\n  }\n\n  function handleChange(e) {\n    var text = e.target.value;\n    e.nativeEvent.text = text;\n    handleContentSizeChange();\n\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (onChangeText) {\n      onChangeText(text);\n    }\n  }\n\n  function handleFocus(e) {\n    var node = hostRef.current;\n\n    if (node != null) {\n      TextInputState._currentlyFocusedNode = node;\n\n      if (onFocus) {\n        e.nativeEvent.text = e.target.value;\n        onFocus(e);\n      }\n\n      if (clearTextOnFocus) {\n        node.value = '';\n      }\n\n      if (selectTextOnFocus) {\n        node.select();\n      }\n    }\n  }\n\n  function handleKeyDown(e) {\n    // Prevent key events bubbling (see #612)\n    e.stopPropagation();\n    var blurOnSubmitDefault = !multiline;\n    var shouldBlurOnSubmit = blurOnSubmit == null ? blurOnSubmitDefault : blurOnSubmit;\n    var nativeEvent = e.nativeEvent;\n    var isComposing = isEventComposing(nativeEvent);\n\n    if (onKeyPress) {\n      onKeyPress(e);\n    }\n\n    if (e.key === 'Enter' && !e.shiftKey && // Do not call submit if composition is occuring.\n    !isComposing && !e.isDefaultPrevented()) {\n      if ((blurOnSubmit || !multiline) && onSubmitEditing) {\n        // prevent \"Enter\" from inserting a newline or submitting a form\n        e.preventDefault();\n        nativeEvent.text = e.target.value;\n        onSubmitEditing(e);\n      }\n\n      if (shouldBlurOnSubmit && hostRef.current != null) {\n        hostRef.current.blur();\n      }\n    }\n  }\n\n  function handleSelectionChange(e) {\n    if (onSelectionChange) {\n      try {\n        var node = e.target;\n        var selectionStart = node.selectionStart,\n            selectionEnd = node.selectionEnd;\n        e.nativeEvent.selection = {\n          start: selectionStart,\n          end: selectionEnd\n        };\n        e.nativeEvent.text = e.target.value;\n        onSelectionChange(e);\n      } catch (e) {}\n    }\n  }\n\n  useLayoutEffect(function () {\n    var node = hostRef.current;\n\n    if (node != null && selection != null) {\n      setSelection(node, selection);\n    }\n\n    if (document.activeElement === node) {\n      TextInputState._currentlyFocusedNode = node;\n    }\n  }, [hostRef, selection]);\n  var component = multiline ? 'textarea' : 'input';\n  var classList = [classes.textinput];\n  var style = StyleSheet.compose(props.style, placeholderTextColor && {\n    placeholderTextColor: placeholderTextColor\n  });\n  useElementLayout(hostRef, onLayout);\n  useResponderEvents(hostRef, {\n    onMoveShouldSetResponder: onMoveShouldSetResponder,\n    onMoveShouldSetResponderCapture: onMoveShouldSetResponderCapture,\n    onResponderEnd: onResponderEnd,\n    onResponderGrant: onResponderGrant,\n    onResponderMove: onResponderMove,\n    onResponderReject: onResponderReject,\n    onResponderRelease: onResponderRelease,\n    onResponderStart: onResponderStart,\n    onResponderTerminate: onResponderTerminate,\n    onResponderTerminationRequest: onResponderTerminationRequest,\n    onScrollShouldSetResponder: onScrollShouldSetResponder,\n    onScrollShouldSetResponderCapture: onScrollShouldSetResponderCapture,\n    onSelectionChangeShouldSetResponder: onSelectionChangeShouldSetResponder,\n    onSelectionChangeShouldSetResponderCapture: onSelectionChangeShouldSetResponderCapture,\n    onStartShouldSetResponder: onStartShouldSetResponder,\n    onStartShouldSetResponderCapture: onStartShouldSetResponderCapture\n  });\n  var supportedProps = pickProps(props);\n  supportedProps.autoCapitalize = autoCapitalize;\n  supportedProps.autoComplete = autoComplete || autoCompleteType || 'on';\n  supportedProps.autoCorrect = autoCorrect ? 'on' : 'off';\n  supportedProps.classList = classList; // 'auto' by default allows browsers to infer writing direction\n\n  supportedProps.dir = dir !== undefined ? dir : 'auto';\n  supportedProps.enterkeyhint = returnKeyType;\n  supportedProps.onBlur = handleBlur;\n  supportedProps.onChange = handleChange;\n  supportedProps.onFocus = handleFocus;\n  supportedProps.onKeyDown = handleKeyDown;\n  supportedProps.onSelect = handleSelectionChange;\n  supportedProps.readOnly = !editable;\n  supportedProps.rows = multiline ? numberOfLines : undefined;\n  supportedProps.spellCheck = spellCheck != null ? spellCheck : autoCorrect;\n  supportedProps.style = style;\n  supportedProps.type = multiline ? undefined : type;\n  supportedProps.inputMode = inputMode;\n  var platformMethodsRef = usePlatformMethods(supportedProps);\n  var setRef = useMergeRefs(hostRef, platformMethodsRef, imperativeRef, forwardedRef);\n  supportedProps.ref = setRef;\n  return createElement(component, supportedProps);\n});\nTextInput.displayName = 'TextInput'; // $FlowFixMe\n\nTextInput.State = TextInputState;\nvar classes = css.create({\n  textinput: {\n    MozAppearance: 'textfield',\n    WebkitAppearance: 'none',\n    backgroundColor: 'transparent',\n    border: '0 solid black',\n    borderRadius: 0,\n    boxSizing: 'border-box',\n    font: '14px System',\n    margin: 0,\n    padding: 0,\n    resize: 'none'\n  }\n});\nexport default TextInput;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}