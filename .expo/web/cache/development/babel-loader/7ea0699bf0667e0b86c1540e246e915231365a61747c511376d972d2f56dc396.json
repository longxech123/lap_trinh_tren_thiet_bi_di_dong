{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EventEmitter = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _invariant = _interopRequireDefault(require(\"invariant\"));\nvar _reactNative = require(\"react-native\");\nvar nativeEmitterSubscriptionKey = '@@nativeEmitterSubscription@@';\nvar EventEmitter = function () {\n  function EventEmitter(nativeModule) {\n    (0, _classCallCheck2.default)(this, EventEmitter);\n    this._listenerCount = 0;\n    this._nativeModule = nativeModule;\n    this._eventEmitter = new _reactNative.NativeEventEmitter(nativeModule);\n  }\n  (0, _createClass2.default)(EventEmitter, [{\n    key: \"addListener\",\n    value: function addListener(eventName, listener) {\n      var _this = this,\n        _subscription;\n      if (!this._listenerCount && _reactNative.Platform.OS !== 'ios' && this._nativeModule.startObserving) {\n        this._nativeModule.startObserving();\n      }\n      this._listenerCount++;\n      var nativeEmitterSubscription = this._eventEmitter.addListener(eventName, listener);\n      var subscription = (_subscription = {}, (0, _defineProperty2.default)(_subscription, nativeEmitterSubscriptionKey, nativeEmitterSubscription), (0, _defineProperty2.default)(_subscription, \"remove\", function remove() {\n        _this.removeSubscription(subscription);\n      }), _subscription);\n      return subscription;\n    }\n  }, {\n    key: \"removeAllListeners\",\n    value: function removeAllListeners(eventName) {\n      var removedListenerCount = this._eventEmitter.listenerCount ? this._eventEmitter.listenerCount(eventName) : this._eventEmitter.listeners(eventName).length;\n      this._eventEmitter.removeAllListeners(eventName);\n      this._listenerCount -= removedListenerCount;\n      (0, _invariant.default)(this._listenerCount >= 0, \"EventEmitter must have a non-negative number of listeners\");\n      if (!this._listenerCount && _reactNative.Platform.OS !== 'ios' && this._nativeModule.stopObserving) {\n        this._nativeModule.stopObserving();\n      }\n    }\n  }, {\n    key: \"removeSubscription\",\n    value: function removeSubscription(subscription) {\n      var nativeEmitterSubscription = subscription[nativeEmitterSubscriptionKey];\n      if (!nativeEmitterSubscription) {\n        return;\n      }\n      if ('remove' in nativeEmitterSubscription) {\n        nativeEmitterSubscription.remove();\n      } else if ('removeSubscription' in this._eventEmitter) {\n        this._eventEmitter.removeSubscription(nativeEmitterSubscription);\n      }\n      this._listenerCount--;\n      delete subscription[nativeEmitterSubscriptionKey];\n      subscription.remove = function () {};\n      if (!this._listenerCount && _reactNative.Platform.OS !== 'ios' && this._nativeModule.stopObserving) {\n        this._nativeModule.stopObserving();\n      }\n    }\n  }, {\n    key: \"emit\",\n    value: function emit(eventName) {\n      var _this$_eventEmitter;\n      for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        params[_key - 1] = arguments[_key];\n      }\n      (_this$_eventEmitter = this._eventEmitter).emit.apply(_this$_eventEmitter, [eventName].concat(params));\n    }\n  }]);\n  return EventEmitter;\n}();\nexports.EventEmitter = EventEmitter;","map":{"version":3,"names":["_invariant","_interopRequireDefault","require","_reactNative","nativeEmitterSubscriptionKey","EventEmitter","nativeModule","_classCallCheck2","default","_listenerCount","_nativeModule","_eventEmitter","NativeEventEmitter","_createClass2","key","value","addListener","eventName","listener","_this","_subscription","Platform","OS","startObserving","nativeEmitterSubscription","subscription","_defineProperty2","remove","removeSubscription","removeAllListeners","removedListenerCount","listenerCount","listeners","length","invariant","stopObserving","emit","_this$_eventEmitter","_len","arguments","params","Array","_key","apply","concat","exports"],"sources":["C:\\Users\\DELL\\Downloads\\ltmobile\\ltmobile\\muvi-master\\node_modules\\@unimodules\\react-native-adapter\\src\\EventEmitter.ts"],"sourcesContent":["import invariant from 'invariant';\nimport { NativeEventEmitter, Platform } from 'react-native';\n\nconst nativeEmitterSubscriptionKey = '@@nativeEmitterSubscription@@';\n\ntype NativeModule = {\n  startObserving?: () => void;\n  stopObserving?: () => void;\n  addListener: (eventName: string) => void;\n  removeListeners: (count: number) => void;\n};\n\n// @needsAudit\nexport type Subscription = {\n  /**\n   * A method to unsubscribe the listener.\n   */\n  remove: () => void;\n};\n\nexport class EventEmitter {\n  _listenerCount = 0;\n  _nativeModule: NativeModule;\n  _eventEmitter: NativeEventEmitter;\n\n  constructor(nativeModule: NativeModule) {\n    this._nativeModule = nativeModule;\n    this._eventEmitter = new NativeEventEmitter(nativeModule as any);\n  }\n\n  addListener<T>(eventName: string, listener: (event: T) => void): Subscription {\n    if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.startObserving) {\n      this._nativeModule.startObserving();\n    }\n\n    this._listenerCount++;\n    const nativeEmitterSubscription = this._eventEmitter.addListener(eventName, listener);\n    const subscription = {\n      [nativeEmitterSubscriptionKey]: nativeEmitterSubscription,\n      remove: () => {\n        this.removeSubscription(subscription);\n      },\n    };\n    return subscription;\n  }\n\n  removeAllListeners(eventName: string): void {\n    // @ts-ignore: the EventEmitter interface has been changed in react-native@0.64.0\n    const removedListenerCount = this._eventEmitter.listenerCount\n      ? // @ts-ignore: this is available since 0.64\n        this._eventEmitter.listenerCount(eventName)\n      : // @ts-ignore: this is available in older versions\n        this._eventEmitter.listeners(eventName).length;\n    this._eventEmitter.removeAllListeners(eventName);\n    this._listenerCount -= removedListenerCount;\n    invariant(\n      this._listenerCount >= 0,\n      `EventEmitter must have a non-negative number of listeners`\n    );\n\n    if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.stopObserving) {\n      this._nativeModule.stopObserving();\n    }\n  }\n\n  removeSubscription(subscription: Subscription): void {\n    const nativeEmitterSubscription = subscription[nativeEmitterSubscriptionKey];\n    if (!nativeEmitterSubscription) {\n      return;\n    }\n\n    if ('remove' in nativeEmitterSubscription) {\n      // `react-native-web@0.17.1` doesn't support `removeSubscription`\n      nativeEmitterSubscription.remove();\n    } else if ('removeSubscription' in this._eventEmitter) {\n      this._eventEmitter.removeSubscription(nativeEmitterSubscription!);\n    }\n    this._listenerCount--;\n\n    // Ensure that the emitter's internal state remains correct even if `removeSubscription` is\n    // called again with the same subscription\n    delete subscription[nativeEmitterSubscriptionKey];\n\n    // Release closed-over references to the emitter\n    subscription.remove = () => {};\n\n    if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.stopObserving) {\n      this._nativeModule.stopObserving();\n    }\n  }\n\n  emit(eventName: string, ...params: any[]): void {\n    this._eventEmitter.emit(eventName, ...params);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}