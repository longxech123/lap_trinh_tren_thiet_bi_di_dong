{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.loadString = loadString;\nexports.saveString = saveString;\nexports.load = load;\nexports.save = save;\nexports.remove = remove;\nexports.clear = clear;\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _asyncStorage = _interopRequireDefault(require(\"@react-native-async-storage/async-storage\"));\nfunction loadString(key) {\n  return _regenerator.default.async(function loadString$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regenerator.default.awrap(_asyncStorage.default.getItem(key));\n        case 3:\n          return _context.abrupt(\"return\", _context.sent);\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n          return _context.abrupt(\"return\", null);\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n}\nfunction saveString(key, value) {\n  return _regenerator.default.async(function saveString$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regenerator.default.awrap(_asyncStorage.default.setItem(key, value));\n        case 3:\n          return _context2.abrupt(\"return\", true);\n        case 6:\n          _context2.prev = 6;\n          _context2.t0 = _context2[\"catch\"](0);\n          return _context2.abrupt(\"return\", false);\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n}\nfunction load(key) {\n  var almostThere;\n  return _regenerator.default.async(function load$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return _regenerator.default.awrap(_asyncStorage.default.getItem(key));\n        case 3:\n          almostThere = _context3.sent;\n          return _context3.abrupt(\"return\", almostThere ? JSON.parse(almostThere) : null);\n        case 7:\n          _context3.prev = 7;\n          _context3.t0 = _context3[\"catch\"](0);\n          return _context3.abrupt(\"return\", null);\n        case 10:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n}\nfunction save(key, value) {\n  return _regenerator.default.async(function save$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return _regenerator.default.awrap(_asyncStorage.default.setItem(key, JSON.stringify(value)));\n        case 3:\n          return _context4.abrupt(\"return\", true);\n        case 6:\n          _context4.prev = 6;\n          _context4.t0 = _context4[\"catch\"](0);\n          return _context4.abrupt(\"return\", false);\n        case 9:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n}\nfunction remove(key) {\n  return _regenerator.default.async(function remove$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return _regenerator.default.awrap(_asyncStorage.default.removeItem(key));\n        case 3:\n          _context5.next = 7;\n          break;\n        case 5:\n          _context5.prev = 5;\n          _context5.t0 = _context5[\"catch\"](0);\n        case 7:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, [[0, 5]], Promise);\n}\nfunction clear() {\n  return _regenerator.default.async(function clear$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return _regenerator.default.awrap(_asyncStorage.default.clear());\n        case 3:\n          _context6.next = 7;\n          break;\n        case 5:\n          _context6.prev = 5;\n          _context6.t0 = _context6[\"catch\"](0);\n        case 7:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, [[0, 5]], Promise);\n}","map":{"version":3,"names":["loadString","key","AsyncStorage","getItem","saveString","value","setItem","load","almostThere","JSON","parse","save","stringify","remove","removeItem","clear"],"sources":["D:/EPU/k√¨ 1 2022-2023/ltmobile/muvi-master/src/utils/storage/storage.ts"],"sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\n\n/**\n * Loads a string from storage.\n *\n * @param key The key to fetch.\n */\nexport async function loadString(key: string): Promise<string | null> {\n  try {\n    return await AsyncStorage.getItem(key);\n  } catch {\n    // not sure why this would fail... even reading the RN docs I'm unclear\n    return null;\n  }\n}\n\n/**\n * Saves a string to storage.\n *\n * @param key The key to fetch.\n * @param value The value to store.\n */\nexport async function saveString(key: string, value: string): Promise<boolean> {\n  try {\n    await AsyncStorage.setItem(key, value);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * Loads something from storage and runs it thru JSON.parse.\n *\n * @param key The key to fetch.\n */\nexport async function load(key: string): Promise<any | null> {\n  try {\n    const almostThere = await AsyncStorage.getItem(key);\n\n    return almostThere ? JSON.parse(almostThere) : null;\n  } catch {\n    return null;\n  }\n}\n\n/**\n * Saves an object to storage.\n *\n * @param key The key to fetch.\n * @param value The value to store.\n */\nexport async function save(key: string, value: any): Promise<boolean> {\n  try {\n    await AsyncStorage.setItem(key, JSON.stringify(value));\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * Removes something from storage.\n *\n * @param key The key to kill.\n */\nexport async function remove(key: string): Promise<void> {\n  try {\n    await AsyncStorage.removeItem(key);\n  } catch {}\n}\n\n/**\n * Burn it all to the ground.\n */\nexport async function clear(): Promise<void> {\n  try {\n    await AsyncStorage.clear();\n  } catch {}\n}\n"],"mappings":";;;;;;;;;;;AAAA;AAOO,SAAeA,UAAU,CAACC,GAAW;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA;UAAA,kCAE3BC,qBAAY,CAACC,OAAO,CAACF,GAAG,CAAC;QAAA;UAAA;QAAA;UAAA;UAAA;UAAA,iCAG/B,IAAI;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAUR,SAAeG,UAAU,CAACH,GAAW,EAAEI,KAAa;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA;UAAA,kCAEjDH,qBAAY,CAACI,OAAO,CAACL,GAAG,EAAEI,KAAK,CAAC;QAAA;UAAA,kCAC/B,IAAI;QAAA;UAAA;UAAA;UAAA,kCAEJ,KAAK;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAST,SAAeE,IAAI,CAACN,GAAW;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA;UAAA,kCAERC,qBAAY,CAACC,OAAO,CAACF,GAAG,CAAC;QAAA;UAA7CO,WAAW;UAAA,kCAEVA,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACF,WAAW,CAAC,GAAG,IAAI;QAAA;UAAA;UAAA;UAAA,kCAE5C,IAAI;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAUR,SAAeG,IAAI,CAACV,GAAW,EAAEI,KAAU;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA;UAAA,kCAExCH,qBAAY,CAACI,OAAO,CAACL,GAAG,EAAEQ,IAAI,CAACG,SAAS,CAACP,KAAK,CAAC,CAAC;QAAA;UAAA,kCAC/C,IAAI;QAAA;UAAA;UAAA;UAAA,kCAEJ,KAAK;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAST,SAAeQ,MAAM,CAACZ,GAAW;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA;UAAA,kCAE9BC,qBAAY,CAACY,UAAU,CAACb,GAAG,CAAC;QAAA;UAAA;UAAA;QAAA;UAAA;UAAA;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAO/B,SAAec,KAAK;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA;UAAA,kCAEjBb,qBAAY,CAACa,KAAK,EAAE;QAAA;UAAA;UAAA;QAAA;UAAA;UAAA;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA"},"metadata":{},"sourceType":"script"}