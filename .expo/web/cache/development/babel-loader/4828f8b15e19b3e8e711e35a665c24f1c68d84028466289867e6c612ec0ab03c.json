{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RotationGestureHandler = exports.PinchGestureHandler = exports.PanGestureHandler = exports.LongPressGestureHandler = exports.ForceTouchGestureHandler = exports.FlingGestureHandler = exports.TapGestureHandler = exports.baseProps = void 0;\nvar _defineProperty3 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _createHandler = _interopRequireDefault(require(\"./createHandler\"));\nvar _PlatformConstants = _interopRequireDefault(require(\"../PlatformConstants\"));\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) { if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } } return n.default = e, t && t.set(e, n), n; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty3.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nvar baseProps = ['id', 'enabled', 'minPointers', 'waitFor', 'simultaneousHandlers', 'shouldCancelWhenOutside', 'hitSlop', 'onBegan', 'onFailed', 'onCancelled', 'onActivated', 'onEnded', 'onGestureEvent', 'onHandlerStateChange'];\nexports.baseProps = baseProps;\nvar TapGestureHandler = (0, _createHandler.default)({\n  name: 'TapGestureHandler',\n  allowedProps: [].concat(baseProps, ['maxDurationMs', 'maxDelayMs', 'numberOfTaps', 'maxDeltaX', 'maxDeltaY', 'maxDist', 'minPointers']),\n  config: {}\n});\nexports.TapGestureHandler = TapGestureHandler;\nvar FlingGestureHandler = (0, _createHandler.default)({\n  name: 'FlingGestureHandler',\n  allowedProps: [].concat(baseProps, ['numberOfPointers', 'direction']),\n  config: {}\n});\nexports.FlingGestureHandler = FlingGestureHandler;\nvar ForceTouchFallback = function (_React$Component) {\n  (0, _inherits2.default)(ForceTouchFallback, _React$Component);\n  var _super = _createSuper(ForceTouchFallback);\n  function ForceTouchFallback() {\n    (0, _classCallCheck2.default)(this, ForceTouchFallback);\n    return _super.apply(this, arguments);\n  }\n  (0, _createClass2.default)(ForceTouchFallback, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.warn('ForceTouchGestureHandler is not available on this platform. Please use ForceTouchGestureHandler.forceTouchAvailable to conditionally render other components that would provide a fallback behavior specific to your usecase');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.props.children;\n    }\n  }]);\n  return ForceTouchFallback;\n}(React.Component);\n_defineProperty(ForceTouchFallback, \"forceTouchAvailable\", false);\nvar ForceTouchGestureHandler = _PlatformConstants.default !== null && _PlatformConstants.default !== void 0 && _PlatformConstants.default.forceTouchAvailable ? (0, _createHandler.default)({\n  name: 'ForceTouchGestureHandler',\n  allowedProps: [].concat(baseProps, ['minForce', 'maxForce', 'feedbackOnActivation']),\n  config: {}\n}) : ForceTouchFallback;\nexports.ForceTouchGestureHandler = ForceTouchGestureHandler;\nForceTouchGestureHandler.forceTouchAvailable = (_PlatformConstants.default === null || _PlatformConstants.default === void 0 ? void 0 : _PlatformConstants.default.forceTouchAvailable) || false;\nvar LongPressGestureHandler = (0, _createHandler.default)({\n  name: 'LongPressGestureHandler',\n  allowedProps: [].concat(baseProps, ['minDurationMs', 'maxDist']),\n  config: {}\n});\nexports.LongPressGestureHandler = LongPressGestureHandler;\nfunction validatePanGestureHandlerProps(props) {\n  if (props.minDeltaX && props.activeOffsetX) {\n    throw new Error(\"It's not supported use minDeltaX with activeOffsetXStart or activeOffsetXEnd\");\n  }\n  if (props.maxDeltaX && props.failOffsetX) {\n    throw new Error(\"It's not supported use minDeltaX with activeOffsetXStart or activeOffsetXEnd\");\n  }\n  if (props.minDeltaY && props.activeOffsetY) {\n    throw new Error(\"It's not supported use minDeltaX with activeOffsetYStart or activeOffsetYEnd\");\n  }\n  if (props.maxDeltaY && props.failOffsetY) {\n    throw new Error(\"It's not supported use minDeltaX with activeOffsetYStart or activeOffsetYEnd\");\n  }\n  if (Array.isArray(props.activeOffsetX) && (props.activeOffsetX[0] > 0 || props.activeOffsetX[1] < 0)) {\n    throw new Error(\"First element of activeOffsetX should be negative, a the second one should be positive\");\n  }\n  if (Array.isArray(props.activeOffsetY) && (props.activeOffsetY[0] > 0 || props.activeOffsetY[1] < 0)) {\n    throw new Error(\"First element of activeOffsetY should be negative, a the second one should be positive\");\n  }\n  if (Array.isArray(props.failOffsetX) && (props.failOffsetX[0] > 0 || props.failOffsetX[1] < 0)) {\n    throw new Error(\"First element of failOffsetX should be negative, a the second one should be positive\");\n  }\n  if (Array.isArray(props.failOffsetY) && (props.failOffsetY[0] > 0 || props.failOffsetY[1] < 0)) {\n    throw new Error(\"First element of failOffsetY should be negative, a the second one should be positive\");\n  }\n}\nfunction transformPanGestureHandlerProps(props) {\n  var res = _objectSpread({}, props);\n  if (props.minDeltaX !== undefined) {\n    delete res.minDeltaX;\n    res.activeOffsetXStart = -props.minDeltaX;\n    res.activeOffsetXEnd = props.minDeltaX;\n  }\n  if (props.maxDeltaX !== undefined) {\n    delete res.maxDeltaX;\n    res.failOffsetXStart = -props.maxDeltaX;\n    res.failOffsetXEnd = props.maxDeltaX;\n  }\n  if (props.minOffsetX !== undefined) {\n    delete res.minOffsetX;\n    if (props.minOffsetX < 0) {\n      res.activeOffsetXStart = props.minOffsetX;\n    } else {\n      res.activeOffsetXEnd = props.minOffsetX;\n    }\n  }\n  if (props.minDeltaY !== undefined) {\n    delete res.minDeltaY;\n    res.activeOffsetYStart = -props.minDeltaY;\n    res.activeOffsetYEnd = props.minDeltaY;\n  }\n  if (props.maxDeltaY !== undefined) {\n    delete res.maxDeltaY;\n    res.failOffsetYStart = -props.maxDeltaY;\n    res.failOffsetYEnd = props.maxDeltaY;\n  }\n  if (props.minOffsetY !== undefined) {\n    delete res.minOffsetY;\n    if (props.minOffsetY < 0) {\n      res.activeOffsetYStart = props.minOffsetY;\n    } else {\n      res.activeOffsetYEnd = props.minOffsetY;\n    }\n  }\n  if (props.activeOffsetX !== undefined) {\n    delete res.activeOffsetX;\n    if (Array.isArray(props.activeOffsetX)) {\n      res.activeOffsetXStart = props.activeOffsetX[0];\n      res.activeOffsetXEnd = props.activeOffsetX[1];\n    } else if (props.activeOffsetX < 0) {\n      res.activeOffsetXStart = props.activeOffsetX;\n    } else {\n      res.activeOffsetXEnd = props.activeOffsetX;\n    }\n  }\n  if (props.activeOffsetY !== undefined) {\n    delete res.activeOffsetY;\n    if (Array.isArray(props.activeOffsetY)) {\n      res.activeOffsetYStart = props.activeOffsetY[0];\n      res.activeOffsetYEnd = props.activeOffsetY[1];\n    } else if (props.activeOffsetY < 0) {\n      res.activeOffsetYStart = props.activeOffsetY;\n    } else {\n      res.activeOffsetYEnd = props.activeOffsetY;\n    }\n  }\n  if (props.failOffsetX !== undefined) {\n    delete res.failOffsetX;\n    if (Array.isArray(props.failOffsetX)) {\n      res.failOffsetXStart = props.failOffsetX[0];\n      res.failOffsetXEnd = props.failOffsetX[1];\n    } else if (props.failOffsetX < 0) {\n      res.failOffsetXStart = props.failOffsetX;\n    } else {\n      res.failOffsetXEnd = props.failOffsetX;\n    }\n  }\n  if (props.failOffsetY !== undefined) {\n    delete res.failOffsetY;\n    if (Array.isArray(props.failOffsetY)) {\n      res.failOffsetYStart = props.failOffsetY[0];\n      res.failOffsetYEnd = props.failOffsetY[1];\n    } else if (props.failOffsetY < 0) {\n      res.failOffsetYStart = props.failOffsetY;\n    } else {\n      res.failOffsetYEnd = props.failOffsetY;\n    }\n  }\n  return res;\n}\nfunction managePanProps(props) {\n  if (__DEV__) {\n    validatePanGestureHandlerProps(props);\n  }\n  return transformPanGestureHandlerProps(props);\n}\nvar PanGestureHandler = (0, _createHandler.default)({\n  name: 'PanGestureHandler',\n  allowedProps: [].concat(baseProps, ['activeOffsetY', 'activeOffsetX', 'failOffsetY', 'failOffsetX', 'minDist', 'minVelocity', 'minVelocityX', 'minVelocityY', 'minPointers', 'maxPointers', 'avgTouches', 'enableTrackpadTwoFingerGesture']),\n  config: {},\n  transformProps: managePanProps,\n  customNativeProps: ['activeOffsetYStart', 'activeOffsetYEnd', 'activeOffsetXStart', 'activeOffsetXEnd', 'failOffsetYStart', 'failOffsetYEnd', 'failOffsetXStart', 'failOffsetXEnd']\n});\nexports.PanGestureHandler = PanGestureHandler;\nvar PinchGestureHandler = (0, _createHandler.default)({\n  name: 'PinchGestureHandler',\n  allowedProps: baseProps,\n  config: {}\n});\nexports.PinchGestureHandler = PinchGestureHandler;\nvar RotationGestureHandler = (0, _createHandler.default)({\n  name: 'RotationGestureHandler',\n  allowedProps: baseProps,\n  config: {}\n});\nexports.RotationGestureHandler = RotationGestureHandler;","map":{"version":3,"names":["React","_interopRequireWildcard","require","_createHandler","_interopRequireDefault","_PlatformConstants","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","ownKeys","keys","getOwnPropertySymbols","o","filter","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty3","getOwnPropertyDescriptors","defineProperties","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","result","NewTarget","constructor","Reflect","construct","_possibleConstructorReturn2","sham","Proxy","Boolean","valueOf","baseProps","exports","TapGestureHandler","createHandler","name","allowedProps","concat","config","FlingGestureHandler","ForceTouchFallback","_React$Component","_inherits2","_super","_classCallCheck2","_createClass2","key","value","componentDidMount","console","warn","render","props","children","Component","ForceTouchGestureHandler","PlatformConstants","forceTouchAvailable","LongPressGestureHandler","validatePanGestureHandlerProps","minDeltaX","activeOffsetX","Error","maxDeltaX","failOffsetX","minDeltaY","activeOffsetY","maxDeltaY","failOffsetY","Array","isArray","transformPanGestureHandlerProps","res","undefined","activeOffsetXStart","activeOffsetXEnd","failOffsetXStart","failOffsetXEnd","minOffsetX","activeOffsetYStart","activeOffsetYEnd","failOffsetYStart","failOffsetYEnd","minOffsetY","managePanProps","__DEV__","PanGestureHandler","transformProps","customNativeProps","PinchGestureHandler","RotationGestureHandler"],"sources":["C:\\Users\\DELL\\Downloads\\ltmobile\\ltmobile\\muvi-master\\node_modules\\react-native-gesture-handler\\lib\\module\\handlers\\gestureHandlers.ts"],"sourcesContent":["// Previous types exported gesture handlers as classes which creates an interface and variable, both named the same as class.\n// Without those types, we'd introduce breaking change, forcing users to prefix every handler type specification with typeof\n// e.g. React.createRef<TapGestureHandler> -> React.createRef<typeof TapGestureHandler>.\n// See https://www.typescriptlang.org/docs/handbook/classes.html#constructor-functions for reference.\nimport * as React from 'react';\n\nimport createHandler from './createHandler';\nimport PlatformConstants from '../PlatformConstants';\nimport { State } from '../State';\nimport { ValueOf } from '../typeUtils';\n\nexport interface GestureEventPayload {\n  handlerTag: number;\n  numberOfPointers: number;\n  state: ValueOf<typeof State>;\n}\n\nexport interface HandlerStateChangeEventPayload {\n  handlerTag: number;\n  numberOfPointers: number;\n  state: ValueOf<typeof State>;\n  oldState: ValueOf<typeof State>;\n}\n\n//TODO(TS) events in handlers\n\nexport interface GestureEvent<ExtraEventPayloadT = Record<string, unknown>> {\n  nativeEvent: Readonly<GestureEventPayload & ExtraEventPayloadT>;\n}\nexport interface HandlerStateChangeEvent<\n  ExtraEventPayloadT = Record<string, unknown>\n> {\n  nativeEvent: Readonly<HandlerStateChangeEventPayload & ExtraEventPayloadT>;\n}\n\n// Events payloads are types instead of interfaces due to TS limitation.\n// See https://github.com/microsoft/TypeScript/issues/15300 for more info.\nexport type BaseGestureHandlerProps<\n  ExtraEventPayloadT extends Record<string, unknown> = Record<string, unknown>\n> = {\n  id?: string;\n  enabled?: boolean;\n  minPointers?: number;\n  waitFor?: React.Ref<unknown> | React.Ref<unknown>[];\n  simultaneousHandlers?: React.Ref<unknown> | React.Ref<unknown>[];\n  shouldCancelWhenOutside?: boolean;\n  hitSlop?:\n    | number\n    // TODO(TS) take into consideration types from GestureHandler#setHitSlop\n    | Partial<\n        Record<\n          'left' | 'right' | 'top' | 'bottom' | 'vertical' | 'horizontal',\n          number\n        >\n      >\n    | Record<'width' | 'left', number>\n    | Record<'width' | 'right', number>\n    | Record<'height' | 'top', number>\n    | Record<'height' | 'bottom', number>;\n  // TODO(TS) - fix event types\n  onBegan?: (event: HandlerStateChangeEvent) => void;\n  onFailed?: (event: HandlerStateChangeEvent) => void;\n  onCancelled?: (event: HandlerStateChangeEvent) => void;\n  onActivated?: (event: HandlerStateChangeEvent) => void;\n  onEnded?: (event: HandlerStateChangeEvent) => void;\n\n  //TODO(TS) consider using NativeSyntheticEvent\n  onGestureEvent?: (event: GestureEvent<ExtraEventPayloadT>) => void;\n  onHandlerStateChange?: (\n    event: HandlerStateChangeEvent<ExtraEventPayloadT>\n  ) => void;\n};\n\nexport const baseProps = [\n  'id',\n  'enabled',\n  'minPointers',\n  'waitFor',\n  'simultaneousHandlers',\n  'shouldCancelWhenOutside',\n  'hitSlop',\n  'onBegan',\n  'onFailed',\n  'onCancelled',\n  'onActivated',\n  'onEnded',\n  'onGestureEvent',\n  'onHandlerStateChange',\n] as const;\n\nexport type TapGestureHandlerEventPayload = {\n  x: number;\n  y: number;\n  absoluteX: number;\n  absoluteY: number;\n};\n\nexport interface TapGestureHandlerProps\n  extends BaseGestureHandlerProps<TapGestureHandlerEventPayload> {\n  minPointers?: number;\n  maxDurationMs?: number;\n  maxDelayMs?: number;\n  numberOfTaps?: number;\n  maxDeltaX?: number;\n  maxDeltaY?: number;\n  maxDist?: number;\n}\n\nexport type TapGestureHandler = typeof TapGestureHandler;\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of this file\nexport const TapGestureHandler = createHandler<\n  TapGestureHandlerProps,\n  TapGestureHandlerEventPayload\n>({\n  name: 'TapGestureHandler',\n  allowedProps: [\n    ...baseProps,\n    'maxDurationMs',\n    'maxDelayMs',\n    'numberOfTaps',\n    'maxDeltaX',\n    'maxDeltaY',\n    'maxDist',\n    'minPointers',\n  ] as const,\n  config: {},\n});\n\nexport type FlingGestureHandlerEventPayload = {\n  x: number;\n  y: number;\n  absoluteX: number;\n  absoluteY: number;\n};\n\nexport interface FlingGestureHandlerProps\n  extends BaseGestureHandlerProps<FlingGestureHandlerEventPayload> {\n  direction?: number;\n  numberOfPointers?: number;\n}\n\nexport type FlingGestureHandler = typeof FlingGestureHandler;\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of this file\nexport const FlingGestureHandler = createHandler<\n  FlingGestureHandlerProps,\n  FlingGestureHandlerEventPayload\n>({\n  name: 'FlingGestureHandler',\n  allowedProps: [...baseProps, 'numberOfPointers', 'direction'] as const,\n  config: {},\n});\n\nclass ForceTouchFallback extends React.Component {\n  static forceTouchAvailable = false;\n  componentDidMount() {\n    console.warn(\n      'ForceTouchGestureHandler is not available on this platform. Please use ForceTouchGestureHandler.forceTouchAvailable to conditionally render other components that would provide a fallback behavior specific to your usecase'\n    );\n  }\n  render() {\n    return this.props.children;\n  }\n}\n\nexport type ForceTouchGestureHandlerEventPayload = {\n  x: number;\n  y: number;\n  absoluteX: number;\n  absoluteY: number;\n  force: number;\n};\n\nexport interface ForceTouchGestureHandlerProps\n  extends BaseGestureHandlerProps<ForceTouchGestureHandlerEventPayload> {\n  minForce?: number;\n  maxForce?: number;\n  feedbackOnActivation?: boolean;\n}\n\nexport type ForceTouchGestureHandler = typeof ForceTouchGestureHandler & {\n  forceTouchAvailable: boolean;\n};\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of this file\nexport const ForceTouchGestureHandler = PlatformConstants?.forceTouchAvailable\n  ? createHandler<\n      ForceTouchGestureHandlerProps,\n      ForceTouchGestureHandlerEventPayload\n    >({\n      name: 'ForceTouchGestureHandler',\n      allowedProps: [\n        ...baseProps,\n        'minForce',\n        'maxForce',\n        'feedbackOnActivation',\n      ] as const,\n      config: {},\n    })\n  : ForceTouchFallback;\n\n(ForceTouchGestureHandler as ForceTouchGestureHandler).forceTouchAvailable =\n  PlatformConstants?.forceTouchAvailable || false;\n\nexport type LongPressGestureHandlerEventPayload = {\n  x: number;\n  y: number;\n  absoluteX: number;\n  absoluteY: number;\n};\n\nexport interface LongPressGestureHandlerProps\n  extends BaseGestureHandlerProps<LongPressGestureHandlerEventPayload> {\n  minDurationMs?: number;\n  maxDist?: number;\n}\n\nexport type LongPressGestureHandler = typeof LongPressGestureHandler;\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of this file\nexport const LongPressGestureHandler = createHandler<\n  LongPressGestureHandlerProps,\n  LongPressGestureHandlerEventPayload\n>({\n  name: 'LongPressGestureHandler',\n  allowedProps: [...baseProps, 'minDurationMs', 'maxDist'] as const,\n  config: {},\n});\n\nfunction validatePanGestureHandlerProps(props: PanGestureHandlerProps) {\n  if (props.minDeltaX && props.activeOffsetX) {\n    throw new Error(\n      `It's not supported use minDeltaX with activeOffsetXStart or activeOffsetXEnd`\n    );\n  }\n  if (props.maxDeltaX && props.failOffsetX) {\n    throw new Error(\n      `It's not supported use minDeltaX with activeOffsetXStart or activeOffsetXEnd`\n    );\n  }\n  if (props.minDeltaY && props.activeOffsetY) {\n    throw new Error(\n      `It's not supported use minDeltaX with activeOffsetYStart or activeOffsetYEnd`\n    );\n  }\n  if (props.maxDeltaY && props.failOffsetY) {\n    throw new Error(\n      `It's not supported use minDeltaX with activeOffsetYStart or activeOffsetYEnd`\n    );\n  }\n  if (\n    Array.isArray(props.activeOffsetX) &&\n    (props.activeOffsetX[0] > 0 || props.activeOffsetX[1] < 0)\n  ) {\n    throw new Error(\n      `First element of activeOffsetX should be negative, a the second one should be positive`\n    );\n  }\n\n  if (\n    Array.isArray(props.activeOffsetY) &&\n    (props.activeOffsetY[0] > 0 || props.activeOffsetY[1] < 0)\n  ) {\n    throw new Error(\n      `First element of activeOffsetY should be negative, a the second one should be positive`\n    );\n  }\n\n  if (\n    Array.isArray(props.failOffsetX) &&\n    (props.failOffsetX[0] > 0 || props.failOffsetX[1] < 0)\n  ) {\n    throw new Error(\n      `First element of failOffsetX should be negative, a the second one should be positive`\n    );\n  }\n\n  if (\n    Array.isArray(props.failOffsetY) &&\n    (props.failOffsetY[0] > 0 || props.failOffsetY[1] < 0)\n  ) {\n    throw new Error(\n      `First element of failOffsetY should be negative, a the second one should be positive`\n    );\n  }\n}\n\nfunction transformPanGestureHandlerProps(props: PanGestureHandlerProps) {\n  type InternalPanGHKeys =\n    | 'activeOffsetXStart'\n    | 'activeOffsetXEnd'\n    | 'failOffsetXStart'\n    | 'failOffsetXEnd'\n    | 'activeOffsetYStart'\n    | 'activeOffsetYEnd'\n    | 'failOffsetYStart'\n    | 'failOffsetYEnd';\n  type PanGestureHandlerInternalProps = PanGestureHandlerProps &\n    Partial<Record<InternalPanGHKeys, number>>;\n\n  const res: PanGestureHandlerInternalProps = { ...props };\n  if (props.minDeltaX !== undefined) {\n    delete res.minDeltaX;\n    res.activeOffsetXStart = -props.minDeltaX;\n    res.activeOffsetXEnd = props.minDeltaX;\n  }\n  if (props.maxDeltaX !== undefined) {\n    delete res.maxDeltaX;\n    res.failOffsetXStart = -props.maxDeltaX;\n    res.failOffsetXEnd = props.maxDeltaX;\n  }\n  if (props.minOffsetX !== undefined) {\n    delete res.minOffsetX;\n    if (props.minOffsetX < 0) {\n      res.activeOffsetXStart = props.minOffsetX;\n    } else {\n      res.activeOffsetXEnd = props.minOffsetX;\n    }\n  }\n\n  if (props.minDeltaY !== undefined) {\n    delete res.minDeltaY;\n    res.activeOffsetYStart = -props.minDeltaY;\n    res.activeOffsetYEnd = props.minDeltaY;\n  }\n  if (props.maxDeltaY !== undefined) {\n    delete res.maxDeltaY;\n    res.failOffsetYStart = -props.maxDeltaY;\n    res.failOffsetYEnd = props.maxDeltaY;\n  }\n\n  if (props.minOffsetY !== undefined) {\n    delete res.minOffsetY;\n    if (props.minOffsetY < 0) {\n      res.activeOffsetYStart = props.minOffsetY;\n    } else {\n      res.activeOffsetYEnd = props.minOffsetY;\n    }\n  }\n\n  if (props.activeOffsetX !== undefined) {\n    delete res.activeOffsetX;\n    if (Array.isArray(props.activeOffsetX)) {\n      res.activeOffsetXStart = props.activeOffsetX[0];\n      res.activeOffsetXEnd = props.activeOffsetX[1];\n    } else if (props.activeOffsetX < 0) {\n      res.activeOffsetXStart = props.activeOffsetX;\n    } else {\n      res.activeOffsetXEnd = props.activeOffsetX;\n    }\n  }\n\n  if (props.activeOffsetY !== undefined) {\n    delete res.activeOffsetY;\n    if (Array.isArray(props.activeOffsetY)) {\n      res.activeOffsetYStart = props.activeOffsetY[0];\n      res.activeOffsetYEnd = props.activeOffsetY[1];\n    } else if (props.activeOffsetY < 0) {\n      res.activeOffsetYStart = props.activeOffsetY;\n    } else {\n      res.activeOffsetYEnd = props.activeOffsetY;\n    }\n  }\n\n  if (props.failOffsetX !== undefined) {\n    delete res.failOffsetX;\n    if (Array.isArray(props.failOffsetX)) {\n      res.failOffsetXStart = props.failOffsetX[0];\n      res.failOffsetXEnd = props.failOffsetX[1];\n    } else if (props.failOffsetX < 0) {\n      res.failOffsetXStart = props.failOffsetX;\n    } else {\n      res.failOffsetXEnd = props.failOffsetX;\n    }\n  }\n\n  if (props.failOffsetY !== undefined) {\n    delete res.failOffsetY;\n    if (Array.isArray(props.failOffsetY)) {\n      res.failOffsetYStart = props.failOffsetY[0];\n      res.failOffsetYEnd = props.failOffsetY[1];\n    } else if (props.failOffsetY < 0) {\n      res.failOffsetYStart = props.failOffsetY;\n    } else {\n      res.failOffsetYEnd = props.failOffsetY;\n    }\n  }\n\n  return res;\n}\n\nfunction managePanProps(props: PanGestureHandlerProps) {\n  if (__DEV__) {\n    validatePanGestureHandlerProps(props);\n  }\n  return transformPanGestureHandlerProps(props);\n}\n\nexport type PanGestureHandlerEventPayload = {\n  x: number;\n  y: number;\n  absoluteX: number;\n  absoluteY: number;\n  translationX: number;\n  translationY: number;\n  velocityX: number;\n  velocityY: number;\n};\n\nexport interface PanGestureHandlerProps\n  extends BaseGestureHandlerProps<PanGestureHandlerEventPayload> {\n  /** @deprecated  use activeOffsetX*/\n  minDeltaX?: number;\n  /** @deprecated  use activeOffsetY*/\n  minDeltaY?: number;\n  /** @deprecated  use failOffsetX*/\n  maxDeltaX?: number;\n  /** @deprecated  use failOffsetY*/\n  maxDeltaY?: number;\n  /** @deprecated  use activeOffsetX*/\n  minOffsetX?: number;\n  /** @deprecated  use failOffsetY*/\n  minOffsetY?: number;\n  activeOffsetY?: number | number[];\n  activeOffsetX?: number | number[];\n  failOffsetY?: number | number[];\n  failOffsetX?: number | number[];\n  minDist?: number;\n  minVelocity?: number;\n  minVelocityX?: number;\n  minVelocityY?: number;\n  minPointers?: number;\n  maxPointers?: number;\n  avgTouches?: boolean;\n  enableTrackpadTwoFingerGesture?: boolean;\n}\n\nexport type PanGestureHandler = typeof PanGestureHandler;\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of this file\nexport const PanGestureHandler = createHandler<\n  PanGestureHandlerProps,\n  PanGestureHandlerEventPayload\n>({\n  name: 'PanGestureHandler',\n  allowedProps: [\n    ...baseProps,\n    'activeOffsetY',\n    'activeOffsetX',\n    'failOffsetY',\n    'failOffsetX',\n    'minDist',\n    'minVelocity',\n    'minVelocityX',\n    'minVelocityY',\n    'minPointers',\n    'maxPointers',\n    'avgTouches',\n    'enableTrackpadTwoFingerGesture',\n  ] as const,\n  config: {},\n  transformProps: managePanProps,\n  customNativeProps: [\n    'activeOffsetYStart',\n    'activeOffsetYEnd',\n    'activeOffsetXStart',\n    'activeOffsetXEnd',\n    'failOffsetYStart',\n    'failOffsetYEnd',\n    'failOffsetXStart',\n    'failOffsetXEnd',\n  ],\n});\n\nexport type PinchGestureHandlerEventPayload = {\n  scale: number;\n  focalX: number;\n  focalY: number;\n  velocity: number;\n};\n\nexport interface PinchGestureHandlerProps\n  extends BaseGestureHandlerProps<PinchGestureHandlerEventPayload> {}\n\nexport type PinchGestureHandler = typeof PinchGestureHandler;\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of this file\nexport const PinchGestureHandler = createHandler<\n  PinchGestureHandlerProps,\n  PinchGestureHandlerEventPayload\n>({\n  name: 'PinchGestureHandler',\n  allowedProps: baseProps,\n  config: {},\n});\n\nexport type RotationGestureHandlerEventPayload = {\n  rotation: number;\n  anchorX: number;\n  anchorY: number;\n  velocity: number;\n};\n\nexport interface RotationGestureHandlerProps\n  extends BaseGestureHandlerProps<RotationGestureHandlerEventPayload> {}\n\nexport type RotationGestureHandler = typeof RotationGestureHandler;\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of this file\nexport const RotationGestureHandler = createHandler<\n  RotationGestureHandlerProps,\n  RotationGestureHandlerEventPayload\n>({\n  name: 'RotationGestureHandler',\n  allowedProps: baseProps,\n  config: {},\n});\n"],"mappings":";;;;;;;;;;;AAIA,IAAAA,KAAA,GAAAC,uBAAA,CAAAC,OAAA;AAEA,IAAAC,cAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAAG,kBAAA,GAAAD,sBAAA,CAAAF,OAAA;AAAA,SAAAI,yBAAAC,CAAA,6BAAAC,OAAA,mBAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,yBAAAC,CAAA,WAAAA,CAAA,GAAAG,CAAA,GAAAD,CAAA,KAAAF,CAAA;AAAA,SAAAN,wBAAAM,CAAA,EAAAE,CAAA,SAAAA,CAAA,IAAAF,CAAA,IAAAA,CAAA,CAAAI,UAAA,SAAAJ,CAAA,eAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,WAAAK,OAAA,EAAAL,CAAA,QAAAG,CAAA,GAAAJ,wBAAA,CAAAG,CAAA,OAAAC,CAAA,IAAAA,CAAA,CAAAG,GAAA,CAAAN,CAAA,UAAAG,CAAA,CAAAI,GAAA,CAAAP,CAAA,OAAAQ,CAAA,KAAAC,SAAA,UAAAC,CAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,CAAA,IAAAd,CAAA,sBAAAc,CAAA,IAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAjB,CAAA,EAAAc,CAAA,SAAAI,CAAA,GAAAR,CAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAb,CAAA,EAAAc,CAAA,UAAAI,CAAA,KAAAA,CAAA,CAAAX,GAAA,IAAAW,CAAA,CAAAC,GAAA,IAAAR,MAAA,CAAAC,cAAA,CAAAJ,CAAA,EAAAM,CAAA,EAAAI,CAAA,IAAAV,CAAA,CAAAM,CAAA,IAAAd,CAAA,CAAAc,CAAA,cAAAN,CAAA,CAAAH,OAAA,GAAAL,CAAA,EAAAG,CAAA,IAAAA,CAAA,CAAAgB,GAAA,CAAAnB,CAAA,EAAAQ,CAAA,GAAAA,CAAA;AAAA,SAAAY,QAAApB,CAAA,EAAAE,CAAA,QAAAC,CAAA,GAAAQ,MAAA,CAAAU,IAAA,CAAArB,CAAA,OAAAW,MAAA,CAAAW,qBAAA,QAAAC,CAAA,GAAAZ,MAAA,CAAAW,qBAAA,CAAAtB,CAAA,GAAAE,CAAA,KAAAqB,CAAA,GAAAA,CAAA,CAAAC,MAAA,WAAAtB,CAAA,WAAAS,MAAA,CAAAE,wBAAA,CAAAb,CAAA,EAAAE,CAAA,EAAAuB,UAAA,OAAAtB,CAAA,CAAAuB,IAAA,CAAAC,KAAA,CAAAxB,CAAA,EAAAoB,CAAA,YAAApB,CAAA;AAAA,SAAAyB,cAAA5B,CAAA,aAAAE,CAAA,MAAAA,CAAA,GAAA2B,SAAA,CAAAC,MAAA,EAAA5B,CAAA,UAAAC,CAAA,WAAA0B,SAAA,CAAA3B,CAAA,IAAA2B,SAAA,CAAA3B,CAAA,QAAAA,CAAA,OAAAkB,OAAA,CAAAT,MAAA,CAAAR,CAAA,OAAA4B,OAAA,WAAA7B,CAAA,QAAA8B,gBAAA,CAAA3B,OAAA,EAAAL,CAAA,EAAAE,CAAA,EAAAC,CAAA,CAAAD,CAAA,SAAAS,MAAA,CAAAsB,yBAAA,GAAAtB,MAAA,CAAAuB,gBAAA,CAAAlC,CAAA,EAAAW,MAAA,CAAAsB,yBAAA,CAAA9B,CAAA,KAAAiB,OAAA,CAAAT,MAAA,CAAAR,CAAA,GAAA4B,OAAA,WAAA7B,CAAA,IAAAS,MAAA,CAAAC,cAAA,CAAAZ,CAAA,EAAAE,CAAA,EAAAS,MAAA,CAAAE,wBAAA,CAAAV,CAAA,EAAAD,CAAA,iBAAAF,CAAA;AAAA,SAAAmC,aAAAC,OAAA,QAAAC,yBAAA,GAAAC,yBAAA,oBAAAC,qBAAA,QAAAC,KAAA,OAAAC,gBAAA,CAAApC,OAAA,EAAA+B,OAAA,GAAAM,MAAA,MAAAL,yBAAA,QAAAM,SAAA,OAAAF,gBAAA,CAAApC,OAAA,QAAAuC,WAAA,EAAAF,MAAA,GAAAG,OAAA,CAAAC,SAAA,CAAAN,KAAA,EAAAX,SAAA,EAAAc,SAAA,YAAAD,MAAA,GAAAF,KAAA,CAAAb,KAAA,OAAAE,SAAA,gBAAAkB,2BAAA,CAAA1C,OAAA,QAAAqC,MAAA;AAAA,SAAAJ,0BAAA,eAAAO,OAAA,qBAAAA,OAAA,CAAAC,SAAA,oBAAAD,OAAA,CAAAC,SAAA,CAAAE,IAAA,2BAAAC,KAAA,oCAAAC,OAAA,CAAAnC,SAAA,CAAAoC,OAAA,CAAAlC,IAAA,CAAA4B,OAAA,CAAAC,SAAA,CAAAI,OAAA,8CAAAlD,CAAA;;;;;;;;;;;;;;AAkEO,IAAMoD,SAAS,GAAG,CACvB,IADuB,EAEvB,SAFuB,EAGvB,aAHuB,EAIvB,SAJuB,EAKvB,sBALuB,EAMvB,yBANuB,EAOvB,SAPuB,EAQvB,SARuB,EASvB,UATuB,EAUvB,aAVuB,EAWvB,aAXuB,EAYvB,SAZuB,EAavB,gBAbuB,EAcvB,sBAduB,CAAlB;AAAAC,OAAA,CAAAD,SAAA,GAAAA,SAAA;AAqCA,IAAME,iBAAiB,GAAG,IAAAC,sBAAa,EAG5C;EACAC,IAAI,EAAE,mBADN;EAEAC,YAAY,KAAAC,MAAA,CACPN,SADS,GAEZ,eAFY,EAGZ,YAHY,EAIZ,cAJY,EAKZ,WALY,EAMZ,WANY,EAOZ,SAPY,EAQZ,aARY,EAFd;EAYAO,MAAM,EAAE;AAZR,CAH4C,CAAvC;AAAAN,OAAA,CAAAC,iBAAA,GAAAA,iBAAA;AAiCA,IAAMM,mBAAmB,GAAG,IAAAL,sBAAa,EAG9C;EACAC,IAAI,EAAE,qBADN;EAEAC,YAAY,KAAAC,MAAA,CAAMN,SAAJ,GAAe,kBAAf,EAAmC,WAAnC,EAFd;EAGAO,MAAM,EAAE;AAHR,CAH8C,CAAzC;AAAAN,OAAA,CAAAO,mBAAA,GAAAA,mBAAA;AAAA,IASDC,kBAAN,aAAAC,gBAAA;EAAA,IAAAC,UAAA,CAAA1D,OAAA,EAAAwD,kBAAA,EAAAC,gBAAA;EAAA,IAAAE,MAAA,GAAA7B,YAAA,CAAA0B,kBAAA;EAAA,SAAAA,mBAAA;IAAA,IAAAI,gBAAA,CAAA5D,OAAA,QAAAwD,kBAAA;IAAA,OAAAG,MAAA,CAAArC,KAAA,OAAAE,SAAA;EAAA;EAAA,IAAAqC,aAAA,CAAA7D,OAAA,EAAAwD,kBAAA;IAAAM,GAAA;IAAAC,KAAA,EAEE,SAAAC,kBAAA,EAAoB;MAClBC,OAAO,CAACC,IAAR,CACE,8NADF;IAGD;EAAA;IAAAJ,GAAA;IAAAC,KAAA,EACD,SAAAI,OAAA,EAAS;MACP,OAAO,KAAKC,KAAL,CAAWC,QAAlB;IACD;EAAA;EAAA,OAAAb,kBAAA;AAAA,EAT8BpE,KAAK,CAACkF,SAAvC;gBAAMd,kB,yBACyB,K;AA8BxB,IAAMe,wBAAwB,GAAGC,0BAAiB,SAAjB,IAAAA,0BAAiB,WAAjB,IAAAA,0BAAiB,CAAEC,mBAAnB,GACpC,IAAAvB,sBAAa,EAGX;EACAC,IAAI,EAAE,0BADN;EAEAC,YAAY,KAAAC,MAAA,CACPN,SADS,GAEZ,UAFY,EAGZ,UAHY,EAIZ,sBAJY,EAFd;EAQAO,MAAM,EAAE;AARR,CAHW,CADuB,GAcpCE,kBAdG;AAAAR,OAAA,CAAAuB,wBAAA,GAAAA,wBAAA;AAgBNA,wBAAD,CAAuDE,mBAAvD,GACE,CAAAD,0BAAiB,SAAjB,IAAAA,0BAAiB,WAAjB,YAAAA,0BAAiB,CAAEC,mBAAnB,KAA0C,KAD5C;AAkBO,IAAMC,uBAAuB,GAAG,IAAAxB,sBAAa,EAGlD;EACAC,IAAI,EAAE,yBADN;EAEAC,YAAY,KAAAC,MAAA,CAAMN,SAAJ,GAAe,eAAf,EAAgC,SAAhC,EAFd;EAGAO,MAAM,EAAE;AAHR,CAHkD,CAA7C;AAAAN,OAAA,CAAA0B,uBAAA,GAAAA,uBAAA;AASP,SAASC,8BAATA,CAAwCP,KAAxC,EAAuE;EACrE,IAAIA,KAAK,CAACQ,SAAN,IAAmBR,KAAK,CAACS,aAA7B,EAA4C;IAC1C,MAAM,IAAIC,KAAJ,gFAAN;EAGD;EACD,IAAIV,KAAK,CAACW,SAAN,IAAmBX,KAAK,CAACY,WAA7B,EAA0C;IACxC,MAAM,IAAIF,KAAJ,gFAAN;EAGD;EACD,IAAIV,KAAK,CAACa,SAAN,IAAmBb,KAAK,CAACc,aAA7B,EAA4C;IAC1C,MAAM,IAAIJ,KAAJ,gFAAN;EAGD;EACD,IAAIV,KAAK,CAACe,SAAN,IAAmBf,KAAK,CAACgB,WAA7B,EAA0C;IACxC,MAAM,IAAIN,KAAJ,gFAAN;EAGD;EACD,IACEO,KAAK,CAACC,OAAN,CAAclB,KAAK,CAACS,aAApB,MACCT,KAAK,CAACS,aAAN,CAAoB,CAApB,IAAyB,CAAzB,IAA8BT,KAAK,CAACS,aAAN,CAAoB,CAApB,IAAyB,CADxD,CADF,EAGE;IACA,MAAM,IAAIC,KAAJ,0FAAN;EAGD;EAED,IACEO,KAAK,CAACC,OAAN,CAAclB,KAAK,CAACc,aAApB,MACCd,KAAK,CAACc,aAAN,CAAoB,CAApB,IAAyB,CAAzB,IAA8Bd,KAAK,CAACc,aAAN,CAAoB,CAApB,IAAyB,CADxD,CADF,EAGE;IACA,MAAM,IAAIJ,KAAJ,0FAAN;EAGD;EAED,IACEO,KAAK,CAACC,OAAN,CAAclB,KAAK,CAACY,WAApB,MACCZ,KAAK,CAACY,WAAN,CAAkB,CAAlB,IAAuB,CAAvB,IAA4BZ,KAAK,CAACY,WAAN,CAAkB,CAAlB,IAAuB,CADpD,CADF,EAGE;IACA,MAAM,IAAIF,KAAJ,wFAAN;EAGD;EAED,IACEO,KAAK,CAACC,OAAN,CAAclB,KAAK,CAACgB,WAApB,MACChB,KAAK,CAACgB,WAAN,CAAkB,CAAlB,IAAuB,CAAvB,IAA4BhB,KAAK,CAACgB,WAAN,CAAkB,CAAlB,IAAuB,CADpD,CADF,EAGE;IACA,MAAM,IAAIN,KAAJ,wFAAN;EAGD;AACF;AAED,SAASS,+BAATA,CAAyCnB,KAAzC,EAAwE;EAatE,IAAMoB,GAAmC,GAAAjE,aAAA,KAAQ6C,KAAA,CAAjD;EACA,IAAIA,KAAK,CAACQ,SAAN,KAAoBa,SAAxB,EAAmC;IACjC,OAAOD,GAAG,CAACZ,SAAX;IACAY,GAAG,CAACE,kBAAJ,GAAyB,CAACtB,KAAK,CAACQ,SAAhC;IACAY,GAAG,CAACG,gBAAJ,GAAuBvB,KAAK,CAACQ,SAA7B;EACD;EACD,IAAIR,KAAK,CAACW,SAAN,KAAoBU,SAAxB,EAAmC;IACjC,OAAOD,GAAG,CAACT,SAAX;IACAS,GAAG,CAACI,gBAAJ,GAAuB,CAACxB,KAAK,CAACW,SAA9B;IACAS,GAAG,CAACK,cAAJ,GAAqBzB,KAAK,CAACW,SAA3B;EACD;EACD,IAAIX,KAAK,CAAC0B,UAAN,KAAqBL,SAAzB,EAAoC;IAClC,OAAOD,GAAG,CAACM,UAAX;IACA,IAAI1B,KAAK,CAAC0B,UAAN,GAAmB,CAAvB,EAA0B;MACxBN,GAAG,CAACE,kBAAJ,GAAyBtB,KAAK,CAAC0B,UAA/B;IACD,CAFD,MAEO;MACLN,GAAG,CAACG,gBAAJ,GAAuBvB,KAAK,CAAC0B,UAA7B;IACD;EACF;EAED,IAAI1B,KAAK,CAACa,SAAN,KAAoBQ,SAAxB,EAAmC;IACjC,OAAOD,GAAG,CAACP,SAAX;IACAO,GAAG,CAACO,kBAAJ,GAAyB,CAAC3B,KAAK,CAACa,SAAhC;IACAO,GAAG,CAACQ,gBAAJ,GAAuB5B,KAAK,CAACa,SAA7B;EACD;EACD,IAAIb,KAAK,CAACe,SAAN,KAAoBM,SAAxB,EAAmC;IACjC,OAAOD,GAAG,CAACL,SAAX;IACAK,GAAG,CAACS,gBAAJ,GAAuB,CAAC7B,KAAK,CAACe,SAA9B;IACAK,GAAG,CAACU,cAAJ,GAAqB9B,KAAK,CAACe,SAA3B;EACD;EAED,IAAIf,KAAK,CAAC+B,UAAN,KAAqBV,SAAzB,EAAoC;IAClC,OAAOD,GAAG,CAACW,UAAX;IACA,IAAI/B,KAAK,CAAC+B,UAAN,GAAmB,CAAvB,EAA0B;MACxBX,GAAG,CAACO,kBAAJ,GAAyB3B,KAAK,CAAC+B,UAA/B;IACD,CAFD,MAEO;MACLX,GAAG,CAACQ,gBAAJ,GAAuB5B,KAAK,CAAC+B,UAA7B;IACD;EACF;EAED,IAAI/B,KAAK,CAACS,aAAN,KAAwBY,SAA5B,EAAuC;IACrC,OAAOD,GAAG,CAACX,aAAX;IACA,IAAIQ,KAAK,CAACC,OAAN,CAAclB,KAAK,CAACS,aAApB,CAAJ,EAAwC;MACtCW,GAAG,CAACE,kBAAJ,GAAyBtB,KAAK,CAACS,aAAN,CAAoB,CAApB,CAAzB;MACAW,GAAG,CAACG,gBAAJ,GAAuBvB,KAAK,CAACS,aAAN,CAAoB,CAApB,CAAvB;IACD,CAHD,MAGO,IAAIT,KAAK,CAACS,aAAN,GAAsB,CAA1B,EAA6B;MAClCW,GAAG,CAACE,kBAAJ,GAAyBtB,KAAK,CAACS,aAA/B;IACD,CAFM,MAEA;MACLW,GAAG,CAACG,gBAAJ,GAAuBvB,KAAK,CAACS,aAA7B;IACD;EACF;EAED,IAAIT,KAAK,CAACc,aAAN,KAAwBO,SAA5B,EAAuC;IACrC,OAAOD,GAAG,CAACN,aAAX;IACA,IAAIG,KAAK,CAACC,OAAN,CAAclB,KAAK,CAACc,aAApB,CAAJ,EAAwC;MACtCM,GAAG,CAACO,kBAAJ,GAAyB3B,KAAK,CAACc,aAAN,CAAoB,CAApB,CAAzB;MACAM,GAAG,CAACQ,gBAAJ,GAAuB5B,KAAK,CAACc,aAAN,CAAoB,CAApB,CAAvB;IACD,CAHD,MAGO,IAAId,KAAK,CAACc,aAAN,GAAsB,CAA1B,EAA6B;MAClCM,GAAG,CAACO,kBAAJ,GAAyB3B,KAAK,CAACc,aAA/B;IACD,CAFM,MAEA;MACLM,GAAG,CAACQ,gBAAJ,GAAuB5B,KAAK,CAACc,aAA7B;IACD;EACF;EAED,IAAId,KAAK,CAACY,WAAN,KAAsBS,SAA1B,EAAqC;IACnC,OAAOD,GAAG,CAACR,WAAX;IACA,IAAIK,KAAK,CAACC,OAAN,CAAclB,KAAK,CAACY,WAApB,CAAJ,EAAsC;MACpCQ,GAAG,CAACI,gBAAJ,GAAuBxB,KAAK,CAACY,WAAN,CAAkB,CAAlB,CAAvB;MACAQ,GAAG,CAACK,cAAJ,GAAqBzB,KAAK,CAACY,WAAN,CAAkB,CAAlB,CAArB;IACD,CAHD,MAGO,IAAIZ,KAAK,CAACY,WAAN,GAAoB,CAAxB,EAA2B;MAChCQ,GAAG,CAACI,gBAAJ,GAAuBxB,KAAK,CAACY,WAA7B;IACD,CAFM,MAEA;MACLQ,GAAG,CAACK,cAAJ,GAAqBzB,KAAK,CAACY,WAA3B;IACD;EACF;EAED,IAAIZ,KAAK,CAACgB,WAAN,KAAsBK,SAA1B,EAAqC;IACnC,OAAOD,GAAG,CAACJ,WAAX;IACA,IAAIC,KAAK,CAACC,OAAN,CAAclB,KAAK,CAACgB,WAApB,CAAJ,EAAsC;MACpCI,GAAG,CAACS,gBAAJ,GAAuB7B,KAAK,CAACgB,WAAN,CAAkB,CAAlB,CAAvB;MACAI,GAAG,CAACU,cAAJ,GAAqB9B,KAAK,CAACgB,WAAN,CAAkB,CAAlB,CAArB;IACD,CAHD,MAGO,IAAIhB,KAAK,CAACgB,WAAN,GAAoB,CAAxB,EAA2B;MAChCI,GAAG,CAACS,gBAAJ,GAAuB7B,KAAK,CAACgB,WAA7B;IACD,CAFM,MAEA;MACLI,GAAG,CAACU,cAAJ,GAAqB9B,KAAK,CAACgB,WAA3B;IACD;EACF;EAED,OAAOI,GAAP;AACD;AAED,SAASY,cAATA,CAAwBhC,KAAxB,EAAuD;EACrD,IAAIiC,OAAJ,EAAa;IACX1B,8BAA8B,CAACP,KAAD,CAA9B;EACD;EACD,OAAOmB,+BAA+B,CAACnB,KAAD,CAAtC;AACD;AA2CM,IAAMkC,iBAAiB,GAAG,IAAApD,sBAAa,EAG5C;EACAC,IAAI,EAAE,mBADN;EAEAC,YAAY,KAAAC,MAAA,CACPN,SADS,GAEZ,eAFY,EAGZ,eAHY,EAIZ,aAJY,EAKZ,aALY,EAMZ,SANY,EAOZ,aAPY,EAQZ,cARY,EASZ,cATY,EAUZ,aAVY,EAWZ,aAXY,EAYZ,YAZY,EAaZ,gCAbY,EAFd;EAiBAO,MAAM,EAAE,EAjBR;EAkBAiD,cAAc,EAAEH,cAlBhB;EAmBAI,iBAAiB,EAAE,CACjB,oBADiB,EAEjB,kBAFiB,EAGjB,oBAHiB,EAIjB,kBAJiB,EAKjB,kBALiB,EAMjB,gBANiB,EAOjB,kBAPiB,EAQjB,gBARiB;AAnBnB,CAH4C,CAAvC;AAAAxD,OAAA,CAAAsD,iBAAA,GAAAA,iBAAA;AA8CA,IAAMG,mBAAmB,GAAG,IAAAvD,sBAAa,EAG9C;EACAC,IAAI,EAAE,qBADN;EAEAC,YAAY,EAAEL,SAFd;EAGAO,MAAM,EAAE;AAHR,CAH8C,CAAzC;AAAAN,OAAA,CAAAyD,mBAAA,GAAAA,mBAAA;AAqBA,IAAMC,sBAAsB,GAAG,IAAAxD,sBAAa,EAGjD;EACAC,IAAI,EAAE,wBADN;EAEAC,YAAY,EAAEL,SAFd;EAGAO,MAAM,EAAE;AAHR,CAHiD,CAA5C;AAAAN,OAAA,CAAA0D,sBAAA,GAAAA,sBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}