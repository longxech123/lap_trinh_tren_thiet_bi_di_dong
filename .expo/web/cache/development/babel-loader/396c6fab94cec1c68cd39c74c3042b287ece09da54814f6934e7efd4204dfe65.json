{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getPathFromState;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar queryString = _interopRequireWildcard(require(\"query-string\"));\nvar _fromEntries = _interopRequireDefault(require(\"./fromEntries\"));\nvar _validatePathConfig = _interopRequireDefault(require(\"./validatePathConfig\"));\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) { if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } } return n.default = e, t && t.set(e, n), n; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nvar getActiveRoute = function getActiveRoute(state) {\n  var route = typeof state.index === 'number' ? state.routes[state.index] : state.routes[state.routes.length - 1];\n  if (route.state) {\n    return getActiveRoute(route.state);\n  }\n  return route;\n};\nfunction getPathFromState(state, options) {\n  if (state == null) {\n    throw Error(\"Got 'undefined' for the navigation state. You must pass a valid state object.\");\n  }\n  if (options) {\n    (0, _validatePathConfig.default)(options);\n  }\n  var configs = options !== null && options !== void 0 && options.screens ? createNormalizedConfigs(options === null || options === void 0 ? void 0 : options.screens) : {};\n  var path = '/';\n  var current = state;\n  var allParams = {};\n  var _loop = function _loop() {\n    var index = typeof current.index === 'number' ? current.index : 0;\n    var route = current.routes[index];\n    var pattern = void 0;\n    var focusedParams = void 0;\n    var focusedRoute = getActiveRoute(state);\n    var currentOptions = configs;\n    var nestedRouteNames = [];\n    var hasNext = true;\n    while (route.name in currentOptions && hasNext) {\n      pattern = currentOptions[route.name].pattern;\n      nestedRouteNames.push(route.name);\n      if (route.params) {\n        (function () {\n          var stringify = (_currentOptions$route = currentOptions[route.name]) === null || _currentOptions$route === void 0 ? void 0 : _currentOptions$route.stringify;\n          var currentParams = (0, _fromEntries.default)(Object.entries(route.params).map(function (_ref) {\n            var _ref2 = (0, _slicedToArray2.default)(_ref, 2),\n              key = _ref2[0],\n              value = _ref2[1];\n            return [key, stringify !== null && stringify !== void 0 && stringify[key] ? stringify[key](value) : String(value)];\n          }));\n          if (pattern) {\n            (0, _extends2.default)(allParams, currentParams);\n          }\n          if (focusedRoute === route) {\n            focusedParams = _objectSpread({}, currentParams);\n            (_pattern = pattern) === null || _pattern === void 0 ? void 0 : _pattern.split('/').filter(function (p) {\n              return p.startsWith(':');\n            }).forEach(function (p) {\n              var name = getParamName(p);\n              if (focusedParams) {\n                delete focusedParams[name];\n              }\n            });\n          }\n        })();\n      }\n      if (!currentOptions[route.name].screens || route.state === undefined) {\n        hasNext = false;\n      } else {\n        index = typeof route.state.index === 'number' ? route.state.index : route.state.routes.length - 1;\n        var nextRoute = route.state.routes[index];\n        var nestedConfig = currentOptions[route.name].screens;\n        if (nestedConfig && nextRoute.name in nestedConfig) {\n          route = nextRoute;\n          currentOptions = nestedConfig;\n        } else {\n          hasNext = false;\n        }\n      }\n    }\n    if (pattern === undefined) {\n      pattern = nestedRouteNames.join('/');\n    }\n    if (currentOptions[route.name] !== undefined) {\n      path += pattern.split('/').map(function (p) {\n        var name = getParamName(p);\n        if (p === '*') {\n          return route.name;\n        }\n        if (p.startsWith(':')) {\n          var value = allParams[name];\n          if (value === undefined && p.endsWith('?')) {\n            return '';\n          }\n          return encodeURIComponent(value);\n        }\n        return encodeURIComponent(p);\n      }).join('/');\n    } else {\n      path += encodeURIComponent(route.name);\n    }\n    if (!focusedParams) {\n      focusedParams = focusedRoute.params;\n    }\n    if (route.state) {\n      path += '/';\n    } else if (focusedParams) {\n      for (var param in focusedParams) {\n        if (focusedParams[param] === 'undefined') {\n          delete focusedParams[param];\n        }\n      }\n      var query = queryString.stringify(focusedParams, {\n        sort: false\n      });\n      if (query) {\n        path += \"?\" + query;\n      }\n    }\n    current = route.state;\n  };\n  while (current) {\n    var _currentOptions$route;\n    var _pattern;\n    _loop();\n  }\n  path = path.replace(/\\/+/g, '/');\n  path = path.length > 1 ? path.replace(/\\/$/, '') : path;\n  return path;\n}\nvar getParamName = function getParamName(pattern) {\n  return pattern.replace(/^:/, '').replace(/\\?$/, '');\n};\nvar joinPaths = function joinPaths() {\n  var _ref3;\n  for (var _len = arguments.length, paths = new Array(_len), _key = 0; _key < _len; _key++) {\n    paths[_key] = arguments[_key];\n  }\n  return (_ref3 = []).concat.apply(_ref3, (0, _toConsumableArray2.default)(paths.map(function (p) {\n    return p.split('/');\n  }))).filter(Boolean).join('/');\n};\nvar createConfigItem = function createConfigItem(config, parentPattern) {\n  var _pattern2;\n  if (typeof config === 'string') {\n    var _pattern3 = parentPattern ? joinPaths(parentPattern, config) : config;\n    return {\n      pattern: _pattern3\n    };\n  }\n  var pattern;\n  if (config.exact && config.path === undefined) {\n    throw new Error(\"A 'path' needs to be specified when specifying 'exact: true'. If you don't want this screen in the URL, specify it as empty string, e.g. `path: ''`.\");\n  }\n  pattern = config.exact !== true ? joinPaths(parentPattern || '', config.path || '') : config.path || '';\n  var screens = config.screens ? createNormalizedConfigs(config.screens, pattern) : undefined;\n  return {\n    pattern: (_pattern2 = pattern) === null || _pattern2 === void 0 ? void 0 : _pattern2.split('/').filter(Boolean).join('/'),\n    stringify: config.stringify,\n    screens: screens\n  };\n};\nvar createNormalizedConfigs = function createNormalizedConfigs(options, pattern) {\n  return (0, _fromEntries.default)(Object.entries(options).map(function (_ref4) {\n    var _ref5 = (0, _slicedToArray2.default)(_ref4, 2),\n      name = _ref5[0],\n      c = _ref5[1];\n    var result = createConfigItem(c, pattern);\n    return [name, result];\n  }));\n};","map":{"version":3,"names":["queryString","_interopRequireWildcard","require","_fromEntries","_interopRequireDefault","_validatePathConfig","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","ownKeys","keys","getOwnPropertySymbols","o","filter","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty2","getOwnPropertyDescriptors","defineProperties","getActiveRoute","state","route","index","routes","getPathFromState","options","Error","validatePathConfig","configs","screens","createNormalizedConfigs","path","current","allParams","_loop","pattern","focusedParams","focusedRoute","currentOptions","nestedRouteNames","hasNext","name","params","stringify","_currentOptions$route","currentParams","fromEntries","entries","map","_ref","_ref2","_slicedToArray2","key","value","String","_extends2","_pattern","split","p","startsWith","getParamName","undefined","nextRoute","nestedConfig","join","endsWith","encodeURIComponent","param","query","sort","replace","joinPaths","_ref3","_len","paths","Array","_key","concat","_toConsumableArray2","Boolean","createConfigItem","config","parentPattern","_pattern2","exact","_ref4","_ref5","c","result"],"sources":["C:\\Users\\DELL\\Downloads\\ltmobile\\ltmobile\\muvi-master\\node_modules\\@react-navigation\\core\\lib\\module\\getPathFromState.tsx"],"sourcesContent":["import type {\n  NavigationState,\n  PartialState,\n  Route,\n} from '@react-navigation/routers';\nimport * as queryString from 'query-string';\n\nimport fromEntries from './fromEntries';\nimport type { PathConfig, PathConfigMap } from './types';\nimport validatePathConfig from './validatePathConfig';\n\ntype Options<ParamList> = {\n  initialRouteName?: string;\n  screens: PathConfigMap<ParamList>;\n};\n\ntype State = NavigationState | Omit<PartialState<NavigationState>, 'stale'>;\n\ntype StringifyConfig = Record<string, (value: any) => string>;\n\ntype ConfigItem = {\n  pattern?: string;\n  stringify?: StringifyConfig;\n  screens?: Record<string, ConfigItem>;\n};\n\nconst getActiveRoute = (state: State): { name: string; params?: object } => {\n  const route =\n    typeof state.index === 'number'\n      ? state.routes[state.index]\n      : state.routes[state.routes.length - 1];\n\n  if (route.state) {\n    return getActiveRoute(route.state);\n  }\n\n  return route;\n};\n\n/**\n * Utility to serialize a navigation state object to a path string.\n *\n * @example\n * ```js\n * getPathFromState(\n *   {\n *     routes: [\n *       {\n *         name: 'Chat',\n *         params: { author: 'Jane', id: 42 },\n *       },\n *     ],\n *   },\n *   {\n *     screens: {\n *       Chat: {\n *         path: 'chat/:author/:id',\n *         stringify: { author: author => author.toLowerCase() }\n *       }\n *     }\n *   }\n * )\n * ```\n *\n * @param state Navigation state to serialize.\n * @param options Extra options to fine-tune how to serialize the path.\n * @returns Path representing the state, e.g. /foo/bar?count=42.\n */\nexport default function getPathFromState<ParamList extends {}>(\n  state: State,\n  options?: Options<ParamList>\n): string {\n  if (state == null) {\n    throw Error(\n      \"Got 'undefined' for the navigation state. You must pass a valid state object.\"\n    );\n  }\n\n  if (options) {\n    validatePathConfig(options);\n  }\n\n  // Create a normalized configs object which will be easier to use\n  const configs: Record<string, ConfigItem> = options?.screens\n    ? createNormalizedConfigs(options?.screens)\n    : {};\n\n  let path = '/';\n  let current: State | undefined = state;\n\n  const allParams: Record<string, any> = {};\n\n  while (current) {\n    let index = typeof current.index === 'number' ? current.index : 0;\n    let route = current.routes[index] as Route<string> & {\n      state?: State;\n    };\n\n    let pattern: string | undefined;\n\n    let focusedParams: Record<string, any> | undefined;\n    let focusedRoute = getActiveRoute(state);\n    let currentOptions = configs;\n\n    // Keep all the route names that appeared during going deeper in config in case the pattern is resolved to undefined\n    let nestedRouteNames = [];\n\n    let hasNext = true;\n\n    while (route.name in currentOptions && hasNext) {\n      pattern = currentOptions[route.name].pattern;\n\n      nestedRouteNames.push(route.name);\n\n      if (route.params) {\n        const stringify = currentOptions[route.name]?.stringify;\n\n        const currentParams = fromEntries(\n          Object.entries(route.params).map(([key, value]) => [\n            key,\n            stringify?.[key] ? stringify[key](value) : String(value),\n          ])\n        );\n\n        if (pattern) {\n          Object.assign(allParams, currentParams);\n        }\n\n        if (focusedRoute === route) {\n          // If this is the focused route, keep the params for later use\n          // We save it here since it's been stringified already\n          focusedParams = { ...currentParams };\n\n          pattern\n            ?.split('/')\n            .filter((p) => p.startsWith(':'))\n            // eslint-disable-next-line no-loop-func\n            .forEach((p) => {\n              const name = getParamName(p);\n\n              // Remove the params present in the pattern since we'll only use the rest for query string\n              if (focusedParams) {\n                // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n                delete focusedParams[name];\n              }\n            });\n        }\n      }\n\n      // If there is no `screens` property or no nested state, we return pattern\n      if (!currentOptions[route.name].screens || route.state === undefined) {\n        hasNext = false;\n      } else {\n        index =\n          typeof route.state.index === 'number'\n            ? route.state.index\n            : route.state.routes.length - 1;\n\n        const nextRoute = route.state.routes[index];\n        const nestedConfig = currentOptions[route.name].screens;\n\n        // if there is config for next route name, we go deeper\n        if (nestedConfig && nextRoute.name in nestedConfig) {\n          route = nextRoute as Route<string> & { state?: State };\n          currentOptions = nestedConfig;\n        } else {\n          // If not, there is no sense in going deeper in config\n          hasNext = false;\n        }\n      }\n    }\n\n    if (pattern === undefined) {\n      pattern = nestedRouteNames.join('/');\n    }\n\n    if (currentOptions[route.name] !== undefined) {\n      path += pattern\n        .split('/')\n        .map((p) => {\n          const name = getParamName(p);\n\n          // We don't know what to show for wildcard patterns\n          // Showing the route name seems ok, though whatever we show here will be incorrect\n          // Since the page doesn't actually exist\n          if (p === '*') {\n            return route.name;\n          }\n\n          // If the path has a pattern for a param, put the param in the path\n          if (p.startsWith(':')) {\n            const value = allParams[name];\n\n            if (value === undefined && p.endsWith('?')) {\n              // Optional params without value assigned in route.params should be ignored\n              return '';\n            }\n\n            return encodeURIComponent(value);\n          }\n\n          return encodeURIComponent(p);\n        })\n        .join('/');\n    } else {\n      path += encodeURIComponent(route.name);\n    }\n\n    if (!focusedParams) {\n      focusedParams = focusedRoute.params;\n    }\n\n    if (route.state) {\n      path += '/';\n    } else if (focusedParams) {\n      for (let param in focusedParams) {\n        if (focusedParams[param] === 'undefined') {\n          // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n          delete focusedParams[param];\n        }\n      }\n\n      const query = queryString.stringify(focusedParams, { sort: false });\n\n      if (query) {\n        path += `?${query}`;\n      }\n    }\n\n    current = route.state;\n  }\n\n  // Remove multiple as well as trailing slashes\n  path = path.replace(/\\/+/g, '/');\n  path = path.length > 1 ? path.replace(/\\/$/, '') : path;\n\n  return path;\n}\n\nconst getParamName = (pattern: string) =>\n  pattern.replace(/^:/, '').replace(/\\?$/, '');\n\nconst joinPaths = (...paths: string[]): string =>\n  ([] as string[])\n    .concat(...paths.map((p) => p.split('/')))\n    .filter(Boolean)\n    .join('/');\n\nconst createConfigItem = (\n  config: PathConfig<object> | string,\n  parentPattern?: string\n): ConfigItem => {\n  if (typeof config === 'string') {\n    // If a string is specified as the value of the key(e.g. Foo: '/path'), use it as the pattern\n    const pattern = parentPattern ? joinPaths(parentPattern, config) : config;\n\n    return { pattern };\n  }\n\n  // If an object is specified as the value (e.g. Foo: { ... }),\n  // It can have `path` property and `screens` prop which has nested configs\n  let pattern: string | undefined;\n\n  if (config.exact && config.path === undefined) {\n    throw new Error(\n      \"A 'path' needs to be specified when specifying 'exact: true'. If you don't want this screen in the URL, specify it as empty string, e.g. `path: ''`.\"\n    );\n  }\n\n  pattern =\n    config.exact !== true\n      ? joinPaths(parentPattern || '', config.path || '')\n      : config.path || '';\n\n  const screens = config.screens\n    ? createNormalizedConfigs(config.screens, pattern)\n    : undefined;\n\n  return {\n    // Normalize pattern to remove any leading, trailing slashes, duplicate slashes etc.\n    pattern: pattern?.split('/').filter(Boolean).join('/'),\n    stringify: config.stringify,\n    screens,\n  };\n};\n\nconst createNormalizedConfigs = (\n  options: PathConfigMap<object>,\n  pattern?: string\n): Record<string, ConfigItem> =>\n  fromEntries(\n    Object.entries(options).map(([name, c]) => {\n      const result = createConfigItem(c, pattern);\n\n      return [name, result];\n    })\n  );\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}