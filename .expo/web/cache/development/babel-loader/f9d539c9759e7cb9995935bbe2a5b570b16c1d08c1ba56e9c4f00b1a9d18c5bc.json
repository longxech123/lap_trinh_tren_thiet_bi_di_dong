{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.canUseViewport = exports.canUseEventListeners = exports.isDOMAvailable = void 0;\nvar _window$document;\nvar isDOMAvailable = typeof window !== 'undefined' && !!((_window$document = window.document) != null && _window$document.createElement);\nexports.isDOMAvailable = isDOMAvailable;\nvar canUseEventListeners = isDOMAvailable && !!(window.addEventListener || window.attachEvent);\nexports.canUseEventListeners = canUseEventListeners;\nvar canUseViewport = isDOMAvailable && !!window.screen;\nexports.canUseViewport = canUseViewport;","map":{"version":3,"names":["isDOMAvailable","window","_window$document","document","createElement","exports","canUseEventListeners","addEventListener","attachEvent","canUseViewport","screen"],"sources":["C:\\Users\\DELL\\Downloads\\ltmobile\\ltmobile\\muvi-master\\node_modules\\@unimodules\\react-native-adapter\\src\\environment\\browser.web.ts"],"sourcesContent":["declare global {\n  // Add IE-specific interface to Window\n  interface Window {\n    attachEvent(event: string, listener: EventListener): boolean;\n  }\n}\n\n// Used for delegating node actions when browser APIs aren't available\n// like in SSR websites.\nexport const isDOMAvailable = typeof window !== 'undefined' && !!window.document?.createElement;\nexport const canUseEventListeners =\n  isDOMAvailable && !!(window.addEventListener || window.attachEvent);\nexport const canUseViewport = isDOMAvailable && !!window.screen;\n"],"mappings":";;;;;AASO,IAAMA,cAAc,GAAG,OAAOC,MAAM,KAAK,WAAW,IAAI,CAAC,GAAAC,gBAAA,GAACD,MAAM,CAACE,QAAQ,aAAfD,gBAAA,CAAiBE,aAAa;AAACC,OAAA,CAAAL,cAAA,GAAAA,cAAA;AACzF,IAAMM,oBAAoB,GAC/BN,cAAc,IAAI,CAAC,EAAEC,MAAM,CAACM,gBAAgB,IAAIN,MAAM,CAACO,WAAW,CAAC;AAACH,OAAA,CAAAC,oBAAA,GAAAA,oBAAA;AAC/D,IAAMG,cAAc,GAAGT,cAAc,IAAI,CAAC,CAACC,MAAM,CAACS,MAAM;AAACL,OAAA,CAAAI,cAAA,GAAAA,cAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}