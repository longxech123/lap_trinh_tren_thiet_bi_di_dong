{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = usePressEvents;\nvar _PressResponder = _interopRequireDefault(require(\"./PressResponder\"));\nvar _react = require(\"react\");\nfunction usePressEvents(hostRef, config) {\n  var pressResponderRef = (0, _react.useRef)(null);\n  if (pressResponderRef.current == null) {\n    pressResponderRef.current = new _PressResponder.default(config);\n  }\n  var pressResponder = pressResponderRef.current;\n  (0, _react.useEffect)(function () {\n    pressResponder.configure(config);\n  }, [config, pressResponder]);\n  (0, _react.useEffect)(function () {\n    return function () {\n      pressResponder.reset();\n    };\n  }, [pressResponder]);\n  (0, _react.useDebugValue)(config);\n  return pressResponder.getEventHandlers();\n}","map":{"version":3,"names":["usePressEvents","hostRef","config","pressResponderRef","useRef","current","PressResponder","pressResponder","useEffect","configure","reset","useDebugValue","getEventHandlers"],"sources":["D:/DH điện lực/kì 1 2022-2023/ltmobile/muvi-master/node_modules/react-native-web/dist/hooks/usePressEvents/index.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport PressResponder from './PressResponder';\nimport { useDebugValue, useEffect, useRef } from 'react';\nexport default function usePressEvents(hostRef, config) {\n  var pressResponderRef = useRef(null);\n\n  if (pressResponderRef.current == null) {\n    pressResponderRef.current = new PressResponder(config);\n  }\n\n  var pressResponder = pressResponderRef.current; // Re-configure to use the current node and configuration.\n\n  useEffect(function () {\n    pressResponder.configure(config);\n  }, [config, pressResponder]); // Reset the `pressResponder` when cleanup needs to occur. This is\n  // a separate effect because we do not want to rest the responder when `config` changes.\n\n  useEffect(function () {\n    return function () {\n      pressResponder.reset();\n    };\n  }, [pressResponder]);\n  useDebugValue(config);\n  return pressResponder.getEventHandlers();\n}"],"mappings":"AASA,YAAY;;AAAC;AAAA;EAAA;AAAA;AAAA;AAEb;AACA;AACe,SAASA,cAAc,CAACC,OAAO,EAAEC,MAAM,EAAE;EACtD,IAAIC,iBAAiB,GAAG,IAAAC,aAAM,EAAC,IAAI,CAAC;EAEpC,IAAID,iBAAiB,CAACE,OAAO,IAAI,IAAI,EAAE;IACrCF,iBAAiB,CAACE,OAAO,GAAG,IAAIC,uBAAc,CAACJ,MAAM,CAAC;EACxD;EAEA,IAAIK,cAAc,GAAGJ,iBAAiB,CAACE,OAAO;EAE9C,IAAAG,gBAAS,EAAC,YAAY;IACpBD,cAAc,CAACE,SAAS,CAACP,MAAM,CAAC;EAClC,CAAC,EAAE,CAACA,MAAM,EAAEK,cAAc,CAAC,CAAC;EAG5B,IAAAC,gBAAS,EAAC,YAAY;IACpB,OAAO,YAAY;MACjBD,cAAc,CAACG,KAAK,EAAE;IACxB,CAAC;EACH,CAAC,EAAE,CAACH,cAAc,CAAC,CAAC;EACpB,IAAAI,oBAAa,EAACT,MAAM,CAAC;EACrB,OAAOK,cAAc,CAACK,gBAAgB,EAAE;AAC1C"},"metadata":{},"sourceType":"script"}