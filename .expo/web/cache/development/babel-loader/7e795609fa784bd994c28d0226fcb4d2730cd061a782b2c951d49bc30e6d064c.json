{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = DrawerRouter;\nexports.DrawerActions = void 0;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _nonSecure = require(\"nanoid/non-secure\");\nvar _TabRouter = _interopRequireWildcard(require(\"./TabRouter\"));\nvar _excluded = [\"defaultStatus\"];\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) { if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } } return n.default = e, t && t.set(e, n), n; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nvar DrawerActions = _objectSpread(_objectSpread({}, _TabRouter.TabActions), {}, {\n  openDrawer: function openDrawer() {\n    return {\n      type: 'OPEN_DRAWER'\n    };\n  },\n  closeDrawer: function closeDrawer() {\n    return {\n      type: 'CLOSE_DRAWER'\n    };\n  },\n  toggleDrawer: function toggleDrawer() {\n    return {\n      type: 'TOGGLE_DRAWER'\n    };\n  }\n});\nexports.DrawerActions = DrawerActions;\nvar isDrawerOpen = function isDrawerOpen(state) {\n  var _state$history;\n  return Boolean((_state$history = state.history) === null || _state$history === void 0 ? void 0 : _state$history.some(function (it) {\n    return it.type === 'drawer';\n  }));\n};\nvar openDrawer = function openDrawer(state) {\n  if (isDrawerOpen(state)) {\n    return state;\n  }\n  return _objectSpread(_objectSpread({}, state), {}, {\n    history: [].concat((0, _toConsumableArray2.default)(state.history), [{\n      type: 'drawer',\n      status: 'open'\n    }])\n  });\n};\nvar closeDrawer = function closeDrawer(state) {\n  if (!isDrawerOpen(state)) {\n    return state;\n  }\n  return _objectSpread(_objectSpread({}, state), {}, {\n    history: state.history.filter(function (it) {\n      return it.type !== 'drawer';\n    })\n  });\n};\nfunction DrawerRouter(_ref) {\n  var defaultStatus = _ref.defaultStatus,\n    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var router = (0, _TabRouter.default)(rest);\n  return _objectSpread(_objectSpread({}, router), {}, {\n    type: 'drawer',\n    getInitialState: function getInitialState(_ref2) {\n      var routeNames = _ref2.routeNames,\n        routeParamList = _ref2.routeParamList,\n        routeGetIdList = _ref2.routeGetIdList;\n      var state = router.getInitialState({\n        routeNames: routeNames,\n        routeParamList: routeParamList,\n        routeGetIdList: routeGetIdList\n      });\n      if (defaultStatus === 'open') {\n        state = openDrawer(state);\n      }\n      return _objectSpread(_objectSpread({}, state), {}, {\n        stale: false,\n        type: 'drawer',\n        key: \"drawer-\" + (0, _nonSecure.nanoid)()\n      });\n    },\n    getRehydratedState: function getRehydratedState(partialState, _ref3) {\n      var routeNames = _ref3.routeNames,\n        routeParamList = _ref3.routeParamList,\n        routeGetIdList = _ref3.routeGetIdList;\n      if (partialState.stale === false) {\n        return partialState;\n      }\n      var state = router.getRehydratedState(partialState, {\n        routeNames: routeNames,\n        routeParamList: routeParamList,\n        routeGetIdList: routeGetIdList\n      });\n      if (isDrawerOpen(partialState)) {\n        state = openDrawer(state);\n      }\n      return _objectSpread(_objectSpread({}, state), {}, {\n        type: 'drawer',\n        key: \"drawer-\" + (0, _nonSecure.nanoid)()\n      });\n    },\n    getStateForRouteFocus: function getStateForRouteFocus(state, key) {\n      var result = router.getStateForRouteFocus(state, key);\n      if (defaultStatus === 'open') {\n        return openDrawer(result);\n      }\n      return closeDrawer(result);\n    },\n    getStateForAction: function getStateForAction(state, action, options) {\n      switch (action.type) {\n        case 'OPEN_DRAWER':\n          return openDrawer(state);\n        case 'CLOSE_DRAWER':\n          return closeDrawer(state);\n        case 'TOGGLE_DRAWER':\n          if (isDrawerOpen(state)) {\n            return closeDrawer(state);\n          }\n          return openDrawer(state);\n        case 'GO_BACK':\n          if (defaultStatus === 'open') {\n            if (!isDrawerOpen(state)) {\n              return openDrawer(state);\n            }\n          } else {\n            if (isDrawerOpen(state)) {\n              return closeDrawer(state);\n            }\n          }\n          return router.getStateForAction(state, action, options);\n        default:\n          return router.getStateForAction(state, action, options);\n      }\n    },\n    actionCreators: DrawerActions\n  });\n}","map":{"version":3,"names":["_nonSecure","require","_TabRouter","_interopRequireWildcard","_excluded","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","ownKeys","keys","getOwnPropertySymbols","o","filter","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty2","getOwnPropertyDescriptors","defineProperties","DrawerActions","TabActions","openDrawer","type","closeDrawer","toggleDrawer","exports","isDrawerOpen","state","_state$history","Boolean","history","some","it","concat","_toConsumableArray2","status","DrawerRouter","_ref","defaultStatus","rest","_objectWithoutProperties2","router","TabRouter","getInitialState","_ref2","routeNames","routeParamList","routeGetIdList","stale","key","nanoid","getRehydratedState","partialState","_ref3","getStateForRouteFocus","result","getStateForAction","action","options","actionCreators"],"sources":["C:\\Users\\DELL\\Downloads\\ltmobile\\ltmobile\\muvi-master\\node_modules\\@react-navigation\\routers\\lib\\module\\DrawerRouter.tsx"],"sourcesContent":["import { nanoid } from 'nanoid/non-secure';\n\nimport TabRouter, {\n  TabActionHelpers,\n  TabActions,\n  TabActionType,\n  TabNavigationState,\n  TabRouterOptions,\n} from './TabRouter';\nimport type {\n  CommonNavigationAction,\n  ParamListBase,\n  PartialState,\n  Router,\n} from './types';\n\nexport type DrawerActionType =\n  | TabActionType\n  | {\n      type: 'OPEN_DRAWER' | 'CLOSE_DRAWER' | 'TOGGLE_DRAWER';\n      source?: string;\n      target?: string;\n    };\n\nexport type DrawerRouterOptions = TabRouterOptions & {\n  defaultStatus?: 'open' | 'closed';\n};\n\nexport type DrawerNavigationState<ParamList extends ParamListBase> = Omit<\n  TabNavigationState<ParamList>,\n  'type' | 'history'\n> & {\n  /**\n   * Type of the router, in this case, it's drawer.\n   */\n  type: 'drawer';\n  /**\n   * List of previously visited route keys and drawer open status.\n   */\n  history: (\n    | { type: 'route'; key: string }\n    | { type: 'drawer'; status: 'open' }\n  )[];\n};\n\nexport type DrawerActionHelpers<ParamList extends ParamListBase> =\n  TabActionHelpers<ParamList> & {\n    /**\n     * Open the drawer sidebar.\n     */\n    openDrawer(): void;\n\n    /**\n     * Close the drawer sidebar.\n     */\n    closeDrawer(): void;\n\n    /**\n     * Open the drawer sidebar if closed, or close if opened.\n     */\n    toggleDrawer(): void;\n  };\n\nexport const DrawerActions = {\n  ...TabActions,\n  openDrawer(): DrawerActionType {\n    return { type: 'OPEN_DRAWER' };\n  },\n  closeDrawer(): DrawerActionType {\n    return { type: 'CLOSE_DRAWER' };\n  },\n  toggleDrawer(): DrawerActionType {\n    return { type: 'TOGGLE_DRAWER' };\n  },\n};\n\nconst isDrawerOpen = (\n  state:\n    | DrawerNavigationState<ParamListBase>\n    | PartialState<DrawerNavigationState<ParamListBase>>\n) => Boolean(state.history?.some((it) => it.type === 'drawer'));\n\nconst openDrawer = (\n  state: DrawerNavigationState<ParamListBase>\n): DrawerNavigationState<ParamListBase> => {\n  if (isDrawerOpen(state)) {\n    return state;\n  }\n\n  return {\n    ...state,\n    history: [...state.history, { type: 'drawer', status: 'open' }],\n  };\n};\n\nconst closeDrawer = (\n  state: DrawerNavigationState<ParamListBase>\n): DrawerNavigationState<ParamListBase> => {\n  if (!isDrawerOpen(state)) {\n    return state;\n  }\n\n  return {\n    ...state,\n    history: state.history.filter((it) => it.type !== 'drawer'),\n  };\n};\n\nexport default function DrawerRouter({\n  defaultStatus,\n  ...rest\n}: DrawerRouterOptions): Router<\n  DrawerNavigationState<ParamListBase>,\n  DrawerActionType | CommonNavigationAction\n> {\n  const router = TabRouter(rest) as unknown as Router<\n    DrawerNavigationState<ParamListBase>,\n    TabActionType | CommonNavigationAction\n  >;\n\n  return {\n    ...router,\n\n    type: 'drawer',\n\n    getInitialState({ routeNames, routeParamList, routeGetIdList }) {\n      let state = router.getInitialState({\n        routeNames,\n        routeParamList,\n        routeGetIdList,\n      });\n\n      if (defaultStatus === 'open') {\n        state = openDrawer(state);\n      }\n\n      return {\n        ...state,\n        stale: false,\n        type: 'drawer',\n        key: `drawer-${nanoid()}`,\n      };\n    },\n\n    getRehydratedState(\n      partialState,\n      { routeNames, routeParamList, routeGetIdList }\n    ) {\n      if (partialState.stale === false) {\n        return partialState;\n      }\n\n      let state = router.getRehydratedState(partialState, {\n        routeNames,\n        routeParamList,\n        routeGetIdList,\n      });\n\n      if (isDrawerOpen(partialState)) {\n        state = openDrawer(state);\n      }\n\n      return {\n        ...state,\n        type: 'drawer',\n        key: `drawer-${nanoid()}`,\n      };\n    },\n\n    getStateForRouteFocus(state, key) {\n      const result = router.getStateForRouteFocus(state, key);\n\n      if (defaultStatus === 'open') {\n        return openDrawer(result);\n      }\n\n      return closeDrawer(result);\n    },\n\n    getStateForAction(state, action, options) {\n      switch (action.type) {\n        case 'OPEN_DRAWER':\n          return openDrawer(state);\n\n        case 'CLOSE_DRAWER':\n          return closeDrawer(state);\n\n        case 'TOGGLE_DRAWER':\n          if (isDrawerOpen(state)) {\n            return closeDrawer(state);\n          }\n\n          return openDrawer(state);\n\n        case 'GO_BACK':\n          if (defaultStatus === 'open') {\n            if (!isDrawerOpen(state)) {\n              return openDrawer(state);\n            }\n          } else {\n            if (isDrawerOpen(state)) {\n              return closeDrawer(state);\n            }\n          }\n\n          return router.getStateForAction(state, action, options);\n\n        default:\n          return router.getStateForAction(state, action, options);\n      }\n    },\n\n    actionCreators: DrawerActions,\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}