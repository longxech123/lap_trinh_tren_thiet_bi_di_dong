{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _GestureHandler2 = _interopRequireDefault(require(\"./GestureHandler\"));\nvar _reactNative = require(\"react-native\");\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar DraggingGestureHandler = function (_GestureHandler) {\n  (0, _inherits2.default)(DraggingGestureHandler, _GestureHandler);\n  var _super = _createSuper(DraggingGestureHandler);\n  function DraggingGestureHandler() {\n    (0, _classCallCheck2.default)(this, DraggingGestureHandler);\n    return _super.apply(this, arguments);\n  }\n  (0, _createClass2.default)(DraggingGestureHandler, [{\n    key: \"shouldEnableGestureOnSetup\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"transformNativeEvent\",\n    value: function transformNativeEvent(_ref) {\n      var deltaX = _ref.deltaX,\n        deltaY = _ref.deltaY,\n        velocityX = _ref.velocityX,\n        velocityY = _ref.velocityY,\n        _ref$center = _ref.center,\n        x = _ref$center.x,\n        y = _ref$center.y;\n      var rect = this.view.getBoundingClientRect();\n      var ratio = _reactNative.PixelRatio.get();\n      return {\n        translationX: deltaX - (this.__initialX || 0),\n        translationY: deltaY - (this.__initialY || 0),\n        absoluteX: x,\n        absoluteY: y,\n        velocityX: velocityX * ratio,\n        velocityY: velocityY * ratio,\n        x: x - rect.left,\n        y: y - rect.top\n      };\n    }\n  }]);\n  return DraggingGestureHandler;\n}(_GestureHandler2.default);\nvar _default = DraggingGestureHandler;\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;;;;AAEA;AACA;AAAA;AAAA;AAAA,IAEeA,sBAAf;EAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA,KACgC,eAAG;MAC/B,OAAO,IAAP;IACD;EAAA;IAAA;IAAA,OAEDC,oCAMmB;MAAA,IALjBC,MADmB,QACnBA,MADmB;QAEnBC,MAFmB,QAEnBA,MAFmB;QAGnBC,SAHmB,QAGnBA,SAHmB;QAInBC,SAJmB,QAInBA,SAJmB;QAAA,mBAKnBC,MAAM;QAAIC,CAAF,eAAEA,CAAF;QAAKC;MAGb,IAAMC,IAAI,GAAG,KAAKC,IAAL,CAAWC,qBAAX,EAAb;MACA,IAAMC,KAAK,GAAGC,uBAAU,CAACC,GAAX,EAAd;MACA,OAAO;QACLC,YAAY,EAAEb,MAAM,IAAI,KAAKc,UAAL,IAAmB,CAAvB,CADf;QAELC,YAAY,EAAEd,MAAM,IAAI,KAAKe,UAAL,IAAmB,CAAvB,CAFf;QAGLC,SAAS,EAAEZ,CAHN;QAILa,SAAS,EAAEZ,CAJN;QAKLJ,SAAS,EAAEA,SAAS,GAAGQ,KALlB;QAMLP,SAAS,EAAEA,SAAS,GAAGO,KANlB;QAOLL,CAAC,EAAEA,CAAC,GAAGE,IAAI,CAACY,IAPP;QAQLb,CAAC,EAAEA,CAAC,GAAGC,IAAI,CAACa;MARP,CAAP;IAUD;EAAA;EAAA;AAAA,EAzB2CC,wBAA9C;AAAA,eA4BevB,sBAAf;AAAA","names":["DraggingGestureHandler","transformNativeEvent","deltaX","deltaY","velocityX","velocityY","center","x","y","rect","view","getBoundingClientRect","ratio","PixelRatio","get","translationX","__initialX","translationY","__initialY","absoluteX","absoluteY","left","top","GestureHandler"],"sources":["DraggingGestureHandler.ts"],"sourcesContent":["/* eslint-disable eslint-comments/no-unlimited-disable */\n/* eslint-disable */\nimport GestureHandler, { HammerInputExt } from './GestureHandler';\nimport { PixelRatio } from 'react-native';\n\nabstract class DraggingGestureHandler extends GestureHandler {\n  get shouldEnableGestureOnSetup() {\n    return true;\n  }\n\n  transformNativeEvent({\n    deltaX,\n    deltaY,\n    velocityX,\n    velocityY,\n    center: { x, y },\n  }: HammerInputExt) {\n    // @ts-ignore FIXME(TS)\n    const rect = this.view!.getBoundingClientRect();\n    const ratio = PixelRatio.get();\n    return {\n      translationX: deltaX - (this.__initialX || 0),\n      translationY: deltaY - (this.__initialY || 0),\n      absoluteX: x,\n      absoluteY: y,\n      velocityX: velocityX * ratio,\n      velocityY: velocityY * ratio,\n      x: x - rect.left,\n      y: y - rect.top,\n    };\n  }\n}\n\nexport default DraggingGestureHandler;\n"]},"metadata":{},"sourceType":"script"}