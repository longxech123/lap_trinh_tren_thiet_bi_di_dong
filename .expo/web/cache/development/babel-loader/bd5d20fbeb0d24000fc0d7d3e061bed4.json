{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useComponent;\nvar React = _interopRequireWildcard(require(\"react\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction useComponent(Component, props) {\n  var propsRef = React.useRef(props);\n  propsRef.current = props;\n  React.useEffect(function () {\n    propsRef.current = null;\n  });\n  return React.useRef(function (rest) {\n    var props = propsRef.current;\n    if (props === null) {\n      throw new Error('The returned component must be rendered in the same render phase as the hook.');\n    }\n    return React.createElement(Component, _extends({}, props, rest));\n  }).current;\n}","map":{"version":3,"mappings":";;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;AAEe,SAASA,YAAT,CAGbC,SAHa,EAGCC,KAHD,EAGW;EACxB,IAAMC,QAAQ,GAAGC,KAAK,CAACC,MAAN,CAAuBH,KAAvB,CAAjB;EAKAC,QAAQ,CAACG,OAAT,GAAmBJ,KAAnB;EAEAE,KAAK,CAACG,SAAN,CAAgB,YAAM;IACpBJ,QAAQ,CAACG,OAAT,GAAmB,IAAnB;EACD,CAFD;EAIA,OAAOF,KAAK,CAACC,MAAN,CAAcG,cAAD,EAAkD;IACpE,IAAMN,KAAK,GAAGC,QAAQ,CAACG,OAAvB;IAEA,IAAIJ,KAAK,KAAK,IAAd,EAAoB;MAClB,MAAM,IAAIO,KAAJ,CACJ,+EADI,CAAN;IAGD;IAGD,OAAOL,oBAACH,SAAD,eAAeC,KAAf,EAA0BM,IAA1B,EAAP;EACD,CAXM,EAWJF,OAXH;AAYD","names":["useComponent","Component","props","propsRef","React","useRef","current","useEffect","rest","Error"],"sources":["useComponent.tsx"],"sourcesContent":["import * as React from 'react';\n\nexport default function useComponent<\n  T extends React.ComponentType<any>,\n  P extends {}\n>(Component: T, props: P) {\n  const propsRef = React.useRef<P | null>(props);\n\n  // Normally refs shouldn't be mutated in render\n  // But we return a component which will be rendered\n  // So it's just for immediate consumption\n  propsRef.current = props;\n\n  React.useEffect(() => {\n    propsRef.current = null;\n  });\n\n  return React.useRef((rest: Omit<React.ComponentProps<T>, keyof P>) => {\n    const props = propsRef.current;\n\n    if (props === null) {\n      throw new Error(\n        'The returned component must be rendered in the same render phase as the hook.'\n      );\n    }\n\n    // @ts-expect-error: the props should be fine here\n    return <Component {...props} {...rest} />;\n  }).current;\n}\n"]},"metadata":{},"sourceType":"script"}