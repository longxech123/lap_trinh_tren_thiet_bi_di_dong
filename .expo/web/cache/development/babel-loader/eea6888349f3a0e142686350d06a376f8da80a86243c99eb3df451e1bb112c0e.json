{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isNonScrolling = isNonScrolling;\nexports.presets = exports.offsets = void 0;\nvar offsets = {\n  none: 0\n};\nexports.offsets = offsets;\nvar presets = {\n  fixed: {\n    outer: {\n      flex: 1,\n      height: '100%'\n    },\n    inner: {\n      justifyContent: 'flex-start',\n      alignItems: 'stretch',\n      height: '100%',\n      width: '100%'\n    }\n  },\n  scroll: {\n    outer: {\n      flex: 1,\n      height: '100%'\n    },\n    inner: {\n      justifyContent: 'flex-start',\n      alignItems: 'stretch'\n    }\n  }\n};\nexports.presets = presets;\nfunction isNonScrolling(preset) {\n  return !preset || !presets[preset] || preset === 'fixed';\n}","map":{"version":3,"names":["offsets","none","exports","presets","fixed","outer","flex","height","inner","justifyContent","alignItems","width","scroll","isNonScrolling","preset"],"sources":["C:/Users/DELL/Downloads/ltmobile/ltmobile/muvi-master/src/components/screen/screen.presets.ts"],"sourcesContent":["import { ViewStyle } from 'react-native';\n\n/**\n * All screen keyboard offsets.\n */\nexport const offsets = {\n  none: 0,\n};\n\n/**\n * The variations of keyboard offsets.\n */\nexport type KeyboardOffsets = keyof typeof offsets;\n\n/**\n * All the variations of screens.\n */\nexport const presets = {\n  /**\n   * No scrolling. Suitable for full-screen carousels and components\n   * which have built-in scrolling like FlatList.\n   */\n  fixed: {\n    outer: {\n      flex: 1,\n      height: '100%',\n    } as ViewStyle,\n    inner: {\n      justifyContent: 'flex-start',\n      alignItems: 'stretch',\n      height: '100%',\n      width: '100%',\n    } as ViewStyle,\n  },\n\n  /**\n   * Scrolls. Suitable for forms or other things requiring a keyboard.\n   *\n   * Pick this one if you don't know which one you want yet.\n   */\n  scroll: {\n    outer: {\n      flex: 1,\n      height: '100%',\n    } as ViewStyle,\n    inner: {justifyContent: 'flex-start', alignItems: 'stretch'} as ViewStyle,\n  },\n};\n\n/**\n * The variations of screens.\n */\nexport type ScreenPresets = keyof typeof presets;\n\n/**\n * Is this preset a non-scrolling one?\n *\n * @param preset The preset to check\n */\nexport function isNonScrolling(preset?: ScreenPresets) {\n  // any of these things will make you scroll\n  return !preset || !presets[preset] || preset === 'fixed';\n}\n"],"mappings":";;;;;AAKO,IAAMA,OAAO,GAAG;EACrBC,IAAI,EAAE;AACR,CAAC;AAACC,OAAA,CAAAF,OAAA,GAAAA,OAAA;AAUK,IAAMG,OAAO,GAAG;EAKrBC,KAAK,EAAE;IACLC,KAAK,EAAE;MACLC,IAAI,EAAE,CAAC;MACPC,MAAM,EAAE;IACV,CAAc;IACdC,KAAK,EAAE;MACLC,cAAc,EAAE,YAAY;MAC5BC,UAAU,EAAE,SAAS;MACrBH,MAAM,EAAE,MAAM;MACdI,KAAK,EAAE;IACT;EACF,CAAC;EAODC,MAAM,EAAE;IACNP,KAAK,EAAE;MACLC,IAAI,EAAE,CAAC;MACPC,MAAM,EAAE;IACV,CAAc;IACdC,KAAK,EAAE;MAACC,cAAc,EAAE,YAAY;MAAEC,UAAU,EAAE;IAAS;EAC7D;AACF,CAAC;AAACR,OAAA,CAAAC,OAAA,GAAAA,OAAA;AAYK,SAASU,cAAcA,CAACC,MAAsB,EAAE;EAErD,OAAO,CAACA,MAAM,IAAI,CAACX,OAAO,CAACW,MAAM,CAAC,IAAIA,MAAM,KAAK,OAAO;AAC1D"},"metadata":{},"sourceType":"script","externalDependencies":[]}