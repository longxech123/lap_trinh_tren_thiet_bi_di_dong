{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _hammerjs = _interopRequireDefault(require(\"@egjs/hammerjs\"));\nvar _constants = require(\"./constants\");\nvar _IndiscreteGestureHandler = _interopRequireDefault(require(\"./IndiscreteGestureHandler\"));\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar RotationGestureHandler = function (_IndiscreteGestureHan) {\n  (0, _inherits2.default)(RotationGestureHandler, _IndiscreteGestureHan);\n  var _super = _createSuper(RotationGestureHandler);\n  function RotationGestureHandler() {\n    (0, _classCallCheck2.default)(this, RotationGestureHandler);\n    return _super.apply(this, arguments);\n  }\n  (0, _createClass2.default)(RotationGestureHandler, [{\n    key: \"name\",\n    get: function get() {\n      return 'rotate';\n    }\n  }, {\n    key: \"NativeGestureClass\",\n    get: function get() {\n      return _hammerjs.default.Rotate;\n    }\n  }, {\n    key: \"transformNativeEvent\",\n    value: function transformNativeEvent(_ref) {\n      var rotation = _ref.rotation,\n        velocity = _ref.velocity,\n        center = _ref.center;\n      var _this$initialRotation;\n      return {\n        rotation: (rotation - ((_this$initialRotation = this.initialRotation) !== null && _this$initialRotation !== void 0 ? _this$initialRotation : 0)) * _constants.DEG_RAD,\n        anchorX: center.x,\n        anchorY: center.y,\n        velocity: velocity\n      };\n    }\n  }]);\n  return RotationGestureHandler;\n}(_IndiscreteGestureHandler.default);\nvar _default = RotationGestureHandler;\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;;;;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA,IAEMA,sBAAN;EAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA,KACU,eAAG;MACT,OAAO,QAAP;IACD;EAAA;IAAA;IAAA,KAEqB,eAAG;MACvB,OAAOC,iBAAM,CAACC,MAAd;IACD;EAAA;IAAA;IAAA,OAEDC,oCAAqE;MAAA,IAA9CC,QAAF,QAAEA,QAAF;QAAYC,QAAZ,QAAYA,QAAZ;QAAsBC;MAA0B;MACnE,OAAO;QACLF,QAAQ,EAAE,CAACA,QAAQ,6BAAI,KAAKG,eAAT,yEAA4B,CAA5B,CAAT,IAA2CC,kBADhD;QAELC,OAAO,EAAEH,MAAM,CAACI,CAFX;QAGLC,OAAO,EAAEL,MAAM,CAACM,CAHX;QAILP;MAJK,CAAP;IAMD;EAAA;EAAA;AAAA,EAhBkCQ,iCAArC;AAAA,eAkBeb,sBAAf;AAAA","names":["RotationGestureHandler","Hammer","Rotate","transformNativeEvent","rotation","velocity","center","initialRotation","DEG_RAD","anchorX","x","anchorY","y","IndiscreteGestureHandler"],"sources":["RotationGestureHandler.ts"],"sourcesContent":["import Hammer from '@egjs/hammerjs';\n\nimport { DEG_RAD } from './constants';\nimport { HammerInputExt } from './GestureHandler';\nimport IndiscreteGestureHandler from './IndiscreteGestureHandler';\n\nclass RotationGestureHandler extends IndiscreteGestureHandler {\n  get name() {\n    return 'rotate';\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Rotate;\n  }\n\n  transformNativeEvent({ rotation, velocity, center }: HammerInputExt) {\n    return {\n      rotation: (rotation - (this.initialRotation ?? 0)) * DEG_RAD,\n      anchorX: center.x,\n      anchorY: center.y,\n      velocity,\n    };\n  }\n}\nexport default RotationGestureHandler;\n"]},"metadata":{},"sourceType":"script"}