{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useCardAnimation;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _CardAnimationContext = _interopRequireDefault(require(\"./CardAnimationContext\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction useCardAnimation() {\n  var animation = React.useContext(_CardAnimationContext.default);\n  if (animation === undefined) {\n    throw new Error(\"Couldn't find values for card animation. Are you inside a screen in Stack?\");\n  }\n  return animation;\n}","map":{"version":3,"mappings":";;;;;AAAA;AAEA;AAAA;AAAA;AAEe,SAASA,gBAAT,GAA4B;EACzC,IAAMC,SAAS,GAAGC,KAAK,CAACC,UAAN,CAAiBC,6BAAjB,CAAlB;EAEA,IAAIH,SAAS,KAAKI,SAAlB,EAA6B;IAC3B,MAAM,IAAIC,KAAJ,CACJ,4EADI,CAAN;EAGD;EAED,OAAOL,SAAP;AACD","names":["useCardAnimation","animation","React","useContext","CardAnimationContext","undefined","Error"],"sources":["useCardAnimation.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport CardAnimationContext from './CardAnimationContext';\n\nexport default function useCardAnimation() {\n  const animation = React.useContext(CardAnimationContext);\n\n  if (animation === undefined) {\n    throw new Error(\n      \"Couldn't find values for card animation. Are you inside a screen in Stack?\"\n    );\n  }\n\n  return animation;\n}\n"]},"metadata":{},"sourceType":"script"}