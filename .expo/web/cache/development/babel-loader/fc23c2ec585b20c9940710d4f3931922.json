{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useCachedResources;\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _vectorIcons = require(\"@expo/vector-icons\");\nvar Font = _interopRequireWildcard(require(\"expo-font\"));\nvar SplashScreen = _interopRequireWildcard(require(\"expo-splash-screen\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useCachedResources() {\n  var _React$useState = React.useState(false),\n    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n    isLoadingComplete = _React$useState2[0],\n    setLoadingComplete = _React$useState2[1];\n  React.useEffect(function () {\n    function loadResourcesAndDataAsync() {\n      return _regenerator.default.async(function loadResourcesAndDataAsync$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              SplashScreen.preventAutoHideAsync();\n              _context.next = 4;\n              return _regenerator.default.awrap(Font.loadAsync(_objectSpread(_objectSpread({}, _vectorIcons.FontAwesome.font), {}, {\n                'Nunito-Light': require(\"../../assets/fonts/Nunito-Light.ttf\"),\n                'Nunito-LightItalic': require(\"../../assets/fonts/Nunito-LightItalic.ttf\"),\n                'Nunito-Regular': require(\"../../assets/fonts/Nunito-Regular.ttf\"),\n                'Nunito-Italic': require(\"../../assets/fonts/Nunito-Italic.ttf\"),\n                'Nunito-SemiBold': require(\"../../assets/fonts/Nunito-SemiBold.ttf\"),\n                'Nunito-SemiBoldItalic': require(\"../../assets/fonts/Nunito-SemiBoldItalic.ttf\"),\n                'Nunito-Bold': require(\"../../assets/fonts/Nunito-Bold.ttf\"),\n                'Nunito-BoldItalic': require(\"../../assets/fonts/Nunito-BoldItalic.ttf\")\n              })));\n            case 4:\n              _context.next = 9;\n              break;\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              console.warn(_context.t0);\n            case 9:\n              _context.prev = 9;\n              setLoadingComplete(true);\n              SplashScreen.hideAsync();\n              return _context.finish(9);\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 6, 9, 13]], Promise);\n    }\n    loadResourcesAndDataAsync();\n  }, []);\n  return isLoadingComplete;\n}","map":{"version":3,"names":["useCachedResources","React","useState","isLoadingComplete","setLoadingComplete","useEffect","loadResourcesAndDataAsync","SplashScreen","preventAutoHideAsync","Font","loadAsync","FontAwesome","font","require","console","warn","hideAsync"],"sources":["D:/EPU/kÃ¬ 1 2022-2023/ltmobile/muvi-master/src/hooks/useCachedResources.ts"],"sourcesContent":["import {FontAwesome} from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...FontAwesome.font,\n          'Nunito-Light': require('../../assets/fonts/Nunito-Light.ttf'),\n          'Nunito-LightItalic': require('../../assets/fonts/Nunito-LightItalic.ttf'),\n          'Nunito-Regular': require('../../assets/fonts/Nunito-Regular.ttf'),\n          'Nunito-Italic': require('../../assets/fonts/Nunito-Italic.ttf'),\n          'Nunito-SemiBold': require('../../assets/fonts/Nunito-SemiBold.ttf'),\n          'Nunito-SemiBoldItalic': require('../../assets/fonts/Nunito-SemiBoldItalic.ttf'),\n          'Nunito-Bold': require('../../assets/fonts/Nunito-Bold.ttf'),\n          'Nunito-BoldItalic': require('../../assets/fonts/Nunito-BoldItalic.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete;\n}\n"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AAA+B;AAAA;AAAA;AAAA;AAEhB,SAASA,kBAAkB,GAAG;EAC3C,sBAAgDC,KAAK,CAACC,QAAQ,CAAC,KAAK,CAAC;IAAA;IAA9DC,iBAAiB;IAAEC,kBAAkB;EAG5CH,KAAK,CAACI,SAAS,CAAC,YAAM;IACpB,SAAeC,yBAAyB;MAAA;QAAA;UAAA;YAAA;cAAA;cAEpCC,YAAY,CAACC,oBAAoB,EAAE;cAAC;cAAA,kCAG9BC,IAAI,CAACC,SAAS,iCACfC,wBAAW,CAACC,IAAI;gBACnB,cAAc,EAAEC,OAAO,uCAAuC;gBAC9D,oBAAoB,EAAEA,OAAO,6CAA6C;gBAC1E,gBAAgB,EAAEA,OAAO,yCAAyC;gBAClE,eAAe,EAAEA,OAAO,wCAAwC;gBAChE,iBAAiB,EAAEA,OAAO,0CAA0C;gBACpE,uBAAuB,EAAEA,OAAO,gDAAgD;gBAChF,aAAa,EAAEA,OAAO,sCAAsC;gBAC5D,mBAAmB,EAAEA,OAAO;cAA4C,GACxE;YAAA;cAAA;cAAA;YAAA;cAAA;cAAA;cAGFC,OAAO,CAACC,IAAI,aAAG;YAAC;cAAA;cAEhBX,kBAAkB,CAAC,IAAI,CAAC;cACxBG,YAAY,CAACS,SAAS,EAAE;cAAC;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;IAI7BV,yBAAyB,EAAE;EAC7B,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOH,iBAAiB;AAC1B"},"metadata":{},"sourceType":"script"}