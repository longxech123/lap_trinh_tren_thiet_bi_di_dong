{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = TabRouter;\nexports.TabActions = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _nonSecure = require(\"nanoid/non-secure\");\nvar _BaseRouter = _interopRequireDefault(require(\"./BaseRouter\"));\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nvar TYPE_ROUTE = 'route';\nvar TabActions = {\n  jumpTo: function jumpTo(name, params) {\n    return {\n      type: 'JUMP_TO',\n      payload: {\n        name: name,\n        params: params\n      }\n    };\n  }\n};\nexports.TabActions = TabActions;\nvar getRouteHistory = function getRouteHistory(routes, index, backBehavior, initialRouteName) {\n  var history = [{\n    type: TYPE_ROUTE,\n    key: routes[index].key\n  }];\n  var initialRouteIndex;\n  switch (backBehavior) {\n    case 'order':\n      for (var i = index; i > 0; i--) {\n        history.unshift({\n          type: TYPE_ROUTE,\n          key: routes[i - 1].key\n        });\n      }\n      break;\n    case 'firstRoute':\n      if (index !== 0) {\n        history.unshift({\n          type: TYPE_ROUTE,\n          key: routes[0].key\n        });\n      }\n      break;\n    case 'initialRoute':\n      initialRouteIndex = routes.findIndex(function (route) {\n        return route.name === initialRouteName;\n      });\n      initialRouteIndex = initialRouteIndex === -1 ? 0 : initialRouteIndex;\n      if (index !== initialRouteIndex) {\n        history.unshift({\n          type: TYPE_ROUTE,\n          key: routes[initialRouteIndex].key\n        });\n      }\n      break;\n    case 'history':\n      break;\n  }\n  return history;\n};\nvar changeIndex = function changeIndex(state, index, backBehavior, initialRouteName) {\n  var history;\n  if (backBehavior === 'history') {\n    var currentKey = state.routes[index].key;\n    history = state.history.filter(function (it) {\n      return it.type === 'route' ? it.key !== currentKey : false;\n    }).concat({\n      type: TYPE_ROUTE,\n      key: currentKey\n    });\n  } else {\n    history = getRouteHistory(state.routes, index, backBehavior, initialRouteName);\n  }\n  return _objectSpread(_objectSpread({}, state), {}, {\n    index: index,\n    history: history\n  });\n};\nfunction TabRouter(_ref) {\n  var initialRouteName = _ref.initialRouteName,\n    _ref$backBehavior = _ref.backBehavior,\n    backBehavior = _ref$backBehavior === void 0 ? 'firstRoute' : _ref$backBehavior;\n  var router = _objectSpread(_objectSpread({}, _BaseRouter.default), {}, {\n    type: 'tab',\n    getInitialState: function getInitialState(_ref2) {\n      var routeNames = _ref2.routeNames,\n        routeParamList = _ref2.routeParamList;\n      var index = initialRouteName !== undefined && routeNames.includes(initialRouteName) ? routeNames.indexOf(initialRouteName) : 0;\n      var routes = routeNames.map(function (name) {\n        return {\n          name: name,\n          key: name + \"-\" + (0, _nonSecure.nanoid)(),\n          params: routeParamList[name]\n        };\n      });\n      var history = getRouteHistory(routes, index, backBehavior, initialRouteName);\n      return {\n        stale: false,\n        type: 'tab',\n        key: \"tab-\" + (0, _nonSecure.nanoid)(),\n        index: index,\n        routeNames: routeNames,\n        history: history,\n        routes: routes\n      };\n    },\n    getRehydratedState: function getRehydratedState(partialState, _ref3) {\n      var routeNames = _ref3.routeNames,\n        routeParamList = _ref3.routeParamList;\n      var _state$routes, _state$index, _state$history$filter, _state$history;\n      var state = partialState;\n      if (state.stale === false) {\n        return state;\n      }\n      var routes = routeNames.map(function (name) {\n        var route = state.routes.find(function (r) {\n          return r.name === name;\n        });\n        return _objectSpread(_objectSpread({}, route), {}, {\n          name: name,\n          key: route && route.name === name && route.key ? route.key : name + \"-\" + (0, _nonSecure.nanoid)(),\n          params: routeParamList[name] !== undefined ? _objectSpread(_objectSpread({}, routeParamList[name]), route ? route.params : undefined) : route ? route.params : undefined\n        });\n      });\n      var index = Math.min(Math.max(routeNames.indexOf((_state$routes = state.routes[(_state$index = state === null || state === void 0 ? void 0 : state.index) !== null && _state$index !== void 0 ? _state$index : 0]) === null || _state$routes === void 0 ? void 0 : _state$routes.name), 0), routes.length - 1);\n      var history = (_state$history$filter = (_state$history = state.history) === null || _state$history === void 0 ? void 0 : _state$history.filter(function (it) {\n        return routes.find(function (r) {\n          return r.key === it.key;\n        });\n      })) !== null && _state$history$filter !== void 0 ? _state$history$filter : [];\n      return changeIndex({\n        stale: false,\n        type: 'tab',\n        key: \"tab-\" + (0, _nonSecure.nanoid)(),\n        index: index,\n        routeNames: routeNames,\n        history: history,\n        routes: routes\n      }, index, backBehavior, initialRouteName);\n    },\n    getStateForRouteNamesChange: function getStateForRouteNamesChange(state, _ref4) {\n      var routeNames = _ref4.routeNames,\n        routeParamList = _ref4.routeParamList;\n      var routes = routeNames.map(function (name) {\n        return state.routes.find(function (r) {\n          return r.name === name;\n        }) || {\n          name: name,\n          key: name + \"-\" + (0, _nonSecure.nanoid)(),\n          params: routeParamList[name]\n        };\n      });\n      var index = Math.max(0, routeNames.indexOf(state.routes[state.index].name));\n      var history = state.history.filter(function (it) {\n        return it.type !== 'route' || routes.find(function (r) {\n          return r.key === it.key;\n        });\n      });\n      if (!history.length) {\n        history = getRouteHistory(routes, index, backBehavior, initialRouteName);\n      }\n      return _objectSpread(_objectSpread({}, state), {}, {\n        history: history,\n        routeNames: routeNames,\n        routes: routes,\n        index: index\n      });\n    },\n    getStateForRouteFocus: function getStateForRouteFocus(state, key) {\n      var index = state.routes.findIndex(function (r) {\n        return r.key === key;\n      });\n      if (index === -1 || index === state.index) {\n        return state;\n      }\n      return changeIndex(state, index, backBehavior, initialRouteName);\n    },\n    getStateForAction: function getStateForAction(state, action, _ref5) {\n      var routeParamList = _ref5.routeParamList;\n      switch (action.type) {\n        case 'JUMP_TO':\n        case 'NAVIGATE':\n          {\n            var index = -1;\n            if (action.type === 'NAVIGATE' && action.payload.key) {\n              index = state.routes.findIndex(function (route) {\n                return route.key === action.payload.key;\n              });\n            } else {\n              index = state.routes.findIndex(function (route) {\n                return route.name === action.payload.name;\n              });\n            }\n            if (index === -1) {\n              return null;\n            }\n            return changeIndex(_objectSpread(_objectSpread({}, state), {}, {\n              routes: state.routes.map(function (route, i) {\n                if (i !== index) {\n                  return route;\n                }\n                var params;\n                if (action.type === 'NAVIGATE' && action.payload.merge) {\n                  params = action.payload.params !== undefined || routeParamList[route.name] !== undefined ? _objectSpread(_objectSpread(_objectSpread({}, routeParamList[route.name]), route.params), action.payload.params) : route.params;\n                } else {\n                  params = routeParamList[route.name] !== undefined ? _objectSpread(_objectSpread({}, routeParamList[route.name]), action.payload.params) : action.payload.params;\n                }\n                var path = action.type === 'NAVIGATE' && action.payload.path != null ? action.payload.path : route.path;\n                return params !== route.params || path !== route.path ? _objectSpread(_objectSpread({}, route), {}, {\n                  path: path,\n                  params: params\n                }) : route;\n              })\n            }), index, backBehavior, initialRouteName);\n          }\n        case 'GO_BACK':\n          {\n            if (state.history.length === 1) {\n              return null;\n            }\n            var previousKey = state.history[state.history.length - 2].key;\n            var _index = state.routes.findIndex(function (route) {\n              return route.key === previousKey;\n            });\n            if (_index === -1) {\n              return null;\n            }\n            return _objectSpread(_objectSpread({}, state), {}, {\n              history: state.history.slice(0, -1),\n              index: _index\n            });\n          }\n        default:\n          return _BaseRouter.default.getStateForAction(state, action);\n      }\n    },\n    shouldActionChangeFocus: function shouldActionChangeFocus(action) {\n      return action.type === 'NAVIGATE';\n    },\n    actionCreators: TabActions\n  });\n  return router;\n}","map":{"version":3,"names":["_nonSecure","require","_BaseRouter","_interopRequireDefault","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty2","default","getOwnPropertyDescriptors","defineProperties","defineProperty","TYPE_ROUTE","TabActions","jumpTo","name","params","type","payload","exports","getRouteHistory","routes","index","backBehavior","initialRouteName","history","key","initialRouteIndex","i","unshift","findIndex","route","changeIndex","state","currentKey","it","concat","TabRouter","_ref","_ref$backBehavior","router","BaseRouter","getInitialState","_ref2","routeNames","routeParamList","undefined","includes","indexOf","map","nanoid","stale","getRehydratedState","partialState","_ref3","_state$routes","_state$index","_state$history$filter","_state$history","find","Math","min","max","getStateForRouteNamesChange","_ref4","getStateForRouteFocus","getStateForAction","action","_ref5","merge","path","previousKey","slice","shouldActionChangeFocus","actionCreators"],"sources":["C:\\Users\\DELL\\Downloads\\ltmobile\\ltmobile\\muvi-master\\node_modules\\@react-navigation\\routers\\lib\\module\\TabRouter.tsx"],"sourcesContent":["import { nanoid } from 'nanoid/non-secure';\n\nimport BaseRouter from './BaseRouter';\nimport type {\n  CommonNavigationAction,\n  DefaultRouterOptions,\n  NavigationState,\n  ParamListBase,\n  PartialState,\n  Route,\n  Router,\n} from './types';\n\nexport type TabActionType = {\n  type: 'JUMP_TO';\n  payload: { name: string; params?: object };\n  source?: string;\n  target?: string;\n};\n\nexport type BackBehavior =\n  | 'initialRoute'\n  | 'firstRoute'\n  | 'history'\n  | 'order'\n  | 'none';\n\nexport type TabRouterOptions = DefaultRouterOptions & {\n  backBehavior?: BackBehavior;\n};\n\nexport type TabNavigationState<ParamList extends ParamListBase> = Omit<\n  NavigationState<ParamList>,\n  'history'\n> & {\n  /**\n   * Type of the router, in this case, it's tab.\n   */\n  type: 'tab';\n  /**\n   * List of previously visited route keys.\n   */\n  history: { type: 'route'; key: string }[];\n};\n\nexport type TabActionHelpers<ParamList extends ParamListBase> = {\n  /**\n   * Jump to an existing tab.\n   *\n   * @param name Name of the route for the tab.\n   * @param [params] Params object for the route.\n   */\n  jumpTo<RouteName extends Extract<keyof ParamList, string>>(\n    ...args: undefined extends ParamList[RouteName]\n      ? [screen: RouteName] | [screen: RouteName, params: ParamList[RouteName]]\n      : [screen: RouteName, params: ParamList[RouteName]]\n  ): void;\n};\n\nconst TYPE_ROUTE = 'route' as const;\n\nexport const TabActions = {\n  jumpTo(name: string, params?: object): TabActionType {\n    return { type: 'JUMP_TO', payload: { name, params } };\n  },\n};\n\nconst getRouteHistory = (\n  routes: Route<string>[],\n  index: number,\n  backBehavior: BackBehavior,\n  initialRouteName: string | undefined\n) => {\n  const history = [{ type: TYPE_ROUTE, key: routes[index].key }];\n  let initialRouteIndex;\n\n  switch (backBehavior) {\n    case 'order':\n      for (let i = index; i > 0; i--) {\n        history.unshift({ type: TYPE_ROUTE, key: routes[i - 1].key });\n      }\n      break;\n    case 'firstRoute':\n      if (index !== 0) {\n        history.unshift({\n          type: TYPE_ROUTE,\n          key: routes[0].key,\n        });\n      }\n      break;\n    case 'initialRoute':\n      initialRouteIndex = routes.findIndex(\n        (route) => route.name === initialRouteName\n      );\n      initialRouteIndex = initialRouteIndex === -1 ? 0 : initialRouteIndex;\n\n      if (index !== initialRouteIndex) {\n        history.unshift({\n          type: TYPE_ROUTE,\n          key: routes[initialRouteIndex].key,\n        });\n      }\n      break;\n    case 'history':\n      // The history will fill up on navigation\n      break;\n  }\n\n  return history;\n};\n\nconst changeIndex = (\n  state: TabNavigationState<ParamListBase>,\n  index: number,\n  backBehavior: BackBehavior,\n  initialRouteName: string | undefined\n) => {\n  let history;\n\n  if (backBehavior === 'history') {\n    const currentKey = state.routes[index].key;\n\n    history = state.history\n      .filter((it) => (it.type === 'route' ? it.key !== currentKey : false))\n      .concat({ type: TYPE_ROUTE, key: currentKey });\n  } else {\n    history = getRouteHistory(\n      state.routes,\n      index,\n      backBehavior,\n      initialRouteName\n    );\n  }\n\n  return {\n    ...state,\n    index,\n    history,\n  };\n};\n\nexport default function TabRouter({\n  initialRouteName,\n  backBehavior = 'firstRoute',\n}: TabRouterOptions) {\n  const router: Router<\n    TabNavigationState<ParamListBase>,\n    TabActionType | CommonNavigationAction\n  > = {\n    ...BaseRouter,\n\n    type: 'tab',\n\n    getInitialState({ routeNames, routeParamList }) {\n      const index =\n        initialRouteName !== undefined && routeNames.includes(initialRouteName)\n          ? routeNames.indexOf(initialRouteName)\n          : 0;\n\n      const routes = routeNames.map((name) => ({\n        name,\n        key: `${name}-${nanoid()}`,\n        params: routeParamList[name],\n      }));\n\n      const history = getRouteHistory(\n        routes,\n        index,\n        backBehavior,\n        initialRouteName\n      );\n\n      return {\n        stale: false,\n        type: 'tab',\n        key: `tab-${nanoid()}`,\n        index,\n        routeNames,\n        history,\n        routes,\n      };\n    },\n\n    getRehydratedState(partialState, { routeNames, routeParamList }) {\n      let state = partialState;\n\n      if (state.stale === false) {\n        return state;\n      }\n\n      const routes = routeNames.map((name) => {\n        const route = (\n          state as PartialState<TabNavigationState<ParamListBase>>\n        ).routes.find((r) => r.name === name);\n\n        return {\n          ...route,\n          name,\n          key:\n            route && route.name === name && route.key\n              ? route.key\n              : `${name}-${nanoid()}`,\n          params:\n            routeParamList[name] !== undefined\n              ? {\n                  ...routeParamList[name],\n                  ...(route ? route.params : undefined),\n                }\n              : route\n              ? route.params\n              : undefined,\n        } as Route<string>;\n      });\n\n      const index = Math.min(\n        Math.max(routeNames.indexOf(state.routes[state?.index ?? 0]?.name), 0),\n        routes.length - 1\n      );\n\n      const history =\n        state.history?.filter((it) => routes.find((r) => r.key === it.key)) ??\n        [];\n\n      return changeIndex(\n        {\n          stale: false,\n          type: 'tab',\n          key: `tab-${nanoid()}`,\n          index,\n          routeNames,\n          history,\n          routes,\n        },\n        index,\n        backBehavior,\n        initialRouteName\n      );\n    },\n\n    getStateForRouteNamesChange(state, { routeNames, routeParamList }) {\n      const routes = routeNames.map(\n        (name) =>\n          state.routes.find((r) => r.name === name) || {\n            name,\n            key: `${name}-${nanoid()}`,\n            params: routeParamList[name],\n          }\n      );\n\n      const index = Math.max(\n        0,\n        routeNames.indexOf(state.routes[state.index].name)\n      );\n\n      let history = state.history.filter(\n        // Type will always be 'route' for tabs, but could be different in a router extending this (e.g. drawer)\n        (it) => it.type !== 'route' || routes.find((r) => r.key === it.key)\n      );\n\n      if (!history.length) {\n        history = getRouteHistory(\n          routes,\n          index,\n          backBehavior,\n          initialRouteName\n        );\n      }\n\n      return {\n        ...state,\n        history,\n        routeNames,\n        routes,\n        index,\n      };\n    },\n\n    getStateForRouteFocus(state, key) {\n      const index = state.routes.findIndex((r) => r.key === key);\n\n      if (index === -1 || index === state.index) {\n        return state;\n      }\n\n      return changeIndex(state, index, backBehavior, initialRouteName);\n    },\n\n    getStateForAction(state, action, { routeParamList }) {\n      switch (action.type) {\n        case 'JUMP_TO':\n        case 'NAVIGATE': {\n          let index = -1;\n\n          if (action.type === 'NAVIGATE' && action.payload.key) {\n            index = state.routes.findIndex(\n              (route) => route.key === action.payload.key\n            );\n          } else {\n            index = state.routes.findIndex(\n              (route) => route.name === action.payload.name\n            );\n          }\n\n          if (index === -1) {\n            return null;\n          }\n\n          return changeIndex(\n            {\n              ...state,\n              routes: state.routes.map((route, i) => {\n                if (i !== index) {\n                  return route;\n                }\n\n                let params;\n\n                if (action.type === 'NAVIGATE' && action.payload.merge) {\n                  params =\n                    action.payload.params !== undefined ||\n                    routeParamList[route.name] !== undefined\n                      ? {\n                          ...routeParamList[route.name],\n                          ...route.params,\n                          ...action.payload.params,\n                        }\n                      : route.params;\n                } else {\n                  params =\n                    routeParamList[route.name] !== undefined\n                      ? {\n                          ...routeParamList[route.name],\n                          ...action.payload.params,\n                        }\n                      : action.payload.params;\n                }\n\n                const path =\n                  action.type === 'NAVIGATE' && action.payload.path != null\n                    ? action.payload.path\n                    : route.path;\n\n                return params !== route.params || path !== route.path\n                  ? { ...route, path, params }\n                  : route;\n              }),\n            },\n            index,\n            backBehavior,\n            initialRouteName\n          );\n        }\n\n        case 'GO_BACK': {\n          if (state.history.length === 1) {\n            return null;\n          }\n\n          const previousKey = state.history[state.history.length - 2].key;\n          const index = state.routes.findIndex(\n            (route) => route.key === previousKey\n          );\n\n          if (index === -1) {\n            return null;\n          }\n\n          return {\n            ...state,\n            history: state.history.slice(0, -1),\n            index,\n          };\n        }\n\n        default:\n          return BaseRouter.getStateForAction(state, action);\n      }\n    },\n\n    shouldActionChangeFocus(action) {\n      return action.type === 'NAVIGATE';\n    },\n\n    actionCreators: TabActions,\n  };\n\n  return router;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}