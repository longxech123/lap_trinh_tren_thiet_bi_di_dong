{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = StackRouter;\nexports.StackActions = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _nonSecure = require(\"nanoid/non-secure\");\nvar _BaseRouter = _interopRequireDefault(require(\"./BaseRouter\"));\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar StackActions = {\n  replace: function replace(name, params) {\n    return {\n      type: 'REPLACE',\n      payload: {\n        name: name,\n        params: params\n      }\n    };\n  },\n  push: function push(name, params) {\n    return {\n      type: 'PUSH',\n      payload: {\n        name: name,\n        params: params\n      }\n    };\n  },\n  pop: function pop() {\n    var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    return {\n      type: 'POP',\n      payload: {\n        count: count\n      }\n    };\n  },\n  popToTop: function popToTop() {\n    return {\n      type: 'POP_TO_TOP'\n    };\n  }\n};\nexports.StackActions = StackActions;\nfunction StackRouter(options) {\n  var router = _objectSpread(_objectSpread({}, _BaseRouter.default), {}, {\n    type: 'stack',\n    getInitialState: function getInitialState(_ref) {\n      var routeNames = _ref.routeNames,\n        routeParamList = _ref.routeParamList;\n      var initialRouteName = options.initialRouteName !== undefined && routeNames.includes(options.initialRouteName) ? options.initialRouteName : routeNames[0];\n      return {\n        stale: false,\n        type: 'stack',\n        key: \"stack-\" + (0, _nonSecure.nanoid)(),\n        index: 0,\n        routeNames: routeNames,\n        routes: [{\n          key: initialRouteName + \"-\" + (0, _nonSecure.nanoid)(),\n          name: initialRouteName,\n          params: routeParamList[initialRouteName]\n        }]\n      };\n    },\n    getRehydratedState: function getRehydratedState(partialState, _ref2) {\n      var routeNames = _ref2.routeNames,\n        routeParamList = _ref2.routeParamList;\n      var state = partialState;\n      if (state.stale === false) {\n        return state;\n      }\n      var routes = state.routes.filter(function (route) {\n        return routeNames.includes(route.name);\n      }).map(function (route) {\n        return _objectSpread(_objectSpread({}, route), {}, {\n          key: route.key || route.name + \"-\" + (0, _nonSecure.nanoid)(),\n          params: routeParamList[route.name] !== undefined ? _objectSpread(_objectSpread({}, routeParamList[route.name]), route.params) : route.params\n        });\n      });\n      if (routes.length === 0) {\n        var initialRouteName = options.initialRouteName !== undefined ? options.initialRouteName : routeNames[0];\n        routes.push({\n          key: initialRouteName + \"-\" + (0, _nonSecure.nanoid)(),\n          name: initialRouteName,\n          params: routeParamList[initialRouteName]\n        });\n      }\n      return {\n        stale: false,\n        type: 'stack',\n        key: \"stack-\" + (0, _nonSecure.nanoid)(),\n        index: routes.length - 1,\n        routeNames: routeNames,\n        routes: routes\n      };\n    },\n    getStateForRouteNamesChange: function getStateForRouteNamesChange(state, _ref3) {\n      var routeNames = _ref3.routeNames,\n        routeParamList = _ref3.routeParamList;\n      var routes = state.routes.filter(function (route) {\n        return routeNames.includes(route.name);\n      });\n      if (routes.length === 0) {\n        var initialRouteName = options.initialRouteName !== undefined && routeNames.includes(options.initialRouteName) ? options.initialRouteName : routeNames[0];\n        routes.push({\n          key: initialRouteName + \"-\" + (0, _nonSecure.nanoid)(),\n          name: initialRouteName,\n          params: routeParamList[initialRouteName]\n        });\n      }\n      return _objectSpread(_objectSpread({}, state), {}, {\n        routeNames: routeNames,\n        routes: routes,\n        index: Math.min(state.index, routes.length - 1)\n      });\n    },\n    getStateForRouteFocus: function getStateForRouteFocus(state, key) {\n      var index = state.routes.findIndex(function (r) {\n        return r.key === key;\n      });\n      if (index === -1 || index === state.index) {\n        return state;\n      }\n      return _objectSpread(_objectSpread({}, state), {}, {\n        index: index,\n        routes: state.routes.slice(0, index + 1)\n      });\n    },\n    getStateForAction: function getStateForAction(state, action, options) {\n      var routeParamList = options.routeParamList;\n      switch (action.type) {\n        case 'REPLACE':\n          {\n            var index = action.target === state.key && action.source ? state.routes.findIndex(function (r) {\n              return r.key === action.source;\n            }) : state.index;\n            if (index === -1) {\n              return null;\n            }\n            var _action$payload = action.payload,\n              name = _action$payload.name,\n              key = _action$payload.key,\n              params = _action$payload.params;\n            if (!state.routeNames.includes(name)) {\n              return null;\n            }\n            return _objectSpread(_objectSpread({}, state), {}, {\n              routes: state.routes.map(function (route, i) {\n                return i === index ? {\n                  key: key !== undefined ? key : name + \"-\" + (0, _nonSecure.nanoid)(),\n                  name: name,\n                  params: routeParamList[name] !== undefined ? _objectSpread(_objectSpread({}, routeParamList[name]), params) : params\n                } : route;\n              })\n            });\n          }\n        case 'PUSH':\n          if (state.routeNames.includes(action.payload.name)) {\n            var getId = options.routeGetIdList[action.payload.name];\n            var id = getId === null || getId === void 0 ? void 0 : getId({\n              params: action.payload.params\n            });\n            var route = id ? state.routes.find(function (route) {\n              return route.name === action.payload.name && id === (getId === null || getId === void 0 ? void 0 : getId({\n                params: route.params\n              }));\n            }) : undefined;\n            var routes;\n            if (route) {\n              routes = state.routes.filter(function (r) {\n                return r.key !== route.key;\n              });\n              routes.push(_objectSpread(_objectSpread({}, route), {}, {\n                params: routeParamList[action.payload.name] !== undefined ? _objectSpread(_objectSpread({}, routeParamList[action.payload.name]), action.payload.params) : action.payload.params\n              }));\n            } else {\n              routes = [].concat((0, _toConsumableArray2.default)(state.routes), [{\n                key: action.payload.name + \"-\" + (0, _nonSecure.nanoid)(),\n                name: action.payload.name,\n                params: routeParamList[action.payload.name] !== undefined ? _objectSpread(_objectSpread({}, routeParamList[action.payload.name]), action.payload.params) : action.payload.params\n              }]);\n            }\n            return _objectSpread(_objectSpread({}, state), {}, {\n              index: routes.length - 1,\n              routes: routes\n            });\n          }\n          return null;\n        case 'POP':\n          {\n            var _index = action.target === state.key && action.source ? state.routes.findIndex(function (r) {\n              return r.key === action.source;\n            }) : state.index;\n            if (_index > 0) {\n              var count = Math.max(_index - action.payload.count + 1, 1);\n              var _routes = state.routes.slice(0, count).concat(state.routes.slice(_index + 1));\n              return _objectSpread(_objectSpread({}, state), {}, {\n                index: _routes.length - 1,\n                routes: _routes\n              });\n            }\n            return null;\n          }\n        case 'POP_TO_TOP':\n          return router.getStateForAction(state, {\n            type: 'POP',\n            payload: {\n              count: state.routes.length - 1\n            }\n          }, options);\n        case 'NAVIGATE':\n          if (action.payload.name !== undefined && !state.routeNames.includes(action.payload.name)) {\n            return null;\n          }\n          if (action.payload.key || action.payload.name) {\n            var _action$payload$path;\n            var _index2 = -1;\n            var _getId = action.payload.key === undefined && action.payload.name !== undefined ? options.routeGetIdList[action.payload.name] : undefined;\n            var _id = _getId === null || _getId === void 0 ? void 0 : _getId({\n              params: action.payload.params\n            });\n            if (_id) {\n              _index2 = state.routes.findIndex(function (route) {\n                return route.name === action.payload.name && _id === (_getId === null || _getId === void 0 ? void 0 : _getId({\n                  params: route.params\n                }));\n              });\n            } else if (state.routes[state.index].name === action.payload.name && action.payload.key === undefined || state.routes[state.index].key === action.payload.key) {\n              _index2 = state.index;\n            } else {\n              for (var i = state.routes.length - 1; i >= 0; i--) {\n                if (state.routes[i].name === action.payload.name && action.payload.key === undefined || state.routes[i].key === action.payload.key) {\n                  _index2 = i;\n                  break;\n                }\n              }\n            }\n            if (_index2 === -1 && action.payload.key && action.payload.name === undefined) {\n              return null;\n            }\n            if (_index2 === -1 && action.payload.name !== undefined) {\n              var _action$payload$key;\n              var _routes2 = [].concat((0, _toConsumableArray2.default)(state.routes), [{\n                key: (_action$payload$key = action.payload.key) !== null && _action$payload$key !== void 0 ? _action$payload$key : action.payload.name + \"-\" + (0, _nonSecure.nanoid)(),\n                name: action.payload.name,\n                path: action.payload.path,\n                params: routeParamList[action.payload.name] !== undefined ? _objectSpread(_objectSpread({}, routeParamList[action.payload.name]), action.payload.params) : action.payload.params\n              }]);\n              return _objectSpread(_objectSpread({}, state), {}, {\n                routes: _routes2,\n                index: _routes2.length - 1\n              });\n            }\n            var _route = state.routes[_index2];\n            var _params;\n            if (action.payload.merge) {\n              _params = action.payload.params !== undefined || routeParamList[_route.name] !== undefined ? _objectSpread(_objectSpread(_objectSpread({}, routeParamList[_route.name]), _route.params), action.payload.params) : _route.params;\n            } else {\n              _params = routeParamList[_route.name] !== undefined ? _objectSpread(_objectSpread({}, routeParamList[_route.name]), action.payload.params) : action.payload.params;\n            }\n            return _objectSpread(_objectSpread({}, state), {}, {\n              index: _index2,\n              routes: [].concat((0, _toConsumableArray2.default)(state.routes.slice(0, _index2)), [_params !== _route.params || action.payload.path && action.payload.path !== _route.path ? _objectSpread(_objectSpread({}, _route), {}, {\n                path: (_action$payload$path = action.payload.path) !== null && _action$payload$path !== void 0 ? _action$payload$path : _route.path,\n                params: _params\n              }) : state.routes[_index2]])\n            });\n          }\n          return null;\n        case 'GO_BACK':\n          if (state.index > 0) {\n            return router.getStateForAction(state, {\n              type: 'POP',\n              payload: {\n                count: 1\n              },\n              target: action.target,\n              source: action.source\n            }, options);\n          }\n          return null;\n        default:\n          return _BaseRouter.default.getStateForAction(state, action);\n      }\n    },\n    actionCreators: StackActions\n  });\n  return router;\n}","map":{"version":3,"mappings":"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","names":["StackActions","replace","name","params","type","payload","push","pop","count","popToTop","StackRouter","options","router","BaseRouter","getInitialState","routeNames","routeParamList","initialRouteName","undefined","includes","stale","key","nanoid","index","routes","getRehydratedState","partialState","state","filter","route","map","length","getStateForRouteNamesChange","Math","min","getStateForRouteFocus","findIndex","r","slice","getStateForAction","action","target","source","i","getId","routeGetIdList","id","find","max","concat","path","merge","actionCreators"],"sources":["StackRouter.tsx"],"sourcesContent":["import { nanoid } from 'nanoid/non-secure';\n\nimport BaseRouter from './BaseRouter';\nimport type {\n  CommonNavigationAction,\n  DefaultRouterOptions,\n  NavigationState,\n  ParamListBase,\n  Route,\n  Router,\n} from './types';\n\nexport type StackActionType =\n  | {\n      type: 'REPLACE';\n      payload: { name: string; key?: string | undefined; params?: object };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'PUSH';\n      payload: { name: string; params?: object };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'POP';\n      payload: { count: number };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'POP_TO_TOP';\n      source?: string;\n      target?: string;\n    };\n\nexport type StackRouterOptions = DefaultRouterOptions;\n\nexport type StackNavigationState<ParamList extends ParamListBase> =\n  NavigationState<ParamList> & {\n    /**\n     * Type of the router, in this case, it's stack.\n     */\n    type: 'stack';\n  };\n\nexport type StackActionHelpers<ParamList extends ParamListBase> = {\n  /**\n   * Replace the current route with a new one.\n   *\n   * @param name Route name of the new route.\n   * @param [params] Params object for the new route.\n   */\n  replace<RouteName extends keyof ParamList>(\n    ...args: undefined extends ParamList[RouteName]\n      ? [screen: RouteName] | [screen: RouteName, params: ParamList[RouteName]]\n      : [screen: RouteName, params: ParamList[RouteName]]\n  ): void;\n\n  /**\n   * Push a new screen onto the stack.\n   *\n   * @param name Name of the route for the tab.\n   * @param [params] Params object for the route.\n   */\n  push<RouteName extends keyof ParamList>(\n    ...args: undefined extends ParamList[RouteName]\n      ? [screen: RouteName] | [screen: RouteName, params: ParamList[RouteName]]\n      : [screen: RouteName, params: ParamList[RouteName]]\n  ): void;\n\n  /**\n   * Pop a screen from the stack.\n   */\n  pop(count?: number): void;\n\n  /**\n   * Pop to the first route in the stack, dismissing all other screens.\n   */\n  popToTop(): void;\n};\n\nexport const StackActions = {\n  replace(name: string, params?: object): StackActionType {\n    return { type: 'REPLACE', payload: { name, params } };\n  },\n  push(name: string, params?: object): StackActionType {\n    return { type: 'PUSH', payload: { name, params } };\n  },\n  pop(count: number = 1): StackActionType {\n    return { type: 'POP', payload: { count } };\n  },\n  popToTop(): StackActionType {\n    return { type: 'POP_TO_TOP' };\n  },\n};\n\nexport default function StackRouter(options: StackRouterOptions) {\n  const router: Router<\n    StackNavigationState<ParamListBase>,\n    CommonNavigationAction | StackActionType\n  > = {\n    ...BaseRouter,\n\n    type: 'stack',\n\n    getInitialState({ routeNames, routeParamList }) {\n      const initialRouteName =\n        options.initialRouteName !== undefined &&\n        routeNames.includes(options.initialRouteName)\n          ? options.initialRouteName\n          : routeNames[0];\n\n      return {\n        stale: false,\n        type: 'stack',\n        key: `stack-${nanoid()}`,\n        index: 0,\n        routeNames,\n        routes: [\n          {\n            key: `${initialRouteName}-${nanoid()}`,\n            name: initialRouteName,\n            params: routeParamList[initialRouteName],\n          },\n        ],\n      };\n    },\n\n    getRehydratedState(partialState, { routeNames, routeParamList }) {\n      let state = partialState;\n\n      if (state.stale === false) {\n        return state;\n      }\n\n      const routes = state.routes\n        .filter((route) => routeNames.includes(route.name))\n        .map(\n          (route) =>\n            ({\n              ...route,\n              key: route.key || `${route.name}-${nanoid()}`,\n              params:\n                routeParamList[route.name] !== undefined\n                  ? {\n                      ...routeParamList[route.name],\n                      ...route.params,\n                    }\n                  : route.params,\n            } as Route<string>)\n        );\n\n      if (routes.length === 0) {\n        const initialRouteName =\n          options.initialRouteName !== undefined\n            ? options.initialRouteName\n            : routeNames[0];\n\n        routes.push({\n          key: `${initialRouteName}-${nanoid()}`,\n          name: initialRouteName,\n          params: routeParamList[initialRouteName],\n        });\n      }\n\n      return {\n        stale: false,\n        type: 'stack',\n        key: `stack-${nanoid()}`,\n        index: routes.length - 1,\n        routeNames,\n        routes,\n      };\n    },\n\n    getStateForRouteNamesChange(state, { routeNames, routeParamList }) {\n      const routes = state.routes.filter((route) =>\n        routeNames.includes(route.name)\n      );\n\n      if (routes.length === 0) {\n        const initialRouteName =\n          options.initialRouteName !== undefined &&\n          routeNames.includes(options.initialRouteName)\n            ? options.initialRouteName\n            : routeNames[0];\n\n        routes.push({\n          key: `${initialRouteName}-${nanoid()}`,\n          name: initialRouteName,\n          params: routeParamList[initialRouteName],\n        });\n      }\n\n      return {\n        ...state,\n        routeNames,\n        routes,\n        index: Math.min(state.index, routes.length - 1),\n      };\n    },\n\n    getStateForRouteFocus(state, key) {\n      const index = state.routes.findIndex((r) => r.key === key);\n\n      if (index === -1 || index === state.index) {\n        return state;\n      }\n\n      return {\n        ...state,\n        index,\n        routes: state.routes.slice(0, index + 1),\n      };\n    },\n\n    getStateForAction(state, action, options) {\n      const { routeParamList } = options;\n\n      switch (action.type) {\n        case 'REPLACE': {\n          const index =\n            action.target === state.key && action.source\n              ? state.routes.findIndex((r) => r.key === action.source)\n              : state.index;\n\n          if (index === -1) {\n            return null;\n          }\n\n          const { name, key, params } = action.payload;\n\n          if (!state.routeNames.includes(name)) {\n            return null;\n          }\n\n          return {\n            ...state,\n            routes: state.routes.map((route, i) =>\n              i === index\n                ? {\n                    key: key !== undefined ? key : `${name}-${nanoid()}`,\n                    name,\n                    params:\n                      routeParamList[name] !== undefined\n                        ? {\n                            ...routeParamList[name],\n                            ...params,\n                          }\n                        : params,\n                  }\n                : route\n            ),\n          };\n        }\n\n        case 'PUSH':\n          if (state.routeNames.includes(action.payload.name)) {\n            const getId = options.routeGetIdList[action.payload.name];\n            const id = getId?.({ params: action.payload.params });\n\n            const route = id\n              ? state.routes.find(\n                  (route) =>\n                    route.name === action.payload.name &&\n                    id === getId?.({ params: route.params })\n                )\n              : undefined;\n\n            let routes: Route<string>[];\n\n            if (route) {\n              routes = state.routes.filter((r) => r.key !== route.key);\n              routes.push({\n                ...route,\n                params:\n                  routeParamList[action.payload.name] !== undefined\n                    ? {\n                        ...routeParamList[action.payload.name],\n                        ...action.payload.params,\n                      }\n                    : action.payload.params,\n              });\n            } else {\n              routes = [\n                ...state.routes,\n                {\n                  key: `${action.payload.name}-${nanoid()}`,\n                  name: action.payload.name,\n                  params:\n                    routeParamList[action.payload.name] !== undefined\n                      ? {\n                          ...routeParamList[action.payload.name],\n                          ...action.payload.params,\n                        }\n                      : action.payload.params,\n                },\n              ];\n            }\n\n            return {\n              ...state,\n              index: routes.length - 1,\n              routes,\n            };\n          }\n\n          return null;\n\n        case 'POP': {\n          const index =\n            action.target === state.key && action.source\n              ? state.routes.findIndex((r) => r.key === action.source)\n              : state.index;\n\n          if (index > 0) {\n            const count = Math.max(index - action.payload.count + 1, 1);\n            const routes = state.routes\n              .slice(0, count)\n              .concat(state.routes.slice(index + 1));\n\n            return {\n              ...state,\n              index: routes.length - 1,\n              routes,\n            };\n          }\n\n          return null;\n        }\n\n        case 'POP_TO_TOP':\n          return router.getStateForAction(\n            state,\n            {\n              type: 'POP',\n              payload: { count: state.routes.length - 1 },\n            },\n            options\n          );\n\n        case 'NAVIGATE':\n          if (\n            action.payload.name !== undefined &&\n            !state.routeNames.includes(action.payload.name)\n          ) {\n            return null;\n          }\n\n          if (action.payload.key || action.payload.name) {\n            // If the route already exists, navigate to that\n            let index = -1;\n\n            const getId =\n              // `getId` and `key` can't be used together\n              action.payload.key === undefined &&\n              action.payload.name !== undefined\n                ? options.routeGetIdList[action.payload.name]\n                : undefined;\n            const id = getId?.({ params: action.payload.params });\n\n            if (id) {\n              index = state.routes.findIndex(\n                (route) =>\n                  route.name === action.payload.name &&\n                  id === getId?.({ params: route.params })\n              );\n            } else if (\n              (state.routes[state.index].name === action.payload.name &&\n                action.payload.key === undefined) ||\n              state.routes[state.index].key === action.payload.key\n            ) {\n              index = state.index;\n            } else {\n              for (let i = state.routes.length - 1; i >= 0; i--) {\n                if (\n                  (state.routes[i].name === action.payload.name &&\n                    action.payload.key === undefined) ||\n                  state.routes[i].key === action.payload.key\n                ) {\n                  index = i;\n                  break;\n                }\n              }\n            }\n\n            if (\n              index === -1 &&\n              action.payload.key &&\n              action.payload.name === undefined\n            ) {\n              return null;\n            }\n\n            if (index === -1 && action.payload.name !== undefined) {\n              const routes = [\n                ...state.routes,\n                {\n                  key:\n                    action.payload.key ?? `${action.payload.name}-${nanoid()}`,\n                  name: action.payload.name,\n                  path: action.payload.path,\n                  params:\n                    routeParamList[action.payload.name] !== undefined\n                      ? {\n                          ...routeParamList[action.payload.name],\n                          ...action.payload.params,\n                        }\n                      : action.payload.params,\n                },\n              ];\n\n              return {\n                ...state,\n                routes,\n                index: routes.length - 1,\n              };\n            }\n\n            const route = state.routes[index];\n\n            let params;\n\n            if (action.payload.merge) {\n              params =\n                action.payload.params !== undefined ||\n                routeParamList[route.name] !== undefined\n                  ? {\n                      ...routeParamList[route.name],\n                      ...route.params,\n                      ...action.payload.params,\n                    }\n                  : route.params;\n            } else {\n              params =\n                routeParamList[route.name] !== undefined\n                  ? {\n                      ...routeParamList[route.name],\n                      ...action.payload.params,\n                    }\n                  : action.payload.params;\n            }\n\n            return {\n              ...state,\n              index,\n              routes: [\n                ...state.routes.slice(0, index),\n                params !== route.params ||\n                (action.payload.path && action.payload.path !== route.path)\n                  ? {\n                      ...route,\n                      path: action.payload.path ?? route.path,\n                      params,\n                    }\n                  : state.routes[index],\n              ],\n            };\n          }\n\n          return null;\n\n        case 'GO_BACK':\n          if (state.index > 0) {\n            return router.getStateForAction(\n              state,\n              {\n                type: 'POP',\n                payload: { count: 1 },\n                target: action.target,\n                source: action.source,\n              },\n              options\n            );\n          }\n\n          return null;\n\n        default:\n          return BaseRouter.getStateForAction(state, action);\n      }\n    },\n\n    actionCreators: StackActions,\n  };\n\n  return router;\n}\n"]},"metadata":{},"sourceType":"script"}