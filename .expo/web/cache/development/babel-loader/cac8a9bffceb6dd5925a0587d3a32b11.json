{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.preventAutoHideAsync = preventAutoHideAsync;\nexports.hideAsync = hideAsync;\nexports.hide = hide;\nexports.preventAutoHide = preventAutoHide;\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _core = require(\"@unimodules/core\");\nvar _ExpoSplashScreen = _interopRequireDefault(require(\"./ExpoSplashScreen\"));\nfunction preventAutoHideAsync() {\n  return _regenerator.default.async(function preventAutoHideAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (_ExpoSplashScreen.default.preventAutoHideAsync) {\n            _context.next = 2;\n            break;\n          }\n          throw new _core.UnavailabilityError('expo-splash-screen', 'preventAutoHideAsync');\n        case 2:\n          _context.next = 4;\n          return _regenerator.default.awrap(_ExpoSplashScreen.default.preventAutoHideAsync());\n        case 4:\n          return _context.abrupt(\"return\", _context.sent);\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nfunction hideAsync() {\n  return _regenerator.default.async(function hideAsync$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          if (_ExpoSplashScreen.default.hideAsync) {\n            _context2.next = 2;\n            break;\n          }\n          throw new _core.UnavailabilityError('expo-splash-screen', 'hideAsync');\n        case 2:\n          _context2.next = 4;\n          return _regenerator.default.awrap(_ExpoSplashScreen.default.hideAsync());\n        case 4:\n          return _context2.abrupt(\"return\", _context2.sent);\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nfunction hide() {\n  console.warn('SplashScreen.hide() is deprecated in favour of SplashScreen.hideAsync()');\n  hideAsync();\n}\nfunction preventAutoHide() {\n  console.warn('SplashScreen.preventAutoHide() is deprecated in favour of SplashScreen.preventAutoHideAsync()');\n  preventAutoHideAsync();\n}","map":{"version":3,"mappings":";;;;;;;;;AAAA;AAEA;AAMO,SAAeA,oBAAoB;EAAA;IAAA;MAAA;QAAA;UAAA,IACnCC,yBAAgB,CAACD,oBAAoB;YAAA;YAAA;UAAA;UAAA,MAClC,IAAIE,yBAAmB,CAAC,oBAAoB,EAAE,sBAAsB,CAAC;QAAA;UAAA;UAAA,kCAEhED,yBAAgB,CAACD,oBAAoB,EAAE;QAAA;UAAA;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAS/C,SAAeG,SAAS;EAAA;IAAA;MAAA;QAAA;UAAA,IACxBF,yBAAgB,CAACE,SAAS;YAAA;YAAA;UAAA;UAAA,MACvB,IAAID,yBAAmB,CAAC,oBAAoB,EAAE,WAAW,CAAC;QAAA;UAAA;UAAA,kCAErDD,yBAAgB,CAACE,SAAS,EAAE;QAAA;UAAA;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAOrC,SAAUC,IAAI;EAClBC,OAAO,CAACC,IAAI,CAAC,yEAAyE,CAAC;EACvFH,SAAS,EAAE;AACb;AAMM,SAAUI,eAAe;EAC7BF,OAAO,CAACC,IAAI,CACV,+FAA+F,CAChG;EACDN,oBAAoB,EAAE;AACxB","names":["preventAutoHideAsync","ExpoSplashScreen","UnavailabilityError","hideAsync","hide","console","warn","preventAutoHide"],"sourceRoot":"","sources":["../src/SplashScreen.ts"],"sourcesContent":["import { UnavailabilityError } from '@unimodules/core';\n\nimport ExpoSplashScreen from './ExpoSplashScreen';\n\n// @needsAudit\n/**\n * Makes the native splash screen (configured in `app.json`) remain visible until `hideAsync` is called.\n */\nexport async function preventAutoHideAsync(): Promise<boolean> {\n  if (!ExpoSplashScreen.preventAutoHideAsync) {\n    throw new UnavailabilityError('expo-splash-screen', 'preventAutoHideAsync');\n  }\n  return await ExpoSplashScreen.preventAutoHideAsync();\n}\n\n// @needsAudit\n/**\n * Hides the native splash screen immediately. Be careful to ensure that your app has content ready\n * to display when you hide the splash screen, or you may see a blank screen briefly. See the\n * [\"Usage\"](#usage) section for an example.\n */\nexport async function hideAsync(): Promise<boolean> {\n  if (!ExpoSplashScreen.hideAsync) {\n    throw new UnavailabilityError('expo-splash-screen', 'hideAsync');\n  }\n  return await ExpoSplashScreen.hideAsync();\n}\n\n/**\n * @deprecated Use `SplashScreen.hideAsync()` instead\n * @ignore\n */\nexport function hide(): void {\n  console.warn('SplashScreen.hide() is deprecated in favour of SplashScreen.hideAsync()');\n  hideAsync();\n}\n\n/**\n * @deprecated Use `SplashScreen.preventAutoHideAsync()` instead\n * @ignore\n */\nexport function preventAutoHide(): void {\n  console.warn(\n    'SplashScreen.preventAutoHide() is deprecated in favour of SplashScreen.preventAutoHideAsync()'\n  );\n  preventAutoHideAsync();\n}\n"]},"metadata":{},"sourceType":"script"}